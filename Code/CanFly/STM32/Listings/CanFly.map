Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig) refers to misc.o(.text.NVIC_PriorityGroupConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_Init) refers to misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SetVectorTable) refers to misc.o(.text.NVIC_SetVectorTable) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.text.ADC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_adc.o(.ARM.exidx.text.ADC_DeInit) refers to stm32f10x_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_Init) refers to stm32f10x_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_StructInit) refers to stm32f10x_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_Cmd) refers to stm32f10x_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_DMACmd) refers to stm32f10x_adc.o(.text.ADC_DMACmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to stm32f10x_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ResetCalibration) refers to stm32f10x_adc.o(.text.ADC_ResetCalibration) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetResetCalibrationStatus) refers to stm32f10x_adc.o(.text.ADC_GetResetCalibrationStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_StartCalibration) refers to stm32f10x_adc.o(.text.ADC_StartCalibration) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetCalibrationStatus) refers to stm32f10x_adc.o(.text.ADC_GetCalibrationStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd) refers to stm32f10x_adc.o(.text.ADC_SoftwareStartConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartConvStatus) refers to stm32f10x_adc.o(.text.ADC_GetSoftwareStartConvStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_DiscModeChannelCountConfig) refers to stm32f10x_adc.o(.text.ADC_DiscModeChannelCountConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_DiscModeCmd) refers to stm32f10x_adc.o(.text.ADC_DiscModeCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig) refers to stm32f10x_adc.o(.text.ADC_RegularChannelConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigConvCmd) refers to stm32f10x_adc.o(.text.ADC_ExternalTrigConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to stm32f10x_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetDualModeConversionValue) refers to stm32f10x_adc.o(.text.ADC_GetDualModeConversionValue) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_AutoInjectedConvCmd) refers to stm32f10x_adc.o(.text.ADC_AutoInjectedConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedDiscModeCmd) refers to stm32f10x_adc.o(.text.ADC_InjectedDiscModeCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvConfig) refers to stm32f10x_adc.o(.text.ADC_ExternalTrigInjectedConvConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvCmd) refers to stm32f10x_adc.o(.text.ADC_ExternalTrigInjectedConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_SoftwareStartInjectedConvCmd) refers to stm32f10x_adc.o(.text.ADC_SoftwareStartInjectedConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartInjectedConvCmdStatus) refers to stm32f10x_adc.o(.text.ADC_GetSoftwareStartInjectedConvCmdStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedChannelConfig) refers to stm32f10x_adc.o(.text.ADC_InjectedChannelConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedSequencerLengthConfig) refers to stm32f10x_adc.o(.text.ADC_InjectedSequencerLengthConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_SetInjectedOffset) refers to stm32f10x_adc.o(.text.ADC_SetInjectedOffset) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetInjectedConversionValue) refers to stm32f10x_adc.o(.text.ADC_GetInjectedConversionValue) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to stm32f10x_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to stm32f10x_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to stm32f10x_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_TempSensorVrefintCmd) refers to stm32f10x_adc.o(.text.ADC_TempSensorVrefintCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to stm32f10x_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to stm32f10x_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to stm32f10x_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to stm32f10x_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_bkp.o(.text.BKP_DeInit) refers to stm32f10x_rcc.o(.text.RCC_BackupResetCmd) for RCC_BackupResetCmd
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_DeInit) refers to stm32f10x_bkp.o(.text.BKP_DeInit) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_TamperPinLevelConfig) refers to stm32f10x_bkp.o(.text.BKP_TamperPinLevelConfig) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_TamperPinCmd) refers to stm32f10x_bkp.o(.text.BKP_TamperPinCmd) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_ITConfig) refers to stm32f10x_bkp.o(.text.BKP_ITConfig) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_RTCOutputConfig) refers to stm32f10x_bkp.o(.text.BKP_RTCOutputConfig) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_SetRTCCalibrationValue) refers to stm32f10x_bkp.o(.text.BKP_SetRTCCalibrationValue) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_WriteBackupRegister) refers to stm32f10x_bkp.o(.text.BKP_WriteBackupRegister) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_ReadBackupRegister) refers to stm32f10x_bkp.o(.text.BKP_ReadBackupRegister) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_GetFlagStatus) refers to stm32f10x_bkp.o(.text.BKP_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_ClearFlag) refers to stm32f10x_bkp.o(.text.BKP_ClearFlag) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_GetITStatus) refers to stm32f10x_bkp.o(.text.BKP_GetITStatus) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_ClearITPendingBit) refers to stm32f10x_bkp.o(.text.BKP_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_can.o(.text.CAN_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_can.o(.ARM.exidx.text.CAN_DeInit) refers to stm32f10x_can.o(.text.CAN_DeInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Init) refers to stm32f10x_can.o(.text.CAN_Init) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_FilterInit) refers to stm32f10x_can.o(.text.CAN_FilterInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_StructInit) refers to stm32f10x_can.o(.text.CAN_StructInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_SlaveStartBank) refers to stm32f10x_can.o(.text.CAN_SlaveStartBank) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_DBGFreeze) refers to stm32f10x_can.o(.text.CAN_DBGFreeze) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_TTComModeCmd) refers to stm32f10x_can.o(.text.CAN_TTComModeCmd) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Transmit) refers to stm32f10x_can.o(.text.CAN_Transmit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_TransmitStatus) refers to stm32f10x_can.o(.text.CAN_TransmitStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_CancelTransmit) refers to stm32f10x_can.o(.text.CAN_CancelTransmit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Receive) refers to stm32f10x_can.o(.text.CAN_Receive) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_FIFORelease) refers to stm32f10x_can.o(.text.CAN_FIFORelease) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_MessagePending) refers to stm32f10x_can.o(.text.CAN_MessagePending) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_OperatingModeRequest) refers to stm32f10x_can.o(.text.CAN_OperatingModeRequest) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Sleep) refers to stm32f10x_can.o(.text.CAN_Sleep) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_WakeUp) refers to stm32f10x_can.o(.text.CAN_WakeUp) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetLastErrorCode) refers to stm32f10x_can.o(.text.CAN_GetLastErrorCode) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetReceiveErrorCounter) refers to stm32f10x_can.o(.text.CAN_GetReceiveErrorCounter) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetLSBTransmitErrorCounter) refers to stm32f10x_can.o(.text.CAN_GetLSBTransmitErrorCounter) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ITConfig) refers to stm32f10x_can.o(.text.CAN_ITConfig) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetFlagStatus) refers to stm32f10x_can.o(.text.CAN_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ClearFlag) refers to stm32f10x_can.o(.text.CAN_ClearFlag) for [Anonymous Symbol]
    stm32f10x_can.o(.text.CAN_GetITStatus) refers to stm32f10x_can.o(.text.CheckITStatus) for CheckITStatus
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetITStatus) refers to stm32f10x_can.o(.text.CAN_GetITStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CheckITStatus) refers to stm32f10x_can.o(.text.CheckITStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ClearITPendingBit) refers to stm32f10x_can.o(.text.CAN_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_cec.o(.text.CEC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_cec.o(.ARM.exidx.text.CEC_DeInit) refers to stm32f10x_cec.o(.text.CEC_DeInit) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_Init) refers to stm32f10x_cec.o(.text.CEC_Init) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_Cmd) refers to stm32f10x_cec.o(.text.CEC_Cmd) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_ITConfig) refers to stm32f10x_cec.o(.text.CEC_ITConfig) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_OwnAddressConfig) refers to stm32f10x_cec.o(.text.CEC_OwnAddressConfig) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_SetPrescaler) refers to stm32f10x_cec.o(.text.CEC_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_SendDataByte) refers to stm32f10x_cec.o(.text.CEC_SendDataByte) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_ReceiveDataByte) refers to stm32f10x_cec.o(.text.CEC_ReceiveDataByte) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_StartOfMessage) refers to stm32f10x_cec.o(.text.CEC_StartOfMessage) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_EndOfMessageCmd) refers to stm32f10x_cec.o(.text.CEC_EndOfMessageCmd) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_GetFlagStatus) refers to stm32f10x_cec.o(.text.CEC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_ClearFlag) refers to stm32f10x_cec.o(.text.CEC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_GetITStatus) refers to stm32f10x_cec.o(.text.CEC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_ClearITPendingBit) refers to stm32f10x_cec.o(.text.CEC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_ResetDR) refers to stm32f10x_crc.o(.text.CRC_ResetDR) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_CalcCRC) refers to stm32f10x_crc.o(.text.CRC_CalcCRC) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC) refers to stm32f10x_crc.o(.text.CRC_CalcBlockCRC) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_GetCRC) refers to stm32f10x_crc.o(.text.CRC_GetCRC) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_SetIDRegister) refers to stm32f10x_crc.o(.text.CRC_SetIDRegister) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_GetIDRegister) refers to stm32f10x_crc.o(.text.CRC_GetIDRegister) for [Anonymous Symbol]
    stm32f10x_dac.o(.text.DAC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_dac.o(.ARM.exidx.text.DAC_DeInit) refers to stm32f10x_dac.o(.text.DAC_DeInit) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_Init) refers to stm32f10x_dac.o(.text.DAC_Init) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_StructInit) refers to stm32f10x_dac.o(.text.DAC_StructInit) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_Cmd) refers to stm32f10x_dac.o(.text.DAC_Cmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_DMACmd) refers to stm32f10x_dac.o(.text.DAC_DMACmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_SoftwareTriggerCmd) refers to stm32f10x_dac.o(.text.DAC_SoftwareTriggerCmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_DualSoftwareTriggerCmd) refers to stm32f10x_dac.o(.text.DAC_DualSoftwareTriggerCmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_WaveGenerationCmd) refers to stm32f10x_dac.o(.text.DAC_WaveGenerationCmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_SetChannel1Data) refers to stm32f10x_dac.o(.text.DAC_SetChannel1Data) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_SetChannel2Data) refers to stm32f10x_dac.o(.text.DAC_SetChannel2Data) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_SetDualChannelData) refers to stm32f10x_dac.o(.text.DAC_SetDualChannelData) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_GetDataOutputValue) refers to stm32f10x_dac.o(.text.DAC_GetDataOutputValue) for [Anonymous Symbol]
    stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetREVID) refers to stm32f10x_dbgmcu.o(.text.DBGMCU_GetREVID) for [Anonymous Symbol]
    stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetDEVID) refers to stm32f10x_dbgmcu.o(.text.DBGMCU_GetDEVID) for [Anonymous Symbol]
    stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_Config) refers to stm32f10x_dbgmcu.o(.text.DBGMCU_Config) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_DeInit) refers to stm32f10x_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_Init) refers to stm32f10x_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_StructInit) refers to stm32f10x_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_Cmd) refers to stm32f10x_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_ITConfig) refers to stm32f10x_dma.o(.text.DMA_ITConfig) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter) refers to stm32f10x_dma.o(.text.DMA_SetCurrDataCounter) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter) refers to stm32f10x_dma.o(.text.DMA_GetCurrDataCounter) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to stm32f10x_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_ClearFlag) refers to stm32f10x_dma.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_GetITStatus) refers to stm32f10x_dma.o(.text.DMA_GetITStatus) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit) refers to stm32f10x_dma.o(.text.DMA_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to stm32f10x_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_Init) refers to stm32f10x_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to stm32f10x_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to stm32f10x_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to stm32f10x_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to stm32f10x_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to stm32f10x_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to stm32f10x_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to stm32f10x_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_HalfCycleAccessCmd) refers to stm32f10x_flash.o(.text.FLASH_HalfCycleAccessCmd) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to stm32f10x_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to stm32f10x_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_UnlockBank1) refers to stm32f10x_flash.o(.text.FLASH_UnlockBank1) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_Lock) refers to stm32f10x_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_LockBank1) refers to stm32f10x_flash.o(.text.FLASH_LockBank1) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ErasePage) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to stm32f10x_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32f10x_flash.o(.text.FLASH_GetBank1Status) for FLASH_GetBank1Status
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_EraseAllPages) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to stm32f10x_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_EraseAllBank1Pages) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastBank1Operation) for FLASH_WaitForLastBank1Operation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseAllBank1Pages) refers to stm32f10x_flash.o(.text.FLASH_EraseAllBank1Pages) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_WaitForLastBank1Operation) refers to stm32f10x_flash.o(.text.FLASH_GetBank1Status) for FLASH_GetBank1Status
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_WaitForLastBank1Operation) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastBank1Operation) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_EraseOptionBytes) refers to stm32f10x_flash.o(.text.FLASH_GetReadOutProtectionStatus) for FLASH_GetReadOutProtectionStatus
    stm32f10x_flash.o(.text.FLASH_EraseOptionBytes) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseOptionBytes) refers to stm32f10x_flash.o(.text.FLASH_EraseOptionBytes) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetReadOutProtectionStatus) refers to stm32f10x_flash.o(.text.FLASH_GetReadOutProtectionStatus) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ProgramWord) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramWord) refers to stm32f10x_flash.o(.text.FLASH_ProgramWord) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ProgramHalfWord) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord) refers to stm32f10x_flash.o(.text.FLASH_ProgramHalfWord) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ProgramOptionByteData) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByteData) refers to stm32f10x_flash.o(.text.FLASH_ProgramOptionByteData) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_EnableWriteProtection) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_EnableWriteProtection) refers to stm32f10x_flash.o(.text.FLASH_EnableWriteProtection) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ReadOutProtection) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ReadOutProtection) refers to stm32f10x_flash.o(.text.FLASH_ReadOutProtection) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_UserOptionByteConfig) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_UserOptionByteConfig) refers to stm32f10x_flash.o(.text.FLASH_UserOptionByteConfig) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetUserOptionByte) refers to stm32f10x_flash.o(.text.FLASH_GetUserOptionByte) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetWriteProtectionOptionByte) refers to stm32f10x_flash.o(.text.FLASH_GetWriteProtectionOptionByte) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus) refers to stm32f10x_flash.o(.text.FLASH_GetPrefetchBufferStatus) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to stm32f10x_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to stm32f10x_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to stm32f10x_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to stm32f10x_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetBank1Status) refers to stm32f10x_flash.o(.text.FLASH_GetBank1Status) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMDeInit) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMDeInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDDeInit) refers to stm32f10x_fsmc.o(.text.FSMC_NANDDeInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDDeInit) refers to stm32f10x_fsmc.o(.text.FSMC_PCCARDDeInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMInit) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDInit) refers to stm32f10x_fsmc.o(.text.FSMC_NANDInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDInit) refers to stm32f10x_fsmc.o(.text.FSMC_PCCARDInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMStructInit) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMStructInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDStructInit) refers to stm32f10x_fsmc.o(.text.FSMC_NANDStructInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDStructInit) refers to stm32f10x_fsmc.o(.text.FSMC_PCCARDStructInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMCmd) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMCmd) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDCmd) refers to stm32f10x_fsmc.o(.text.FSMC_NANDCmd) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDCmd) refers to stm32f10x_fsmc.o(.text.FSMC_PCCARDCmd) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDECCCmd) refers to stm32f10x_fsmc.o(.text.FSMC_NANDECCCmd) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetECC) refers to stm32f10x_fsmc.o(.text.FSMC_GetECC) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ITConfig) refers to stm32f10x_fsmc.o(.text.FSMC_ITConfig) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetFlagStatus) refers to stm32f10x_fsmc.o(.text.FSMC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ClearFlag) refers to stm32f10x_fsmc.o(.text.FSMC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetITStatus) refers to stm32f10x_fsmc.o(.text.FSMC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ClearITPendingBit) refers to stm32f10x_fsmc.o(.text.FSMC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.text.GPIO_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to stm32f10x_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.text.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit) refers to stm32f10x_gpio.o(.text.GPIO_AFIODeInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to stm32f10x_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to stm32f10x_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Write) refers to stm32f10x_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to stm32f10x_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputConfig) refers to stm32f10x_gpio.o(.text.GPIO_EventOutputConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputCmd) refers to stm32f10x_gpio.o(.text.GPIO_EventOutputCmd) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinRemapConfig) refers to stm32f10x_gpio.o(.text.GPIO_PinRemapConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EXTILineConfig) refers to stm32f10x_gpio.o(.text.GPIO_EXTILineConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ETH_MediaInterfaceConfig) refers to stm32f10x_gpio.o(.text.GPIO_ETH_MediaInterfaceConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.text.I2C_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to stm32f10x_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    stm32f10x_i2c.o(.text.I2C_Init) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_Init) refers to stm32f10x_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to stm32f10x_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to stm32f10x_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_DMACmd) refers to stm32f10x_i2c.o(.text.I2C_DMACmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_DMALastTransferCmd) refers to stm32f10x_i2c.o(.text.I2C_DMALastTransferCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GenerateSTART) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTART) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig) refers to stm32f10x_i2c.o(.text.I2C_AcknowledgeConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config) refers to stm32f10x_i2c.o(.text.I2C_OwnAddress2Config) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd) refers to stm32f10x_i2c.o(.text.I2C_DualAddressCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to stm32f10x_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ITConfig) refers to stm32f10x_i2c.o(.text.I2C_ITConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_SendData) refers to stm32f10x_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to stm32f10x_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_Send7bitAddress) refers to stm32f10x_i2c.o(.text.I2C_Send7bitAddress) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to stm32f10x_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd) refers to stm32f10x_i2c.o(.text.I2C_SoftwareResetCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_NACKPositionConfig) refers to stm32f10x_i2c.o(.text.I2C_NACKPositionConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_SMBusAlertConfig) refers to stm32f10x_i2c.o(.text.I2C_SMBusAlertConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_TransmitPEC) refers to stm32f10x_i2c.o(.text.I2C_TransmitPEC) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_PECPositionConfig) refers to stm32f10x_i2c.o(.text.I2C_PECPositionConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_CalculatePEC) refers to stm32f10x_i2c.o(.text.I2C_CalculatePEC) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetPEC) refers to stm32f10x_i2c.o(.text.I2C_GetPEC) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ARPCmd) refers to stm32f10x_i2c.o(.text.I2C_ARPCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd) refers to stm32f10x_i2c.o(.text.I2C_StretchClockCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_FastModeDutyCycleConfig) refers to stm32f10x_i2c.o(.text.I2C_FastModeDutyCycleConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_CheckEvent) refers to stm32f10x_i2c.o(.text.I2C_CheckEvent) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetLastEvent) refers to stm32f10x_i2c.o(.text.I2C_GetLastEvent) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to stm32f10x_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to stm32f10x_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetITStatus) refers to stm32f10x_i2c.o(.text.I2C_GetITStatus) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit) refers to stm32f10x_i2c.o(.text.I2C_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to stm32f10x_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to stm32f10x_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to stm32f10x_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to stm32f10x_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to stm32f10x_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to stm32f10x_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_pwr.o(.text.PWR_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to stm32f10x_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd) refers to stm32f10x_pwr.o(.text.PWR_BackupAccessCmd) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_PVDCmd) refers to stm32f10x_pwr.o(.text.PWR_PVDCmd) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig) refers to stm32f10x_pwr.o(.text.PWR_PVDLevelConfig) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd) refers to stm32f10x_pwr.o(.text.PWR_WakeUpPinCmd) for [Anonymous Symbol]
    stm32f10x_pwr.o(.text.PWR_EnterSTOPMode) refers to stm32f10x_pwr.o(.text.__WFI) for __WFI
    stm32f10x_pwr.o(.text.PWR_EnterSTOPMode) refers to stm32f10x_pwr.o(.text.__WFE) for __WFE
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode) refers to stm32f10x_pwr.o(.text.PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f10x_pwr.o(.text.PWR_EnterSTANDBYMode) refers to stm32f10x_pwr.o(.text.__WFI) for __WFI
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode) refers to stm32f10x_pwr.o(.text.PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus) refers to stm32f10x_pwr.o(.text.PWR_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_ClearFlag) refers to stm32f10x_pwr.o(.text.PWR_ClearFlag) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.__WFI) refers to stm32f10x_pwr.o(.text.__WFI) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.__WFE) refers to stm32f10x_pwr.o(.text.__WFE) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to stm32f10x_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to stm32f10x_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to stm32f10x_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to stm32f10x_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to stm32f10x_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK1Config) refers to stm32f10x_rcc.o(.text.RCC_PCLK1Config) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK2Config) refers to stm32f10x_rcc.o(.text.RCC_PCLK2Config) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to stm32f10x_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_USBCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSEConfig) refers to stm32f10x_rcc.o(.text.RCC_LSEConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to stm32f10x_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_RTCCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd) refers to stm32f10x_rcc.o(.text.RCC_RTCCLKCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.rodata.APBAHBPrescTable) for APBAHBPrescTable
    stm32f10x_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.rodata.ADCPrescTable) for ADCPrescTable
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to stm32f10x_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to stm32f10x_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to stm32f10x_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to stm32f10x_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to stm32f10x_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to stm32f10x_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ITConfig) refers to stm32f10x_rtc.o(.text.RTC_ITConfig) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_EnterConfigMode) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ExitConfigMode) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetCounter) refers to stm32f10x_rtc.o(.text.RTC_GetCounter) for [Anonymous Symbol]
    stm32f10x_rtc.o(.text.RTC_SetCounter) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for RTC_EnterConfigMode
    stm32f10x_rtc.o(.text.RTC_SetCounter) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for RTC_ExitConfigMode
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetCounter) refers to stm32f10x_rtc.o(.text.RTC_SetCounter) for [Anonymous Symbol]
    stm32f10x_rtc.o(.text.RTC_SetPrescaler) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for RTC_EnterConfigMode
    stm32f10x_rtc.o(.text.RTC_SetPrescaler) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for RTC_ExitConfigMode
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetPrescaler) refers to stm32f10x_rtc.o(.text.RTC_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_rtc.o(.text.RTC_SetAlarm) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for RTC_EnterConfigMode
    stm32f10x_rtc.o(.text.RTC_SetAlarm) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for RTC_ExitConfigMode
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetAlarm) refers to stm32f10x_rtc.o(.text.RTC_SetAlarm) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetDivider) refers to stm32f10x_rtc.o(.text.RTC_GetDivider) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForLastTask) refers to stm32f10x_rtc.o(.text.RTC_WaitForLastTask) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro) refers to stm32f10x_rtc.o(.text.RTC_WaitForSynchro) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to stm32f10x_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearFlag) refers to stm32f10x_rtc.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetITStatus) refers to stm32f10x_rtc.o(.text.RTC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit) refers to stm32f10x_rtc.o(.text.RTC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DeInit) refers to stm32f10x_sdio.o(.text.SDIO_DeInit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_Init) refers to stm32f10x_sdio.o(.text.SDIO_Init) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StructInit) refers to stm32f10x_sdio.o(.text.SDIO_StructInit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClockCmd) refers to stm32f10x_sdio.o(.text.SDIO_ClockCmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetPowerState) refers to stm32f10x_sdio.o(.text.SDIO_SetPowerState) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetPowerState) refers to stm32f10x_sdio.o(.text.SDIO_GetPowerState) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ITConfig) refers to stm32f10x_sdio.o(.text.SDIO_ITConfig) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DMACmd) refers to stm32f10x_sdio.o(.text.SDIO_DMACmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendCommand) refers to stm32f10x_sdio.o(.text.SDIO_SendCommand) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CmdStructInit) refers to stm32f10x_sdio.o(.text.SDIO_CmdStructInit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetCommandResponse) refers to stm32f10x_sdio.o(.text.SDIO_GetCommandResponse) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetResponse) refers to stm32f10x_sdio.o(.text.SDIO_GetResponse) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DataConfig) refers to stm32f10x_sdio.o(.text.SDIO_DataConfig) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DataStructInit) refers to stm32f10x_sdio.o(.text.SDIO_DataStructInit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetDataCounter) refers to stm32f10x_sdio.o(.text.SDIO_GetDataCounter) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ReadData) refers to stm32f10x_sdio.o(.text.SDIO_ReadData) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_WriteData) refers to stm32f10x_sdio.o(.text.SDIO_WriteData) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetFIFOCount) refers to stm32f10x_sdio.o(.text.SDIO_GetFIFOCount) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StartSDIOReadWait) refers to stm32f10x_sdio.o(.text.SDIO_StartSDIOReadWait) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StopSDIOReadWait) refers to stm32f10x_sdio.o(.text.SDIO_StopSDIOReadWait) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetSDIOReadWaitMode) refers to stm32f10x_sdio.o(.text.SDIO_SetSDIOReadWaitMode) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetSDIOOperation) refers to stm32f10x_sdio.o(.text.SDIO_SetSDIOOperation) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendSDIOSuspendCmd) refers to stm32f10x_sdio.o(.text.SDIO_SendSDIOSuspendCmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CommandCompletionCmd) refers to stm32f10x_sdio.o(.text.SDIO_CommandCompletionCmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CEATAITCmd) refers to stm32f10x_sdio.o(.text.SDIO_CEATAITCmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendCEATACmd) refers to stm32f10x_sdio.o(.text.SDIO_SendCEATACmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetFlagStatus) refers to stm32f10x_sdio.o(.text.SDIO_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClearFlag) refers to stm32f10x_sdio.o(.text.SDIO_ClearFlag) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetITStatus) refers to stm32f10x_sdio.o(.text.SDIO_GetITStatus) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClearITPendingBit) refers to stm32f10x_sdio.o(.text.SDIO_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_spi.o(.text.SPI_I2S_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_spi.o(.text.SPI_I2S_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_DeInit) refers to stm32f10x_spi.o(.text.SPI_I2S_DeInit) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_Init) refers to stm32f10x_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    stm32f10x_spi.o(.text.I2S_Init) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f10x_spi.o(.ARM.exidx.text.I2S_Init) refers to stm32f10x_spi.o(.text.I2S_Init) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_StructInit) refers to stm32f10x_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.I2S_StructInit) refers to stm32f10x_spi.o(.text.I2S_StructInit) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_Cmd) refers to stm32f10x_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.I2S_Cmd) refers to stm32f10x_spi.o(.text.I2S_Cmd) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig) refers to stm32f10x_spi.o(.text.SPI_I2S_ITConfig) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_DMACmd) refers to stm32f10x_spi.o(.text.SPI_I2S_DMACmd) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_SendData) refers to stm32f10x_spi.o(.text.SPI_I2S_SendData) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData) refers to stm32f10x_spi.o(.text.SPI_I2S_ReceiveData) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig) refers to stm32f10x_spi.o(.text.SPI_NSSInternalSoftwareConfig) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_SSOutputCmd) refers to stm32f10x_spi.o(.text.SPI_SSOutputCmd) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to stm32f10x_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_TransmitCRC) refers to stm32f10x_spi.o(.text.SPI_TransmitCRC) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_CalculateCRC) refers to stm32f10x_spi.o(.text.SPI_CalculateCRC) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_GetCRC) refers to stm32f10x_spi.o(.text.SPI_GetCRC) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial) refers to stm32f10x_spi.o(.text.SPI_GetCRCPolynomial) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig) refers to stm32f10x_spi.o(.text.SPI_BiDirectionalLineConfig) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus) refers to stm32f10x_spi.o(.text.SPI_I2S_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag) refers to stm32f10x_spi.o(.text.SPI_I2S_ClearFlag) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus) refers to stm32f10x_spi.o(.text.SPI_I2S_GetITStatus) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ClearITPendingBit) refers to stm32f10x_spi.o(.text.SPI_I2S_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_tim.o(.text.TIM_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DeInit) refers to stm32f10x_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to stm32f10x_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to stm32f10x_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to stm32f10x_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to stm32f10x_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to stm32f10x_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI3_Config) for TI3_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI4_Config) for TI4_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI1_Config) refers to stm32f10x_tim.o(.text.TI1_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI2_Config) refers to stm32f10x_tim.o(.text.TI2_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI3_Config) refers to stm32f10x_tim.o(.text.TI3_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI4_Config) refers to stm32f10x_tim.o(.text.TI4_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f10x_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to stm32f10x_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to stm32f10x_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to stm32f10x_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to stm32f10x_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to stm32f10x_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_Cmd) refers to stm32f10x_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to stm32f10x_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to stm32f10x_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to stm32f10x_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DMAConfig) refers to stm32f10x_tim.o(.text.TIM_DMAConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to stm32f10x_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ITRxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to stm32f10x_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ETRClockMode1Config) refers to stm32f10x_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to stm32f10x_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to stm32f10x_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ETRClockMode2Config) refers to stm32f10x_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to stm32f10x_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to stm32f10x_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to stm32f10x_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to stm32f10x_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to stm32f10x_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to stm32f10x_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCCDMA) refers to stm32f10x_tim.o(.text.TIM_SelectCCDMA) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to stm32f10x_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to stm32f10x_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to stm32f10x_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to stm32f10x_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to stm32f10x_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to stm32f10x_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to stm32f10x_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to stm32f10x_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to stm32f10x_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to stm32f10x_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to stm32f10x_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to stm32f10x_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to stm32f10x_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to stm32f10x_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to stm32f10x_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to stm32f10x_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to stm32f10x_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to stm32f10x_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to stm32f10x_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to stm32f10x_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to stm32f10x_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to stm32f10x_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to stm32f10x_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to stm32f10x_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to stm32f10x_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to stm32f10x_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to stm32f10x_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to stm32f10x_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_usart.o(.text.USART_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(.text.USART_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_usart.o(.ARM.exidx.text.USART_DeInit) refers to stm32f10x_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.text.USART_Init) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f10x_usart.o(.ARM.exidx.text.USART_Init) refers to stm32f10x_usart.o(.text.USART_Init) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_StructInit) refers to stm32f10x_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClockInit) refers to stm32f10x_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to stm32f10x_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_Cmd) refers to stm32f10x_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ITConfig) refers to stm32f10x_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_DMACmd) refers to stm32f10x_usart.o(.text.USART_DMACmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetAddress) refers to stm32f10x_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_WakeUpConfig) refers to stm32f10x_usart.o(.text.USART_WakeUpConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiverWakeUpCmd) refers to stm32f10x_usart.o(.text.USART_ReceiverWakeUpCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig) refers to stm32f10x_usart.o(.text.USART_LINBreakDetectLengthConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_LINCmd) refers to stm32f10x_usart.o(.text.USART_LINCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SendData) refers to stm32f10x_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to stm32f10x_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SendBreak) refers to stm32f10x_usart.o(.text.USART_SendBreak) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to stm32f10x_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetPrescaler) refers to stm32f10x_usart.o(.text.USART_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardCmd) refers to stm32f10x_usart.o(.text.USART_SmartCardCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd) refers to stm32f10x_usart.o(.text.USART_SmartCardNACKCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to stm32f10x_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to stm32f10x_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to stm32f10x_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to stm32f10x_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to stm32f10x_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to stm32f10x_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to stm32f10x_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to stm32f10x_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.text.WWDG_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_DeInit) refers to stm32f10x_wwdg.o(.text.WWDG_DeInit) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler) refers to stm32f10x_wwdg.o(.text.WWDG_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue) refers to stm32f10x_wwdg.o(.text.WWDG_SetWindowValue) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_EnableIT) refers to stm32f10x_wwdg.o(.text.WWDG_EnableIT) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetCounter) refers to stm32f10x_wwdg.o(.text.WWDG_SetCounter) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_Enable) refers to stm32f10x_wwdg.o(.text.WWDG_Enable) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus) refers to stm32f10x_wwdg.o(.text.WWDG_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag) refers to stm32f10x_wwdg.o(.text.WWDG_ClearFlag) for [Anonymous Symbol]
    main.o(.text.main) refers to misc.o(.text.NVIC_PriorityGroupConfig) for NVIC_PriorityGroupConfig
    main.o(.text.main) refers to main.o(.bss.canfly) for canfly
    main.o(.text.main) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.main) refers to usart.o(.text.USART1_Config) for USART1_Config
    main.o(.text.main) refers to usart.o(.text.USART2_Config) for USART2_Config
    main.o(.text.main) refers to pid.o(.text.PID_Parm_Config) for PID_Parm_Config
    main.o(.text.main) refers to delay.o(.text.DELAY_Config) for DELAY_Config
    main.o(.text.main) refers to gpio.o(.text.IO_Config) for IO_Config
    main.o(.text.main) refers to led.o(.text.LED_Config) for LED_Config
    main.o(.text.main) refers to adc.o(.text.ADC_Config) for ADC_Config
    main.o(.text.main) refers to pwm.o(.text.PWM_Config) for PWM_Config
    main.o(.text.main) refers to led.o(.text.WS2812B_Config) for WS2812B_Config
    main.o(.text.main) refers to led.o(.text.WS2812B_Red) for WS2812B_Red
    main.o(.text.main) refers to iic.o(.text.IIC_Config) for IIC_Config
    main.o(.text.main) refers to mpu6050.o(.text.MPU_Config) for MPU_Config
    main.o(.text.main) refers to timer.o(.text.TIMER_Config) for TIMER_Config
    main.o(.text.main) refers to tick.o(.text.IS_10HZ) for IS_10HZ
    main.o(.text.main) refers to adc.o(.text.CanFly_Bat) for CanFly_Bat
    main.o(.text.main) refers to led.o(.text.WS2812B_Blink) for WS2812B_Blink
    main.o(.text.main) refers to tick.o(.text.IS_2HZ) for IS_2HZ
    main.o(.text.main) refers to led.o(.text.LED_Blink) for LED_Blink
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f10x_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f10x_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f10x_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f10x_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f10x_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32f10x_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f10x_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32f10x_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.SysTick_Handler) refers to stm32f10x_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    delay.o(.text.DELAY_Config) refers to misc.o(.text.SysTick_CLKSourceConfig) for SysTick_CLKSourceConfig
    delay.o(.text.DELAY_Config) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    delay.o(.text.DELAY_Config) refers to delay.o(.bss.fac_us) for fac_us
    delay.o(.text.DELAY_Config) refers to delay.o(.bss.fac_ms) for fac_ms
    delay.o(.ARM.exidx.text.DELAY_Config) refers to delay.o(.text.DELAY_Config) for [Anonymous Symbol]
    delay.o(.text.delay_us) refers to delay.o(.bss.fac_us) for fac_us
    delay.o(.ARM.exidx.text.delay_us) refers to delay.o(.text.delay_us) for [Anonymous Symbol]
    delay.o(.text.delay_ms) refers to delay.o(.bss.fac_ms) for fac_ms
    delay.o(.ARM.exidx.text.delay_ms) refers to delay.o(.text.delay_ms) for [Anonymous Symbol]
    iic.o(.text.IIC_Config) refers to iic.o(.bss.IIC_Config.isInit) for IIC_Config.isInit
    iic.o(.text.IIC_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    iic.o(.text.IIC_Config) refers to iic.o(.data.IIC_DELAY_US) for IIC_DELAY_US
    iic.o(.ARM.exidx.text.IIC_Config) refers to iic.o(.text.IIC_Config) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.IIC_DELAY) refers to iic.o(.text.IIC_DELAY) for [Anonymous Symbol]
    iic.o(.ARM.exidx.text.IIC_HALF_DELAY) refers to iic.o(.text.IIC_HALF_DELAY) for [Anonymous Symbol]
    iic.o(.text.IIC_Set_Delay_Us) refers to iic.o(.data.IIC_DELAY_US) for IIC_DELAY_US
    iic.o(.ARM.exidx.text.IIC_Set_Delay_Us) refers to iic.o(.text.IIC_Set_Delay_Us) for [Anonymous Symbol]
    iic.o(.text.IIC_START) refers to iic.o(.text.IIC_HALF_DELAY) for IIC_HALF_DELAY
    iic.o(.ARM.exidx.text.IIC_START) refers to iic.o(.text.IIC_START) for [Anonymous Symbol]
    iic.o(.text.IIC_STOP) refers to iic.o(.text.IIC_HALF_DELAY) for IIC_HALF_DELAY
    iic.o(.ARM.exidx.text.IIC_STOP) refers to iic.o(.text.IIC_STOP) for [Anonymous Symbol]
    iic.o(.text.IIC_ACK) refers to iic.o(.text.IIC_HALF_DELAY) for IIC_HALF_DELAY
    iic.o(.text.IIC_ACK) refers to iic.o(.text.IIC_DELAY) for IIC_DELAY
    iic.o(.ARM.exidx.text.IIC_ACK) refers to iic.o(.text.IIC_ACK) for [Anonymous Symbol]
    iic.o(.text.IIC_NACK) refers to iic.o(.text.IIC_HALF_DELAY) for IIC_HALF_DELAY
    iic.o(.text.IIC_NACK) refers to iic.o(.text.IIC_DELAY) for IIC_DELAY
    iic.o(.ARM.exidx.text.IIC_NACK) refers to iic.o(.text.IIC_NACK) for [Anonymous Symbol]
    iic.o(.text.IIC_WAIT_ACK) refers to iic.o(.text.IIC_HALF_DELAY) for IIC_HALF_DELAY
    iic.o(.text.IIC_WAIT_ACK) refers to iic.o(.text.IIC_STOP) for IIC_STOP
    iic.o(.ARM.exidx.text.IIC_WAIT_ACK) refers to iic.o(.text.IIC_WAIT_ACK) for [Anonymous Symbol]
    iic.o(.text.IIC_SEND_BYTE) refers to iic.o(.text.IIC_HALF_DELAY) for IIC_HALF_DELAY
    iic.o(.text.IIC_SEND_BYTE) refers to iic.o(.text.IIC_DELAY) for IIC_DELAY
    iic.o(.ARM.exidx.text.IIC_SEND_BYTE) refers to iic.o(.text.IIC_SEND_BYTE) for [Anonymous Symbol]
    iic.o(.text.IIC_RECEIVE_BYTE) refers to iic.o(.text.IIC_DELAY) for IIC_DELAY
    iic.o(.text.IIC_RECEIVE_BYTE) refers to iic.o(.text.IIC_HALF_DELAY) for IIC_HALF_DELAY
    iic.o(.text.IIC_RECEIVE_BYTE) refers to iic.o(.text.IIC_NACK) for IIC_NACK
    iic.o(.text.IIC_RECEIVE_BYTE) refers to iic.o(.text.IIC_ACK) for IIC_ACK
    iic.o(.ARM.exidx.text.IIC_RECEIVE_BYTE) refers to iic.o(.text.IIC_RECEIVE_BYTE) for [Anonymous Symbol]
    iic.o(.text.IIC_READ_BYTE) refers to iic.o(.text.IIC_START) for IIC_START
    iic.o(.text.IIC_READ_BYTE) refers to iic.o(.text.IIC_SEND_BYTE) for IIC_SEND_BYTE
    iic.o(.text.IIC_READ_BYTE) refers to iic.o(.text.IIC_WAIT_ACK) for IIC_WAIT_ACK
    iic.o(.text.IIC_READ_BYTE) refers to iic.o(.text.IIC_RECEIVE_BYTE) for IIC_RECEIVE_BYTE
    iic.o(.text.IIC_READ_BYTE) refers to iic.o(.text.IIC_STOP) for IIC_STOP
    iic.o(.ARM.exidx.text.IIC_READ_BYTE) refers to iic.o(.text.IIC_READ_BYTE) for [Anonymous Symbol]
    iic.o(.text.IIC_WRITE_BYTE) refers to iic.o(.text.IIC_START) for IIC_START
    iic.o(.text.IIC_WRITE_BYTE) refers to iic.o(.text.IIC_SEND_BYTE) for IIC_SEND_BYTE
    iic.o(.text.IIC_WRITE_BYTE) refers to iic.o(.text.IIC_WAIT_ACK) for IIC_WAIT_ACK
    iic.o(.text.IIC_WRITE_BYTE) refers to iic.o(.text.IIC_STOP) for IIC_STOP
    iic.o(.ARM.exidx.text.IIC_WRITE_BYTE) refers to iic.o(.text.IIC_WRITE_BYTE) for [Anonymous Symbol]
    iic.o(.text.IIC_READ) refers to iic.o(.text.IIC_START) for IIC_START
    iic.o(.text.IIC_READ) refers to iic.o(.text.IIC_SEND_BYTE) for IIC_SEND_BYTE
    iic.o(.text.IIC_READ) refers to iic.o(.text.IIC_WAIT_ACK) for IIC_WAIT_ACK
    iic.o(.text.IIC_READ) refers to iic.o(.text.IIC_RECEIVE_BYTE) for IIC_RECEIVE_BYTE
    iic.o(.text.IIC_READ) refers to iic.o(.text.IIC_STOP) for IIC_STOP
    iic.o(.ARM.exidx.text.IIC_READ) refers to iic.o(.text.IIC_READ) for [Anonymous Symbol]
    iic.o(.text.IIC_WRITE) refers to iic.o(.text.IIC_START) for IIC_START
    iic.o(.text.IIC_WRITE) refers to iic.o(.text.IIC_SEND_BYTE) for IIC_SEND_BYTE
    iic.o(.text.IIC_WRITE) refers to iic.o(.text.IIC_WAIT_ACK) for IIC_WAIT_ACK
    iic.o(.text.IIC_WRITE) refers to iic.o(.text.IIC_STOP) for IIC_STOP
    iic.o(.ARM.exidx.text.IIC_WRITE) refers to iic.o(.text.IIC_WRITE) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_make_head) refers to protocol.o(.text.ano_data_make_head) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_check) refers to protocol.o(.text.ano_data_check) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_check_fill) refers to protocol.o(.text.ano_data_check_fill) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_fill_u8bit) refers to protocol.o(.text.ano_data_fill_u8bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_fill_u16bit) refers to protocol.o(.text.ano_data_fill_u16bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_fill_u32bit) refers to protocol.o(.text.ano_data_fill_u32bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_fill_s8bit) refers to protocol.o(.text.ano_data_fill_s8bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_fill_s16bit) refers to protocol.o(.text.ano_data_fill_s16bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_fill_s32bit) refers to protocol.o(.text.ano_data_fill_s32bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_get_u8bit) refers to protocol.o(.text.ano_data_get_u8bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_get_u16bit) refers to protocol.o(.text.ano_data_get_u16bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_get_u32bit) refers to protocol.o(.text.ano_data_get_u32bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_get_s8bit) refers to protocol.o(.text.ano_data_get_s8bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_get_s16bit) refers to protocol.o(.text.ano_data_get_s16bit) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.ano_data_get_s32bit) refers to protocol.o(.text.ano_data_get_s32bit) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_isensor) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_isensor) refers to mpu6050.o(.bss.MPU6050_ACC_RAW) for MPU6050_ACC_RAW
    protocol.o(.text.ano_data_make_isensor) refers to protocol.o(.text.ano_data_fill_s16bit) for ano_data_fill_s16bit
    protocol.o(.text.ano_data_make_isensor) refers to mpu6050.o(.bss.MPU6050_GYRO_RAW) for MPU6050_GYRO_RAW
    protocol.o(.text.ano_data_make_isensor) refers to protocol.o(.text.ano_data_fill_u8bit) for ano_data_fill_u8bit
    protocol.o(.text.ano_data_make_isensor) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_isensor) refers to protocol.o(.text.ano_data_make_isensor) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_euler_arc) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_euler_arc) refers to mpu6050.o(.bss.Angle) for Angle
    protocol.o(.text.ano_data_make_euler_arc) refers to fmul.o(.text) for __aeabi_fmul
    protocol.o(.text.ano_data_make_euler_arc) refers to ffixi.o(.text) for __aeabi_f2iz
    protocol.o(.text.ano_data_make_euler_arc) refers to protocol.o(.text.ano_data_fill_s16bit) for ano_data_fill_s16bit
    protocol.o(.text.ano_data_make_euler_arc) refers to protocol.o(.text.ano_data_fill_u8bit) for ano_data_fill_u8bit
    protocol.o(.text.ano_data_make_euler_arc) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_euler_arc) refers to protocol.o(.text.ano_data_make_euler_arc) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_target_euler_arc) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_target_euler_arc) refers to protocol.o(.text.ano_data_fill_s16bit) for ano_data_fill_s16bit
    protocol.o(.text.ano_data_make_target_euler_arc) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_target_euler_arc) refers to protocol.o(.text.ano_data_make_target_euler_arc) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_ctrl_euler_arc) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_ctrl_euler_arc) refers to main.o(.bss.canfly) for canfly
    protocol.o(.text.ano_data_make_ctrl_euler_arc) refers to protocol.o(.text.ano_data_fill_s16bit) for ano_data_fill_s16bit
    protocol.o(.text.ano_data_make_ctrl_euler_arc) refers to protocol.o(.text.ano_data_fill_u16bit) for ano_data_fill_u16bit
    protocol.o(.text.ano_data_make_ctrl_euler_arc) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_ctrl_euler_arc) refers to protocol.o(.text.ano_data_make_ctrl_euler_arc) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_rgb) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_rgb) refers to main.o(.bss.canfly) for canfly
    protocol.o(.text.ano_data_make_rgb) refers to protocol.o(.text.ano_data_fill_u8bit) for ano_data_fill_u8bit
    protocol.o(.text.ano_data_make_rgb) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_rgb) refers to protocol.o(.text.ano_data_make_rgb) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_pwm) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_pwm) refers to main.o(.bss.canfly) for canfly
    protocol.o(.text.ano_data_make_pwm) refers to protocol.o(.text.ano_data_fill_u16bit) for ano_data_fill_u16bit
    protocol.o(.text.ano_data_make_pwm) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_pwm) refers to protocol.o(.text.ano_data_make_pwm) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_atti) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_atti) refers to protocol.o(.text.ano_data_fill_u32bit) for ano_data_fill_u32bit
    protocol.o(.text.ano_data_make_atti) refers to protocol.o(.text.ano_data_fill_u8bit) for ano_data_fill_u8bit
    protocol.o(.text.ano_data_make_atti) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_atti) refers to protocol.o(.text.ano_data_make_atti) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_flymode) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_flymode) refers to main.o(.bss.canfly) for canfly
    protocol.o(.text.ano_data_make_flymode) refers to protocol.o(.text.ano_data_fill_u8bit) for ano_data_fill_u8bit
    protocol.o(.text.ano_data_make_flymode) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_flymode) refers to protocol.o(.text.ano_data_make_flymode) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_bat) refers to main.o(.bss.canfly) for canfly
    protocol.o(.text.ano_data_make_bat) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_bat) refers to fmul.o(.text) for __aeabi_fmul
    protocol.o(.text.ano_data_make_bat) refers to ffixi.o(.text) for __aeabi_f2iz
    protocol.o(.text.ano_data_make_bat) refers to protocol.o(.text.ano_data_fill_u16bit) for ano_data_fill_u16bit
    protocol.o(.text.ano_data_make_bat) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_bat) refers to protocol.o(.text.ano_data_make_bat) for [Anonymous Symbol]
    protocol.o(.text.ano_data_make_valid) refers to protocol.o(.text.ano_data_make_head) for ano_data_make_head
    protocol.o(.text.ano_data_make_valid) refers to protocol.o(.text.ano_data_check_fill) for ano_data_check_fill
    protocol.o(.ARM.exidx.text.ano_data_make_valid) refers to protocol.o(.text.ano_data_make_valid) for [Anonymous Symbol]
    protocol.o(.text.ano_data_decode) refers to protocol.o(.text.ano_data_check) for ano_data_check
    protocol.o(.text.ano_data_decode) refers to main.o(.bss.canfly) for canfly
    protocol.o(.text.ano_data_decode) refers to protocol.o(.text.ano_data_get_s16bit) for ano_data_get_s16bit
    protocol.o(.text.ano_data_decode) refers to protocol.o(.text.ano_data_get_u8bit) for ano_data_get_u8bit
    protocol.o(.ARM.exidx.text.ano_data_decode) refers to protocol.o(.text.ano_data_decode) for [Anonymous Symbol]
    protocol.o(.text.CanFly_Upload) refers to stm32f10x_dma.o(.text.DMA_GetCurrDataCounter) for DMA_GetCurrDataCounter
    protocol.o(.text.CanFly_Upload) refers to main.o(.bss.canfly) for canfly
    protocol.o(.text.CanFly_Upload) refers to protocol.o(.text.ano_data_make_isensor) for ano_data_make_isensor
    protocol.o(.text.CanFly_Upload) refers to protocol.o(.text.ano_data_make_euler_arc) for ano_data_make_euler_arc
    protocol.o(.text.CanFly_Upload) refers to protocol.o(.text.ano_data_make_ctrl_euler_arc) for ano_data_make_ctrl_euler_arc
    protocol.o(.text.CanFly_Upload) refers to protocol.o(.text.ano_data_make_rgb) for ano_data_make_rgb
    protocol.o(.text.CanFly_Upload) refers to protocol.o(.text.ano_data_make_pwm) for ano_data_make_pwm
    protocol.o(.text.CanFly_Upload) refers to protocol.o(.text.ano_data_make_flymode) for ano_data_make_flymode
    protocol.o(.text.CanFly_Upload) refers to protocol.o(.text.ano_data_make_bat) for ano_data_make_bat
    protocol.o(.text.CanFly_Upload) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    protocol.o(.text.CanFly_Upload) refers to stm32f10x_dma.o(.text.DMA_SetCurrDataCounter) for DMA_SetCurrDataCounter
    protocol.o(.ARM.exidx.text.CanFly_Upload) refers to protocol.o(.text.CanFly_Upload) for [Anonymous Symbol]
    protocol.o(.text.CanFly_Decode) refers to stm32f10x_dma.o(.text.DMA_GetCurrDataCounter) for DMA_GetCurrDataCounter
    protocol.o(.text.CanFly_Decode) refers to main.o(.bss.canfly) for canfly
    protocol.o(.text.CanFly_Decode) refers to protocol.o(.text.ano_data_decode) for ano_data_decode
    protocol.o(.text.CanFly_Decode) refers to stm32f10x_dma.o(.text.DMA_SetCurrDataCounter) for DMA_SetCurrDataCounter
    protocol.o(.text.CanFly_Decode) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    protocol.o(.ARM.exidx.text.CanFly_Decode) refers to protocol.o(.text.CanFly_Decode) for [Anonymous Symbol]
    gpio.o(.text.IO_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    gpio.o(.ARM.exidx.text.IO_Config) refers to gpio.o(.text.IO_Config) for [Anonymous Symbol]
    usart.o(.text.fputc) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    usart.o(.text.fputc) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart.o(.ARM.exidx.text.fputc) refers to usart.o(.text.fputc) for [Anonymous Symbol]
    usart.o(.text.USART1_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    usart.o(.text.USART1_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    usart.o(.text.USART1_Config) refers to misc.o(.text.NVIC_Init) for NVIC_Init
    usart.o(.text.USART1_Config) refers to stm32f10x_usart.o(.text.USART_DeInit) for USART_DeInit
    usart.o(.text.USART1_Config) refers to stm32f10x_usart.o(.text.USART_Init) for USART_Init
    usart.o(.text.USART1_Config) refers to stm32f10x_usart.o(.text.USART_Cmd) for USART_Cmd
    usart.o(.text.USART1_Config) refers to stm32f10x_usart.o(.text.USART_ITConfig) for USART_ITConfig
    usart.o(.ARM.exidx.text.USART1_Config) refers to usart.o(.text.USART1_Config) for [Anonymous Symbol]
    usart.o(.text.USART2_Config) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    usart.o(.text.USART2_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    usart.o(.text.USART2_Config) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    usart.o(.text.USART2_Config) refers to stm32f10x_dma.o(.text.DMA_DeInit) for DMA_DeInit
    usart.o(.text.USART2_Config) refers to main.o(.bss.canfly) for canfly
    usart.o(.text.USART2_Config) refers to stm32f10x_dma.o(.text.DMA_Init) for DMA_Init
    usart.o(.text.USART2_Config) refers to stm32f10x_usart.o(.text.USART_DeInit) for USART_DeInit
    usart.o(.text.USART2_Config) refers to stm32f10x_usart.o(.text.USART_Init) for USART_Init
    usart.o(.text.USART2_Config) refers to stm32f10x_usart.o(.text.USART_Cmd) for USART_Cmd
    usart.o(.text.USART2_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    usart.o(.text.USART2_Config) refers to misc.o(.text.NVIC_Init) for NVIC_Init
    usart.o(.text.USART2_Config) refers to stm32f10x_usart.o(.text.USART_ITConfig) for USART_ITConfig
    usart.o(.text.USART2_Config) refers to stm32f10x_usart.o(.text.USART_DMACmd) for USART_DMACmd
    usart.o(.text.USART2_Config) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    usart.o(.ARM.exidx.text.USART2_Config) refers to usart.o(.text.USART2_Config) for [Anonymous Symbol]
    usart.o(.text.USART1_IRQHandler) refers to stm32f10x_usart.o(.text.USART_GetITStatus) for USART_GetITStatus
    usart.o(.text.USART1_IRQHandler) refers to stm32f10x_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    usart.o(.ARM.exidx.text.USART1_IRQHandler) refers to usart.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    usart.o(.text.USART2_IRQHandler) refers to stm32f10x_usart.o(.text.USART_GetITStatus) for USART_GetITStatus
    usart.o(.text.USART2_IRQHandler) refers to stm32f10x_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    usart.o(.text.USART2_IRQHandler) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    usart.o(.text.USART2_IRQHandler) refers to protocol.o(.text.CanFly_Decode) for CanFly_Decode
    usart.o(.ARM.exidx.text.USART2_IRQHandler) refers to usart.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    usart.o(.text.USART1_SendStr) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    usart.o(.text.USART1_SendStr) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart.o(.ARM.exidx.text.USART1_SendStr) refers to usart.o(.text.USART1_SendStr) for [Anonymous Symbol]
    usart.o(.text.USART2_SendStr) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    usart.o(.text.USART2_SendStr) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart.o(.ARM.exidx.text.USART2_SendStr) refers to usart.o(.text.USART2_SendStr) for [Anonymous Symbol]
    usart.o(.text.USART1_SendHex) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    usart.o(.text.USART1_SendHex) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart.o(.ARM.exidx.text.USART1_SendHex) refers to usart.o(.text.USART1_SendHex) for [Anonymous Symbol]
    usart.o(.text.USART2_SendHex) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    usart.o(.text.USART2_SendHex) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart.o(.ARM.exidx.text.USART2_SendHex) refers to usart.o(.text.USART2_SendHex) for [Anonymous Symbol]
    adc.o(.text.ADC_Config) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    adc.o(.text.ADC_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_DeInit) for ADC_DeInit
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_Init) for ADC_Init
    adc.o(.text.ADC_Config) refers to stm32f10x_rcc.o(.text.RCC_ADCCLKConfig) for RCC_ADCCLKConfig
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_RegularChannelConfig) for ADC_RegularChannelConfig
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_DMACmd) for ADC_DMACmd
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_Cmd) for ADC_Cmd
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_ResetCalibration) for ADC_ResetCalibration
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_GetResetCalibrationStatus) for ADC_GetResetCalibrationStatus
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_StartCalibration) for ADC_StartCalibration
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_GetCalibrationStatus) for ADC_GetCalibrationStatus
    adc.o(.text.ADC_Config) refers to stm32f10x_adc.o(.text.ADC_SoftwareStartConvCmd) for ADC_SoftwareStartConvCmd
    adc.o(.text.ADC_Config) refers to adc.o(.bss.ADC_Value) for ADC_Value
    adc.o(.text.ADC_Config) refers to stm32f10x_dma.o(.text.DMA_Init) for DMA_Init
    adc.o(.text.ADC_Config) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    adc.o(.ARM.exidx.text.ADC_Config) refers to adc.o(.text.ADC_Config) for [Anonymous Symbol]
    adc.o(.text.ADC_get) refers to stm32f10x_adc.o(.text.ADC_RegularChannelConfig) for ADC_RegularChannelConfig
    adc.o(.text.ADC_get) refers to stm32f10x_adc.o(.text.ADC_SoftwareStartConvCmd) for ADC_SoftwareStartConvCmd
    adc.o(.text.ADC_get) refers to stm32f10x_adc.o(.text.ADC_GetFlagStatus) for ADC_GetFlagStatus
    adc.o(.text.ADC_get) refers to stm32f10x_adc.o(.text.ADC_GetConversionValue) for ADC_GetConversionValue
    adc.o(.ARM.exidx.text.ADC_get) refers to adc.o(.text.ADC_get) for [Anonymous Symbol]
    adc.o(.text.ADC_get_ave) refers to adc.o(.text.ADC_get) for ADC_get
    adc.o(.ARM.exidx.text.ADC_get_ave) refers to adc.o(.text.ADC_get_ave) for [Anonymous Symbol]
    adc.o(.text.CanFly_Bat) refers to adc.o(.bss.ADC_Value) for ADC_Value
    adc.o(.text.CanFly_Bat) refers to adc.o(.bss.CanFly_Bat.index) for CanFly_Bat.index
    adc.o(.text.CanFly_Bat) refers to adc.o(.bss.adc_temp) for adc_temp
    adc.o(.text.CanFly_Bat) refers to fflti.o(.text) for __aeabi_i2f
    adc.o(.text.CanFly_Bat) refers to fmul.o(.text) for __aeabi_fmul
    adc.o(.text.CanFly_Bat) refers to fdiv.o(.text) for __aeabi_fdiv
    adc.o(.text.CanFly_Bat) refers to main.o(.bss.canfly) for canfly
    adc.o(.text.CanFly_Bat) refers to f2d.o(.text) for __aeabi_f2d
    adc.o(.text.CanFly_Bat) refers to dcmpge.o(.text) for __aeabi_dcmpge
    adc.o(.text.CanFly_Bat) refers to adc.o(.bss.CanFly_Bat.cnt0) for CanFly_Bat.cnt0
    adc.o(.text.CanFly_Bat) refers to adc.o(.bss.CanFly_Bat.cnt1) for CanFly_Bat.cnt1
    adc.o(.ARM.exidx.text.CanFly_Bat) refers to adc.o(.text.CanFly_Bat) for [Anonymous Symbol]
    mpu6050.o(.text.MPU_Config) refers to mpu6050.o(.text.mpu_read_byte) for mpu_read_byte
    mpu6050.o(.text.MPU_Config) refers to delay.o(.text.delay_ms) for delay_ms
    mpu6050.o(.text.MPU_Config) refers to mpu6050.o(.text.mpu_write_byte) for mpu_write_byte
    mpu6050.o(.text.MPU_Config) refers to mpu6050.o(.text.mpu6050_offset) for mpu6050_offset
    mpu6050.o(.ARM.exidx.text.MPU_Config) refers to mpu6050.o(.text.MPU_Config) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_read_byte) refers to iic.o(.text.IIC_READ_BYTE) for IIC_READ_BYTE
    mpu6050.o(.ARM.exidx.text.mpu_read_byte) refers to mpu6050.o(.text.mpu_read_byte) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_write_byte) refers to iic.o(.text.IIC_WRITE_BYTE) for IIC_WRITE_BYTE
    mpu6050.o(.ARM.exidx.text.mpu_write_byte) refers to mpu6050.o(.text.mpu_write_byte) for [Anonymous Symbol]
    mpu6050.o(.text.mpu6050_offset) refers to delay.o(.text.delay_ms) for delay_ms
    mpu6050.o(.text.mpu6050_offset) refers to mpu6050.o(.text.mpu_get_sensor_data) for mpu_get_sensor_data
    mpu6050.o(.text.mpu6050_offset) refers to mpu6050.o(.bss.MPU6050_ACC_RAW) for MPU6050_ACC_RAW
    mpu6050.o(.text.mpu6050_offset) refers to mpu6050.o(.bss.MPU6050_GYRO_RAW) for MPU6050_GYRO_RAW
    mpu6050.o(.text.mpu6050_offset) refers to mpu6050.o(.bss.ACC_OFFSET_RAW) for ACC_OFFSET_RAW
    mpu6050.o(.text.mpu6050_offset) refers to mpu6050.o(.bss.GYRO_OFFSET_RAW) for GYRO_OFFSET_RAW
    mpu6050.o(.ARM.exidx.text.mpu6050_offset) refers to mpu6050.o(.text.mpu6050_offset) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_get_sensor_data) refers to mpu6050.o(.bss.MPU6050_Buffer) for MPU6050_Buffer
    mpu6050.o(.text.mpu_get_sensor_data) refers to mpu6050.o(.text.mpu_read) for mpu_read
    mpu6050.o(.text.mpu_get_sensor_data) refers to mpu6050.o(.bss.MPU6050_ACC_RAW) for MPU6050_ACC_RAW
    mpu6050.o(.text.mpu_get_sensor_data) refers to fflti.o(.text) for __aeabi_i2f
    mpu6050.o(.text.mpu_get_sensor_data) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu6050.o(.text.mpu_get_sensor_data) refers to f2d.o(.text) for __aeabi_f2d
    mpu6050.o(.text.mpu_get_sensor_data) refers to dadd.o(.text) for __aeabi_dadd
    mpu6050.o(.text.mpu_get_sensor_data) refers to d2f.o(.text) for __aeabi_d2f
    mpu6050.o(.text.mpu_get_sensor_data) refers to main.o(.bss.canfly) for canfly
    mpu6050.o(.text.mpu_get_sensor_data) refers to mpu6050.o(.bss.MPU6050_GYRO_RAW) for MPU6050_GYRO_RAW
    mpu6050.o(.ARM.exidx.text.mpu_get_sensor_data) refers to mpu6050.o(.text.mpu_get_sensor_data) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_get_temp) refers to mpu6050.o(.text.mpu_read) for mpu_read
    mpu6050.o(.text.mpu_get_temp) refers to fflti.o(.text) for __aeabi_i2f
    mpu6050.o(.text.mpu_get_temp) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu6050.o(.text.mpu_get_temp) refers to f2d.o(.text) for __aeabi_f2d
    mpu6050.o(.text.mpu_get_temp) refers to dadd.o(.text) for __aeabi_dadd
    mpu6050.o(.text.mpu_get_temp) refers to d2f.o(.text) for __aeabi_d2f
    mpu6050.o(.ARM.exidx.text.mpu_get_temp) refers to mpu6050.o(.text.mpu_get_temp) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_read) refers to iic.o(.text.IIC_READ) for IIC_READ
    mpu6050.o(.ARM.exidx.text.mpu_read) refers to mpu6050.o(.text.mpu_read) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_get_gyr) refers to mpu6050.o(.text.mpu_read) for mpu_read
    mpu6050.o(.ARM.exidx.text.mpu_get_gyr) refers to mpu6050.o(.text.mpu_get_gyr) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_get_acc) refers to mpu6050.o(.text.mpu_read) for mpu_read
    mpu6050.o(.ARM.exidx.text.mpu_get_acc) refers to mpu6050.o(.text.mpu_get_acc) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_write) refers to iic.o(.text.IIC_WRITE) for IIC_WRITE
    mpu6050.o(.ARM.exidx.text.mpu_write) refers to mpu6050.o(.text.mpu_write) for [Anonymous Symbol]
    mpu6050.o(.text.FindPos) refers to fcmpge.o(.text) for __aeabi_fcmpge
    mpu6050.o(.text.FindPos) refers to fcmple.o(.text) for __aeabi_fcmple
    mpu6050.o(.text.FindPos) refers to fflti.o(.text) for __aeabi_i2f
    mpu6050.o(.ARM.exidx.text.FindPos) refers to mpu6050.o(.text.FindPos) for [Anonymous Symbol]
    mpu6050.o(.text.QuiteSort) refers to mpu6050.o(.text.FindPos) for FindPos
    mpu6050.o(.text.QuiteSort) refers to ffixi.o(.text) for __aeabi_f2iz
    mpu6050.o(.ARM.exidx.text.QuiteSort) refers to mpu6050.o(.text.QuiteSort) for [Anonymous Symbol]
    mpu6050.o(.text.SortAver_FilterXYZ) refers to fflti.o(.text) for __aeabi_i2f
    mpu6050.o(.text.SortAver_FilterXYZ) refers to mpu6050.o(.bss.SortAver_FilterXYZ.cnt) for SortAver_FilterXYZ.cnt
    mpu6050.o(.text.SortAver_FilterXYZ) refers to mpu6050.o(.bss.SortAver_FilterXYZ.bufx) for SortAver_FilterXYZ.bufx
    mpu6050.o(.text.SortAver_FilterXYZ) refers to mpu6050.o(.bss.SortAver_FilterXYZ.bufy) for SortAver_FilterXYZ.bufy
    mpu6050.o(.text.SortAver_FilterXYZ) refers to mpu6050.o(.bss.SortAver_FilterXYZ.bufz) for SortAver_FilterXYZ.bufz
    mpu6050.o(.text.SortAver_FilterXYZ) refers to mpu6050.o(.data.SortAver_FilterXYZ.flag) for SortAver_FilterXYZ.flag
    mpu6050.o(.text.SortAver_FilterXYZ) refers to mpu6050.o(.text.QuiteSort) for QuiteSort
    mpu6050.o(.text.SortAver_FilterXYZ) refers to fadd.o(.text) for __aeabi_fadd
    mpu6050.o(.text.SortAver_FilterXYZ) refers to fdiv.o(.text) for __aeabi_fdiv
    mpu6050.o(.ARM.exidx.text.SortAver_FilterXYZ) refers to mpu6050.o(.text.SortAver_FilterXYZ) for [Anonymous Symbol]
    mpu6050.o(.text.CanFly_Calcu_Position) refers to main.o(.bss.canfly) for canfly
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.text.mpu_get_sensor_data) for mpu_get_sensor_data
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.bss.MPU6050_ACC_RAW) for MPU6050_ACC_RAW
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.bss.ACC_OFFSET_RAW) for ACC_OFFSET_RAW
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.bss.MPU6050_GYRO_RAW) for MPU6050_GYRO_RAW
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.bss.GYRO_OFFSET_RAW) for GYRO_OFFSET_RAW
    mpu6050.o(.text.CanFly_Calcu_Position) refers to fflti.o(.text) for __aeabi_i2f
    mpu6050.o(.text.CanFly_Calcu_Position) refers to fmul.o(.text) for __aeabi_fmul
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.bss.Acc_M) for Acc_M
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.bss.Gyr_R) for Gyr_R
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.bss.Gyr_D) for Gyr_D
    mpu6050.o(.text.CanFly_Calcu_Position) refers to f2d.o(.text) for __aeabi_f2d
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.bss.CanFly_Calcu_Position.acc_old) for CanFly_Calcu_Position.acc_old
    mpu6050.o(.text.CanFly_Calcu_Position) refers to dmul.o(.text) for __aeabi_dmul
    mpu6050.o(.text.CanFly_Calcu_Position) refers to dadd.o(.text) for __aeabi_dadd
    mpu6050.o(.text.CanFly_Calcu_Position) refers to d2f.o(.text) for __aeabi_d2f
    mpu6050.o(.text.CanFly_Calcu_Position) refers to mpu6050.o(.text.mpu_get_euler_angle) for mpu_get_euler_angle
    mpu6050.o(.ARM.exidx.text.CanFly_Calcu_Position) refers to mpu6050.o(.text.CanFly_Calcu_Position) for [Anonymous Symbol]
    mpu6050.o(.text.mpu_get_euler_angle) refers to memseta.o(.text) for __aeabi_memclr4
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.Acc_M) for Acc_M
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.Gyr_R) for Gyr_R
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.data.q0) for q0
    mpu6050.o(.text.mpu_get_euler_angle) refers to fmul.o(.text) for __aeabi_fmul
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.q1) for q1
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.q2) for q2
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.q3) for q3
    mpu6050.o(.text.mpu_get_euler_angle) refers to fcmpeq.o(.text) for __aeabi_fcmpeq
    mpu6050.o(.text.mpu_get_euler_angle) refers to fadd.o(.text) for __aeabi_fadd
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.text.invSqrt) for invSqrt
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.exInt) for exInt
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.eyInt) for eyInt
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.ezInt) for ezInt
    mpu6050.o(.text.mpu_get_euler_angle) refers to f2d.o(.text) for __aeabi_f2d
    mpu6050.o(.text.mpu_get_euler_angle) refers to dmul.o(.text) for __aeabi_dmul
    mpu6050.o(.text.mpu_get_euler_angle) refers to dadd.o(.text) for __aeabi_dadd
    mpu6050.o(.text.mpu_get_euler_angle) refers to d2f.o(.text) for __aeabi_d2f
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.Gyr_D) for Gyr_D
    mpu6050.o(.text.mpu_get_euler_angle) refers to mpu6050.o(.bss.Angle) for Angle
    mpu6050.o(.text.mpu_get_euler_angle) refers to asin.o(i.asin) for asin
    mpu6050.o(.text.mpu_get_euler_angle) refers to atan2.o(i.atan2) for atan2
    mpu6050.o(.ARM.exidx.text.mpu_get_euler_angle) refers to mpu6050.o(.text.mpu_get_euler_angle) for [Anonymous Symbol]
    mpu6050.o(.text.invSqrt) refers to fmul.o(.text) for __aeabi_fmul
    mpu6050.o(.text.invSqrt) refers to fadd.o(.text) for __aeabi_fsub
    mpu6050.o(.ARM.exidx.text.invSqrt) refers to mpu6050.o(.text.invSqrt) for [Anonymous Symbol]
    pwm.o(.text.PWM_Config) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    pwm.o(.text.PWM_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    pwm.o(.text.PWM_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_OC2Init) for TIM_OC2Init
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_OC3Init) for TIM_OC3Init
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_OC4Init) for TIM_OC4Init
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_OC1PreloadConfig) for TIM_OC1PreloadConfig
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_OC2PreloadConfig) for TIM_OC2PreloadConfig
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_OC3PreloadConfig) for TIM_OC3PreloadConfig
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_OC4PreloadConfig) for TIM_OC4PreloadConfig
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_ARRPreloadConfig) for TIM_ARRPreloadConfig
    pwm.o(.text.PWM_Config) refers to stm32f10x_tim.o(.text.TIM_Cmd) for TIM_Cmd
    pwm.o(.ARM.exidx.text.PWM_Config) refers to pwm.o(.text.PWM_Config) for [Anonymous Symbol]
    pwm.o(.text.Motor_Pwm_Set) refers to pwm.o(.data.PWM_MAX) for PWM_MAX
    pwm.o(.ARM.exidx.text.Motor_Pwm_Set) refers to pwm.o(.text.Motor_Pwm_Set) for [Anonymous Symbol]
    pwm.o(.text.Motor_Max_Set) refers to pwm.o(.data.PWM_MAX) for PWM_MAX
    pwm.o(.ARM.exidx.text.Motor_Max_Set) refers to pwm.o(.text.Motor_Max_Set) for [Anonymous Symbol]
    timer.o(.text.TIMER_Config) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    timer.o(.text.TIMER_Config) refers to stm32f10x_tim.o(.text.TIM_DeInit) for TIM_DeInit
    timer.o(.text.TIMER_Config) refers to misc.o(.text.NVIC_Init) for NVIC_Init
    timer.o(.text.TIMER_Config) refers to stm32f10x_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    timer.o(.text.TIMER_Config) refers to stm32f10x_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    timer.o(.text.TIMER_Config) refers to stm32f10x_tim.o(.text.TIM_Cmd) for TIM_Cmd
    timer.o(.text.TIMER_Config) refers to main.o(.bss.canfly) for canfly
    timer.o(.ARM.exidx.text.TIMER_Config) refers to timer.o(.text.TIMER_Config) for [Anonymous Symbol]
    timer.o(.text.TIM2_IRQHandler) refers to stm32f10x_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    timer.o(.text.TIM2_IRQHandler) refers to main.o(.bss.canfly) for canfly
    timer.o(.text.TIM2_IRQHandler) refers to tick.o(.text.IS_200HZ) for IS_200HZ
    timer.o(.text.TIM2_IRQHandler) refers to mpu6050.o(.text.CanFly_Calcu_Position) for CanFly_Calcu_Position
    timer.o(.text.TIM2_IRQHandler) refers to control.o(.text.CanFly_Control) for CanFly_Control
    timer.o(.text.TIM2_IRQHandler) refers to protocol.o(.text.CanFly_Upload) for CanFly_Upload
    timer.o(.text.TIM2_IRQHandler) refers to stm32f10x_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    timer.o(.ARM.exidx.text.TIM2_IRQHandler) refers to timer.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    led.o(.text.WS2812B_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    led.o(.text.WS2812B_Config) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    led.o(.text.WS2812B_Config) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    led.o(.text.WS2812B_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    led.o(.text.WS2812B_Config) refers to stm32f10x_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    led.o(.text.WS2812B_Config) refers to stm32f10x_tim.o(.text.TIM_Cmd) for TIM_Cmd
    led.o(.text.WS2812B_Config) refers to stm32f10x_tim.o(.text.TIM_DMACmd) for TIM_DMACmd
    led.o(.text.WS2812B_Config) refers to stm32f10x_tim.o(.text.TIM_OC4Init) for TIM_OC4Init
    led.o(.text.WS2812B_Config) refers to stm32f10x_tim.o(.text.TIM_OC4PreloadConfig) for TIM_OC4PreloadConfig
    led.o(.text.WS2812B_Config) refers to led.o(.bss.LED_Buffer) for LED_Buffer
    led.o(.text.WS2812B_Config) refers to stm32f10x_dma.o(.text.DMA_Init) for DMA_Init
    led.o(.text.WS2812B_Config) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    led.o(.text.WS2812B_Config) refers to main.o(.bss.canfly) for canfly
    led.o(.ARM.exidx.text.WS2812B_Config) refers to led.o(.text.WS2812B_Config) for [Anonymous Symbol]
    led.o(.text.WS2812B_Reset) refers to delay.o(.text.delay_us) for delay_us
    led.o(.ARM.exidx.text.WS2812B_Reset) refers to led.o(.text.WS2812B_Reset) for [Anonymous Symbol]
    led.o(.text.WS2812B_Write_24Bits) refers to ffltui.o(.text) for __aeabi_ui2f
    led.o(.text.WS2812B_Write_24Bits) refers to main.o(.bss.canfly) for canfly
    led.o(.text.WS2812B_Write_24Bits) refers to fdiv.o(.text) for __aeabi_fdiv
    led.o(.text.WS2812B_Write_24Bits) refers to fmul.o(.text) for __aeabi_fmul
    led.o(.text.WS2812B_Write_24Bits) refers to ffixi.o(.text) for __aeabi_f2iz
    led.o(.text.WS2812B_Write_24Bits) refers to led.o(.bss.LED_Buffer) for LED_Buffer
    led.o(.ARM.exidx.text.WS2812B_Write_24Bits) refers to led.o(.text.WS2812B_Write_24Bits) for [Anonymous Symbol]
    led.o(.text.WS2812B_Show) refers to stm32f10x_dma.o(.text.DMA_GetCurrDataCounter) for DMA_GetCurrDataCounter
    led.o(.text.WS2812B_Show) refers to led.o(.text.WS2812B_Reset) for WS2812B_Reset
    led.o(.text.WS2812B_Show) refers to led.o(.bss.LED_Buffer) for LED_Buffer
    led.o(.text.WS2812B_Show) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    led.o(.text.WS2812B_Show) refers to stm32f10x_tim.o(.text.TIM_Cmd) for TIM_Cmd
    led.o(.text.WS2812B_Show) refers to stm32f10x_tim.o(.text.TIM_SetCompare4) for TIM_SetCompare4
    led.o(.text.WS2812B_Show) refers to stm32f10x_tim.o(.text.TIM_SetCounter) for TIM_SetCounter
    led.o(.text.WS2812B_Show) refers to stm32f10x_dma.o(.text.DMA_SetCurrDataCounter) for DMA_SetCurrDataCounter
    led.o(.ARM.exidx.text.WS2812B_Show) refers to led.o(.text.WS2812B_Show) for [Anonymous Symbol]
    led.o(.text.WS2812B_Red) refers to led.o(.text.WS2812B_Write_24Bits) for WS2812B_Write_24Bits
    led.o(.text.WS2812B_Red) refers to led.o(.text.WS2812B_Show) for WS2812B_Show
    led.o(.ARM.exidx.text.WS2812B_Red) refers to led.o(.text.WS2812B_Red) for [Anonymous Symbol]
    led.o(.text.WS2812B_Green) refers to led.o(.text.WS2812B_Write_24Bits) for WS2812B_Write_24Bits
    led.o(.text.WS2812B_Green) refers to led.o(.text.WS2812B_Show) for WS2812B_Show
    led.o(.ARM.exidx.text.WS2812B_Green) refers to led.o(.text.WS2812B_Green) for [Anonymous Symbol]
    led.o(.text.WS2812B_Blue) refers to led.o(.text.WS2812B_Write_24Bits) for WS2812B_Write_24Bits
    led.o(.text.WS2812B_Blue) refers to led.o(.text.WS2812B_Show) for WS2812B_Show
    led.o(.ARM.exidx.text.WS2812B_Blue) refers to led.o(.text.WS2812B_Blue) for [Anonymous Symbol]
    led.o(.text.WS2812B_White) refers to led.o(.text.WS2812B_Write_24Bits) for WS2812B_Write_24Bits
    led.o(.text.WS2812B_White) refers to led.o(.text.WS2812B_Show) for WS2812B_Show
    led.o(.ARM.exidx.text.WS2812B_White) refers to led.o(.text.WS2812B_White) for [Anonymous Symbol]
    led.o(.text.WS2812B_Dark) refers to led.o(.text.WS2812B_Write_24Bits) for WS2812B_Write_24Bits
    led.o(.text.WS2812B_Dark) refers to led.o(.text.WS2812B_Show) for WS2812B_Show
    led.o(.ARM.exidx.text.WS2812B_Dark) refers to led.o(.text.WS2812B_Dark) for [Anonymous Symbol]
    led.o(.text.WS2812B_Yellow) refers to led.o(.text.WS2812B_Write_24Bits) for WS2812B_Write_24Bits
    led.o(.text.WS2812B_Yellow) refers to led.o(.text.WS2812B_Show) for WS2812B_Show
    led.o(.ARM.exidx.text.WS2812B_Yellow) refers to led.o(.text.WS2812B_Yellow) for [Anonymous Symbol]
    led.o(.text.WS2812B_Rand) refers to rand.o(.text) for rand
    led.o(.text.WS2812B_Rand) refers to led.o(.text.WS2812B_Write_24Bits) for WS2812B_Write_24Bits
    led.o(.text.WS2812B_Rand) refers to led.o(.text.WS2812B_Show) for WS2812B_Show
    led.o(.ARM.exidx.text.WS2812B_Rand) refers to led.o(.text.WS2812B_Rand) for [Anonymous Symbol]
    led.o(.text.WS2812B_Color) refers to led.o(.text.WS2812B_Write_24Bits) for WS2812B_Write_24Bits
    led.o(.text.WS2812B_Color) refers to led.o(.text.WS2812B_Show) for WS2812B_Show
    led.o(.ARM.exidx.text.WS2812B_Color) refers to led.o(.text.WS2812B_Color) for [Anonymous Symbol]
    led.o(.text.WS2812B_Blink) refers to led.o(.rodata..L__const.WS2812B_Blink.stay_color) for .L__const.WS2812B_Blink.stay_color
    led.o(.text.WS2812B_Blink) refers to main.o(.bss.canfly) for canfly
    led.o(.text.WS2812B_Blink) refers to led.o(.text.WS2812B_Color) for WS2812B_Color
    led.o(.text.WS2812B_Blink) refers to led.o(.bss.WS2812B_Blink.change) for WS2812B_Blink.change
    led.o(.text.WS2812B_Blink) refers to led.o(.text.WS2812B_Red) for WS2812B_Red
    led.o(.text.WS2812B_Blink) refers to led.o(.text.WS2812B_Dark) for WS2812B_Dark
    led.o(.text.WS2812B_Blink) refers to led.o(.text.WS2812B_Yellow) for WS2812B_Yellow
    led.o(.ARM.exidx.text.WS2812B_Blink) refers to led.o(.text.WS2812B_Blink) for [Anonymous Symbol]
    led.o(.text.LED_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    led.o(.text.LED_Config) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    led.o(.ARM.exidx.text.LED_Config) refers to led.o(.text.LED_Config) for [Anonymous Symbol]
    led.o(.text.LED_Blink) refers to led.o(.bss.LED_Blink.flag) for LED_Blink.flag
    led.o(.text.LED_Blink) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    led.o(.text.LED_Blink) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    led.o(.ARM.exidx.text.LED_Blink) refers to led.o(.text.LED_Blink) for [Anonymous Symbol]
    tick.o(.text.IS_200HZ) refers to main.o(.bss.canfly) for canfly
    tick.o(.text.IS_200HZ) refers to tick.o(.bss.IS_200HZ.last_ms) for IS_200HZ.last_ms
    tick.o(.ARM.exidx.text.IS_200HZ) refers to tick.o(.text.IS_200HZ) for [Anonymous Symbol]
    tick.o(.text.IS_100HZ) refers to main.o(.bss.canfly) for canfly
    tick.o(.text.IS_100HZ) refers to tick.o(.bss.IS_100HZ.last_ms) for IS_100HZ.last_ms
    tick.o(.ARM.exidx.text.IS_100HZ) refers to tick.o(.text.IS_100HZ) for [Anonymous Symbol]
    tick.o(.text.IS_10HZ) refers to main.o(.bss.canfly) for canfly
    tick.o(.text.IS_10HZ) refers to tick.o(.bss.IS_10HZ.last_ms) for IS_10HZ.last_ms
    tick.o(.ARM.exidx.text.IS_10HZ) refers to tick.o(.text.IS_10HZ) for [Anonymous Symbol]
    tick.o(.text.IS_2HZ) refers to main.o(.bss.canfly) for canfly
    tick.o(.text.IS_2HZ) refers to tick.o(.bss.IS_2HZ.last_ms) for IS_2HZ.last_ms
    tick.o(.ARM.exidx.text.IS_2HZ) refers to tick.o(.text.IS_2HZ) for [Anonymous Symbol]
    tick.o(.text.IS_1HZ) refers to main.o(.bss.canfly) for canfly
    tick.o(.text.IS_1HZ) refers to tick.o(.bss.IS_1HZ.last_ms) for IS_1HZ.last_ms
    tick.o(.ARM.exidx.text.IS_1HZ) refers to tick.o(.text.IS_1HZ) for [Anonymous Symbol]
    pid.o(.text.PID_Postion_Cal) refers to fadd.o(.text) for __aeabi_fsub
    pid.o(.text.PID_Postion_Cal) refers to fmul.o(.text) for __aeabi_fmul
    pid.o(.text.PID_Postion_Cal) refers to fflti.o(.text) for __aeabi_i2f
    pid.o(.text.PID_Postion_Cal) refers to main.o(.bss.canfly) for canfly
    pid.o(.text.PID_Postion_Cal) refers to fcmpgt.o(.text) for __aeabi_fcmpgt
    pid.o(.text.PID_Postion_Cal) refers to fcmpge.o(.text) for __aeabi_fcmpge
    pid.o(.text.PID_Postion_Cal) refers to fcmple.o(.text) for __aeabi_fcmple
    pid.o(.ARM.exidx.text.PID_Postion_Cal) refers to pid.o(.text.PID_Postion_Cal) for [Anonymous Symbol]
    pid.o(.text.PID_Parm_Config) refers to pid.o(.bss.PID_ROL_Angle) for PID_ROL_Angle
    pid.o(.text.PID_Parm_Config) refers to memseta.o(.text) for __aeabi_memclr4
    pid.o(.text.PID_Parm_Config) refers to pid.o(.bss.PID_PIT_Angle) for PID_PIT_Angle
    pid.o(.text.PID_Parm_Config) refers to pid.o(.bss.PID_YAW_Angle) for PID_YAW_Angle
    pid.o(.text.PID_Parm_Config) refers to pid.o(.bss.PID_ROL_Rate) for PID_ROL_Rate
    pid.o(.text.PID_Parm_Config) refers to pid.o(.bss.PID_PIT_Rate) for PID_PIT_Rate
    pid.o(.text.PID_Parm_Config) refers to pid.o(.bss.PID_YAW_Rate) for PID_YAW_Rate
    pid.o(.text.PID_Parm_Config) refers to pid.o(.bss.PID_ALT) for PID_ALT
    pid.o(.text.PID_Parm_Config) refers to pid.o(.bss.PID_ALT_Rate) for PID_ALT_Rate
    pid.o(.ARM.exidx.text.PID_Parm_Config) refers to pid.o(.text.PID_Parm_Config) for [Anonymous Symbol]
    control.o(.ARM.exidx.text.PWM_Limit) refers to control.o(.text.PWM_Limit) for [Anonymous Symbol]
    control.o(.text.CanFly_Control) refers to main.o(.bss.canfly) for canfly
    control.o(.text.CanFly_Control) refers to pwm.o(.text.Motor_Pwm_Set) for Motor_Pwm_Set
    control.o(.text.CanFly_Control) refers to control.o(.text.CanFly_PID_Call) for CanFly_PID_Call
    control.o(.ARM.exidx.text.CanFly_Control) refers to control.o(.text.CanFly_Control) for [Anonymous Symbol]
    control.o(.text.CanFly_PID_Call) refers to main.o(.bss.canfly) for canfly
    control.o(.text.CanFly_PID_Call) refers to fflti.o(.text) for __aeabi_i2f
    control.o(.text.CanFly_PID_Call) refers to mpu6050.o(.bss.Angle) for Angle
    control.o(.text.CanFly_PID_Call) refers to pid.o(.bss.PID_ROL_Angle) for PID_ROL_Angle
    control.o(.text.CanFly_PID_Call) refers to pid.o(.text.PID_Postion_Cal) for PID_Postion_Cal
    control.o(.text.CanFly_PID_Call) refers to pid.o(.bss.PID_PIT_Angle) for PID_PIT_Angle
    control.o(.text.CanFly_PID_Call) refers to mpu6050.o(.bss.Gyr_D) for Gyr_D
    control.o(.text.CanFly_PID_Call) refers to pid.o(.bss.PID_ROL_Rate) for PID_ROL_Rate
    control.o(.text.CanFly_PID_Call) refers to pid.o(.bss.PID_PIT_Rate) for PID_PIT_Rate
    control.o(.text.CanFly_PID_Call) refers to pid.o(.bss.PID_YAW_Angle) for PID_YAW_Angle
    control.o(.text.CanFly_PID_Call) refers to pid.o(.bss.PID_YAW_Rate) for PID_YAW_Rate
    control.o(.text.CanFly_PID_Call) refers to fadd.o(.text) for __aeabi_fadd
    control.o(.text.CanFly_PID_Call) refers to ffixi.o(.text) for __aeabi_f2iz
    control.o(.text.CanFly_PID_Call) refers to pwm.o(.data.PWM_MAX) for PWM_MAX
    control.o(.text.CanFly_PID_Call) refers to control.o(.text.PWM_Limit) for PWM_Limit
    control.o(.ARM.exidx.text.CanFly_PID_Call) refers to control.o(.text.CanFly_PID_Call) for [Anonymous Symbol]
    telecom.o(.text.RC_Send_Info) refers to stm32f10x_dma.o(.text.DMA_GetCurrDataCounter) for DMA_GetCurrDataCounter
    telecom.o(.text.RC_Send_Info) refers to main.o(.bss.canfly) for canfly
    telecom.o(.text.RC_Send_Info) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    telecom.o(.text.RC_Send_Info) refers to stm32f10x_dma.o(.text.DMA_SetCurrDataCounter) for DMA_SetCurrDataCounter
    telecom.o(.ARM.exidx.text.RC_Send_Info) refers to telecom.o(.text.RC_Send_Info) for [Anonymous Symbol]
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to timer.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to usart.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to usart.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    asin.o(i.__softfp_asin) refers (Special) to iusefp.o(.text) for __I$use$fp
    asin.o(i.__softfp_asin) refers to asin.o(i.asin) for asin
    asin.o(i.asin) refers (Special) to iusefp.o(.text) for __I$use$fp
    asin.o(i.asin) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    asin.o(i.asin) refers to dmul.o(.text) for __aeabi_dmul
    asin.o(i.asin) refers to dadd.o(.text) for __aeabi_dadd
    asin.o(i.asin) refers to errno.o(i.__set_errno) for __set_errno
    asin.o(i.asin) refers to dunder.o(i.__mathlib_dbl_invalid) for __mathlib_dbl_invalid
    asin.o(i.asin) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    asin.o(i.asin) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    asin.o(i.asin) refers to poly.o(i.__kernel_poly) for __kernel_poly
    asin.o(i.asin) refers to ddiv.o(.text) for __aeabi_ddiv
    asin.o(i.asin) refers to dscalb.o(.text) for __ARM_scalbn
    asin.o(i.asin) refers to sqrt.o(i.sqrt) for sqrt
    asin.o(i.asin) refers to asin.o(.constdata) for .constdata
    asin.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan2.o(i.__softfp_atan2) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan2.o(i.__softfp_atan2) refers to atan2.o(i.atan2) for atan2
    atan2.o(i.atan2) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan2.o(i.atan2) refers to dunder.o(i.__mathlib_dbl_infnan2) for __mathlib_dbl_infnan2
    atan2.o(i.atan2) refers to atan.o(i.atan) for atan
    atan2.o(i.atan2) refers to ddiv.o(.text) for __aeabi_ddiv
    atan2.o(i.atan2) refers to dadd.o(.text) for __aeabi_dsub
    atan2.o(i.atan2) refers to cdcmple.o(.text) for __aeabi_cdcmpeq
    atan2.o(i.atan2) refers to errno.o(i.__set_errno) for __set_errno
    atan2.o(i.atan2) refers to qnan.o(.constdata) for __mathlib_zero
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    rand.o(.text) refers to rand.o(.data) for .data
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    fcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fcmpgt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fcmpeq.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    atan.o(i.__softfp_atan) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan.o(i.__softfp_atan) refers to atan.o(i.atan) for atan
    atan.o(i.atan) refers (Special) to iusefp.o(.text) for __I$use$fp
    atan.o(i.atan) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    atan.o(i.atan) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    atan.o(i.atan) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    atan.o(i.atan) refers to dadd.o(.text) for __aeabi_dadd
    atan.o(i.atan) refers to dscalb.o(.text) for __ARM_scalbn
    atan.o(i.atan) refers to ddiv.o(.text) for __aeabi_ddiv
    atan.o(i.atan) refers to dmul.o(.text) for __aeabi_dmul
    atan.o(i.atan) refers to poly.o(i.__kernel_poly) for __kernel_poly
    atan.o(i.atan) refers to atan.o(.constdata) for .constdata
    atan.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    dunder.o(i.__mathlib_dbl_divzero) refers to ddiv.o(.text) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_infnan) refers to dscalb.o(.text) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_infnan2) refers to dadd.o(.text) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_invalid) refers to ddiv.o(.text) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_overflow) refers to dscalb.o(.text) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_posinfnan) refers to dmul.o(.text) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_underflow) refers to dscalb.o(.text) for __ARM_scalbn
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to iusefp.o(.text) for __I$use$fp
    poly.o(i.__kernel_poly) refers (Special) to iusefp.o(.text) for __I$use$fp
    poly.o(i.__kernel_poly) refers to dmul.o(.text) for __aeabi_dmul
    poly.o(i.__kernel_poly) refers to dadd.o(.text) for __aeabi_dadd
    qnan.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrt.o(i.__softfp_sqrt) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrt.o(i.__softfp_sqrt) refers to dsqrt.o(.text) for _dsqrt
    sqrt.o(i.__softfp_sqrt) refers to errno.o(i.__set_errno) for __set_errno
    sqrt.o(i.sqrt) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrt.o(i.sqrt) refers to dsqrt.o(.text) for _dsqrt
    sqrt.o(i.sqrt) refers to errno.o(i.__set_errno) for __set_errno
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dscalb.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    cdcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    dsqrt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dsqrt.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dsqrt.o(.text) refers to depilogue.o(.text) for _double_round


==============================================================================

Removing Unused input sections from the image.

    Removing misc.o(.text), (0 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig), (8 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing misc.o(.text.NVIC_SetVectorTable), (36 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SetVectorTable), (8 bytes).
    Removing misc.o(.text.NVIC_SystemLPConfig), (62 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text), (0 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_StructInit), (36 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_DMACmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ITConfig), (66 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ResetCalibration), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetResetCalibrationStatus), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_StartCalibration), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetCalibrationStatus), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetSoftwareStartConvStatus), (46 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartConvStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_DiscModeChannelCountConfig), (56 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_DiscModeChannelCountConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_DiscModeCmd), (44 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_DiscModeCmd), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ExternalTrigConvCmd), (44 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetConversionValue), (14 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetDualModeConversionValue), (12 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetDualModeConversionValue), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_AutoInjectedConvCmd), (44 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_AutoInjectedConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_InjectedDiscModeCmd), (44 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedDiscModeCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ExternalTrigInjectedConvConfig), (42 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ExternalTrigInjectedConvCmd), (44 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_SoftwareStartInjectedConvCmd), (44 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_SoftwareStartInjectedConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetSoftwareStartInjectedConvCmdStatus), (46 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartInjectedConvCmdStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_InjectedChannelConfig), (246 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedChannelConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_InjectedSequencerLengthConfig), (56 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedSequencerLengthConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_SetInjectedOffset), (42 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_SetInjectedOffset), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetInjectedConversionValue), (38 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetInjectedConversionValue), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_AnalogWatchdogCmd), (48 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (32 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (46 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_TempSensorVrefintCmd), (54 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_TempSensorVrefintCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetFlagStatus), (52 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ClearFlag), (22 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetITStatus), (78 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ClearITPendingBit), (36 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_bkp.o(.text), (0 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_DeInit), (16 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_DeInit), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_TamperPinLevelConfig), (24 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_TamperPinLevelConfig), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_TamperPinCmd), (24 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_TamperPinCmd), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_ITConfig), (24 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_ITConfig), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_RTCOutputConfig), (62 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_RTCOutputConfig), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_SetRTCCalibrationValue), (62 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_SetRTCCalibrationValue), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_WriteBackupRegister), (46 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_WriteBackupRegister), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_ReadBackupRegister), (38 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_ReadBackupRegister), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_GetFlagStatus), (14 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_GetFlagStatus), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_ClearFlag), (18 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_ClearFlag), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_GetITStatus), (14 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_GetITStatus), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_ClearITPendingBit), (18 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_can.o(.text), (0 bytes).
    Removing stm32f10x_can.o(.text.CAN_DeInit), (70 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_DeInit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_Init), (438 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Init), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_FilterInit), (346 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_FilterInit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_StructInit), (60 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_StructInit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_SlaveStartBank), (56 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_SlaveStartBank), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_DBGFreeze), (44 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_DBGFreeze), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_TTComModeCmd), (128 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_TTComModeCmd), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_Transmit), (322 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Transmit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_TransmitStatus), (248 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_TransmitStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_CancelTransmit), (78 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_CancelTransmit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_Receive), (340 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Receive), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_FIFORelease), (44 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_FIFORelease), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_MessagePending), (78 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_MessagePending), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_OperatingModeRequest), (342 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_OperatingModeRequest), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_Sleep), (56 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Sleep), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_WakeUp), (102 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_WakeUp), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetLastErrorCode), (30 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetLastErrorCode), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetReceiveErrorCounter), (28 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetReceiveErrorCounter), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetLSBTransmitErrorCounter), (28 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetLSBTransmitErrorCounter), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_ITConfig), (46 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ITConfig), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetFlagStatus), (232 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetFlagStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_ClearFlag), (118 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ClearFlag), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetITStatus), (412 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetITStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CheckITStatus), (46 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CheckITStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_ClearITPendingBit), (238 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_cec.o(.text), (0 bytes).
    Removing stm32f10x_cec.o(.text.CEC_DeInit), (28 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_DeInit), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_Init), (64 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_Init), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_Cmd), (52 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_Cmd), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_ITConfig), (22 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_ITConfig), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_OwnAddressConfig), (24 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_OwnAddressConfig), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_SetPrescaler), (24 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_SetPrescaler), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_SendDataByte), (24 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_SendDataByte), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_ReceiveDataByte), (14 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_ReceiveDataByte), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_StartOfMessage), (14 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_StartOfMessage), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_EndOfMessageCmd), (24 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_EndOfMessageCmd), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_GetFlagStatus), (102 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_ClearFlag), (46 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_ClearFlag), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_GetITStatus), (80 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_GetITStatus), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_ClearITPendingBit), (50 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_crc.o(.text), (0 bytes).
    Removing stm32f10x_crc.o(.text.CRC_ResetDR), (14 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_ResetDR), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_CalcCRC), (22 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_CalcCRC), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_CalcBlockCRC), (66 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_GetCRC), (12 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_GetCRC), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_SetIDRegister), (24 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_SetIDRegister), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_GetIDRegister), (12 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_GetIDRegister), (8 bytes).
    Removing stm32f10x_dac.o(.text), (0 bytes).
    Removing stm32f10x_dac.o(.text.DAC_DeInit), (28 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_DeInit), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_Init), (84 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_Init), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_StructInit), (26 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_StructInit), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_Cmd), (68 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_DMACmd), (72 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_DMACmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_SoftwareTriggerCmd), (72 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_SoftwareTriggerCmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_DualSoftwareTriggerCmd), (54 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_DualSoftwareTriggerCmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_WaveGenerationCmd), (70 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_WaveGenerationCmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_SetChannel1Data), (44 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_SetChannel1Data), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_SetChannel2Data), (44 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_SetChannel2Data), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_SetDualChannelData), (88 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_SetDualChannelData), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_GetDataOutputValue), (40 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_GetDataOutputValue), (8 bytes).
    Removing stm32f10x_dbgmcu.o(.text), (0 bytes).
    Removing stm32f10x_dbgmcu.o(.text.DBGMCU_GetREVID), (14 bytes).
    Removing stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetREVID), (8 bytes).
    Removing stm32f10x_dbgmcu.o(.text.DBGMCU_GetDEVID), (16 bytes).
    Removing stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetDEVID), (8 bytes).
    Removing stm32f10x_dbgmcu.o(.text.DBGMCU_Config), (56 bytes).
    Removing stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_Config), (8 bytes).
    Removing stm32f10x_dma.o(.text), (0 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_StructInit), (54 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_ITConfig), (46 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_ITConfig), (8 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter), (8 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_GetFlagStatus), (84 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_ClearFlag), (46 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_GetITStatus), (84 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_GetITStatus), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_ClearITPendingBit), (46 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_exti.o(.text), (0 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_DeInit), (62 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_Init), (234 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_StructInit), (28 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_GenerateSWInterrupt), (24 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_GetFlagStatus), (52 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_ClearFlag), (20 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_GetITStatus), (76 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_ClearITPendingBit), (20 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_flash.o(.text), (0 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_SetLatency), (44 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_HalfCycleAccessCmd), (32 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_HalfCycleAccessCmd), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_PrefetchBufferCmd), (32 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_Unlock), (30 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_UnlockBank1), (30 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_UnlockBank1), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_Lock), (18 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_LockBank1), (18 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_LockBank1), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ErasePage), (106 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_WaitForLastOperation), (94 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_EraseAllPages), (92 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_EraseAllBank1Pages), (92 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseAllBank1Pages), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_WaitForLastBank1Operation), (94 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_WaitForLastBank1Operation), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_EraseOptionBytes), (254 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseOptionBytes), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetReadOutProtectionStatus), (50 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetReadOutProtectionStatus), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ProgramWord), (160 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramWord), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ProgramHalfWord), (98 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ProgramOptionByteData), (142 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByteData), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_EnableWriteProtection), (360 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_EnableWriteProtection), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ReadOutProtection), (258 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ReadOutProtection), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_UserOptionByteConfig), (170 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_UserOptionByteConfig), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetUserOptionByte), (14 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetUserOptionByte), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetWriteProtectionOptionByte), (12 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetWriteProtectionOptionByte), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetPrefetchBufferStatus), (50 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ITConfig), (56 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetFlagStatus), (96 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ClearFlag), (20 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetStatus), (104 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetBank1Status), (104 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetBank1Status), (8 bytes).
    Removing stm32f10x_fsmc.o(.text), (0 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NORSRAMDeInit), (76 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMDeInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDDeInit), (100 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDDeInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_PCCARDDeInit), (50 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDDeInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit), (250 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDInit), (180 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_PCCARDInit), (132 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NORSRAMStructInit), (160 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMStructInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDStructInit), (90 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDStructInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_PCCARDStructInit), (96 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDStructInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NORSRAMCmd), (66 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMCmd), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDCmd), (116 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDCmd), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_PCCARDCmd), (56 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDCmd), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDECCCmd), (116 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDECCCmd), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_GetECC), (46 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetECC), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_ITConfig), (162 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ITConfig), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_GetFlagStatus), (104 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_ClearFlag), (78 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ClearFlag), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_GetITStatus), (128 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetITStatus), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_ClearITPendingBit), (84 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text), (0 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_DeInit), (276 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_AFIODeInit), (26 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_StructInit), (28 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit), (52 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadInputData), (14 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit), (52 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadOutputData), (14 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_WriteBit), (44 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_Write), (20 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_PinLockConfig), (60 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EventOutputConfig), (64 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EventOutputCmd), (22 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputCmd), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_PinRemapConfig), (250 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinRemapConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EXTILineConfig), (84 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EXTILineConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ETH_MediaInterfaceConfig), (18 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ETH_MediaInterfaceConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text), (0 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_DeInit), (70 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_Init), (426 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_StructInit), (46 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_Cmd), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_DMACmd), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_DMACmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_DMALastTransferCmd), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_DMALastTransferCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GenerateSTART), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GenerateSTART), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GenerateSTOP), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_AcknowledgeConfig), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_OwnAddress2Config), (64 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_DualAddressCmd), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GeneralCallCmd), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ITConfig), (52 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ITConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_SendData), (20 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ReceiveData), (14 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_Send7bitAddress), (60 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_Send7bitAddress), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ReadRegister), (34 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_SoftwareResetCmd), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_NACKPositionConfig), (48 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_NACKPositionConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_SMBusAlertConfig), (48 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_SMBusAlertConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_TransmitPEC), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_TransmitPEC), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_PECPositionConfig), (48 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_PECPositionConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_CalculatePEC), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_CalculatePEC), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GetPEC), (14 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetPEC), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ARPCmd), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ARPCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_StretchClockCmd), (44 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_FastModeDutyCycleConfig), (48 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_FastModeDutyCycleConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_CheckEvent), (84 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_CheckEvent), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GetLastEvent), (48 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetLastEvent), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GetFlagStatus), (98 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ClearFlag), (30 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GetITStatus), (80 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetITStatus), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ClearITPendingBit), (30 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_iwdg.o(.text), (0 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_WriteAccessCmd), (24 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_SetPrescaler), (24 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_SetReload), (24 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_ReloadCounter), (16 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_Enable), (16 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_GetFlagStatus), (56 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing stm32f10x_pwr.o(.text), (0 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_DeInit), (28 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_BackupAccessCmd), (22 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_PVDCmd), (22 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_PVDCmd), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_PVDLevelConfig), (44 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_WakeUpPinCmd), (22 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_EnterSTOPMode), (104 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_EnterSTANDBYMode), (40 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_GetFlagStatus), (52 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_ClearFlag), (26 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_ClearFlag), (8 bytes).
    Removing stm32f10x_pwr.o(.text.__WFI), (4 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.__WFI), (8 bytes).
    Removing stm32f10x_pwr.o(.text.__WFE), (4 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.__WFE), (8 bytes).
    Removing stm32f10x_rcc.o(.text), (0 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_DeInit), (82 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HSEConfig), (92 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp), (108 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetFlagStatus), (130 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_AdjustHSICalibrationValue), (50 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HSICmd), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PLLConfig), (50 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PLLCmd), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_SYSCLKConfig), (44 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HCLKConfig), (44 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PCLK1Config), (44 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK1Config), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PCLK2Config), (46 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK2Config), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ITConfig), (62 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_USBCLKConfig), (18 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_LSEConfig), (76 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSEConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_LSICmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_RTCCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_RTCCLKCmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_BackupResetCmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClockSecuritySystemCmd), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_MCOConfig), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClearFlag), (18 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetITStatus), (56 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClearITPendingBit), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_rtc.o(.text), (0 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ITConfig), (62 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ITConfig), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_EnterConfigMode), (18 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_EnterConfigMode), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ExitConfigMode), (18 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ExitConfigMode), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetCounter), (108 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetCounter), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetCounter), (44 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetCounter), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetPrescaler), (46 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetPrescaler), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetAlarm), (44 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetAlarm), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetDivider), (46 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetDivider), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_WaitForLastTask), (24 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForLastTask), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_WaitForSynchro), (40 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetFlagStatus), (58 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ClearFlag), (28 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetITStatus), (86 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetITStatus), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ClearITPendingBit), (28 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_sdio.o(.text), (0 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_DeInit), (102 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DeInit), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_Init), (78 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_Init), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_StructInit), (34 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StructInit), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ClockCmd), (22 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClockCmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SetPowerState), (20 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetPowerState), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetPowerState), (16 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetPowerState), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ITConfig), (56 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ITConfig), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_DMACmd), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DMACmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SendCommand), (78 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendCommand), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_CmdStructInit), (30 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CmdStructInit), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetCommandResponse), (14 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetCommandResponse), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetResponse), (30 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetResponse), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_DataConfig), (90 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DataConfig), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_DataStructInit), (38 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DataStructInit), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetDataCounter), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetDataCounter), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ReadData), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ReadData), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_WriteData), (20 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_WriteData), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetFIFOCount), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetFIFOCount), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_StartSDIOReadWait), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StartSDIOReadWait), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_StopSDIOReadWait), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StopSDIOReadWait), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SetSDIOReadWaitMode), (20 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetSDIOReadWaitMode), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SetSDIOOperation), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetSDIOOperation), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SendSDIOSuspendCmd), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendSDIOSuspendCmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_CommandCompletionCmd), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CommandCompletionCmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_CEATAITCmd), (28 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CEATAITCmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SendCEATACmd), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendCEATACmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetFlagStatus), (52 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetFlagStatus), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ClearFlag), (20 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClearFlag), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetITStatus), (52 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetITStatus), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ClearITPendingBit), (20 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_spi.o(.text), (0 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_DeInit), (128 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_DeInit), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_Init), (104 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing stm32f10x_spi.o(.text.I2S_Init), (372 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_StructInit), (48 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing stm32f10x_spi.o(.text.I2S_StructInit), (36 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.I2S_StructInit), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_Cmd), (44 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing stm32f10x_spi.o(.text.I2S_Cmd), (44 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_ITConfig), (84 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_DMACmd), (52 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_DMACmd), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_SendData), (20 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_SendData), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_ReceiveData), (12 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_NSSInternalSoftwareConfig), (50 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_SSOutputCmd), (44 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_SSOutputCmd), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_DataSizeConfig), (34 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_TransmitCRC), (18 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_TransmitCRC), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_CalculateCRC), (44 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_CalculateCRC), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_GetCRC), (52 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_GetCRC), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_GetCRCPolynomial), (12 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_BiDirectionalLineConfig), (48 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_GetFlagStatus), (54 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_ClearFlag), (22 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_GetITStatus), (126 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_ClearITPendingBit), (44 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_tim.o(.text), (0 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ICInit), (242 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI1_Config), (260 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI1_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC1Prescaler), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI2_Config), (286 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI2_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC2Prescaler), (36 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI3_Config), (274 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI3_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC3Prescaler), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI4_Config), (288 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI4_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC4Prescaler), (36 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_PWMIConfig), (190 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_BDTRConfig), (44 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_TimeBaseStructInit), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OCStructInit), (42 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ICStructInit), (32 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_BDTRStructInit), (38 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CtrlPWMOutputs), (52 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GenerateEvent), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_DMAConfig), (32 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DMAConfig), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_InternalClockConfig), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ITRxExternalClockConfig), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectInputTrigger), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig), (88 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRClockMode1Config), (110 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRConfig), (78 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRClockMode2Config), (50 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_PrescalerConfig), (32 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CounterModeConfig), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_EncoderInterfaceConfig), (170 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC1Config), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC2Config), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC3Config), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC4Config), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectCOM), (44 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectCCDMA), (44 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCCDMA), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCPreloadControl), (44 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1FastConfig), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2FastConfig), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3FastConfig), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4FastConfig), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC1Ref), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC2Ref), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC3Ref), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC4Ref), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1PolarityConfig), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1NPolarityConfig), (60 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2PolarityConfig), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2NPolarityConfig), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3PolarityConfig), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3NPolarityConfig), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4PolarityConfig), (62 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCxCmd), (66 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCxNCmd), (66 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOCxM), (156 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_UpdateDisableConfig), (44 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_UpdateRequestConfig), (44 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectHallSensor), (44 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOnePulseMode), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOutputTrigger), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectSlaveMode), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectMasterSlaveMode), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetAutoreload), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare1), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare2), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare3), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetClockDivision), (34 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture1), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture2), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture3), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture4), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCounter), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetPrescaler), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetFlagStatus), (54 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearFlag), (22 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_usart.o(.text), (0 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_StructInit), (40 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClockInit), (58 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClockStructInit), (26 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_DMACmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetAddress), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_WakeUpConfig), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_WakeUpConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ReceiverWakeUpCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiverWakeUpCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_LINBreakDetectLengthConfig), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_LINCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_LINCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SendData), (24 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SendBreak), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SendBreak), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetGuardTime), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetPrescaler), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetPrescaler), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SmartCardCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SmartCardNACKCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_HalfDuplexCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_OverSampling8Cmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_OneBitMethodCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_IrDAConfig), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_IrDACmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_GetFlagStatus), (68 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClearFlag), (36 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClearITPendingBit), (68 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_wwdg.o(.text), (0 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_DeInit), (28 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_DeInit), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_SetPrescaler), (40 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_SetWindowValue), (48 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_EnableIT), (14 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_EnableIT), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_SetCounter), (28 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetCounter), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_Enable), (28 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_Enable), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_GetFlagStatus), (14 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_ClearFlag), (14 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stm32f10x_it.o(.text), (0 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.text.SystemCoreClockUpdate), (290 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing system_stm32f10x.o(.rodata.AHBPrescTable), (16 bytes).
    Removing delay.o(.text), (0 bytes).
    Removing delay.o(.ARM.exidx.text.DELAY_Config), (8 bytes).
    Removing delay.o(.ARM.exidx.text.delay_us), (8 bytes).
    Removing delay.o(.ARM.exidx.text.delay_ms), (8 bytes).
    Removing iic.o(.text), (0 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_Config), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_DELAY), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_HALF_DELAY), (8 bytes).
    Removing iic.o(.text.IIC_Set_Delay_Us), (24 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_Set_Delay_Us), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_START), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_STOP), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_ACK), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_NACK), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_WAIT_ACK), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_SEND_BYTE), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_RECEIVE_BYTE), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_READ_BYTE), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_WRITE_BYTE), (8 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_READ), (8 bytes).
    Removing iic.o(.text.IIC_WRITE), (138 bytes).
    Removing iic.o(.ARM.exidx.text.IIC_WRITE), (8 bytes).
    Removing includes.o(.text), (0 bytes).
    Removing protocol.o(.text), (0 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_head), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_check), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_check_fill), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_fill_u8bit), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_fill_u16bit), (8 bytes).
    Removing protocol.o(.text.ano_data_fill_u32bit), (76 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_fill_u32bit), (8 bytes).
    Removing protocol.o(.text.ano_data_fill_s8bit), (36 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_fill_s8bit), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_fill_s16bit), (8 bytes).
    Removing protocol.o(.text.ano_data_fill_s32bit), (76 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_fill_s32bit), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_get_u8bit), (8 bytes).
    Removing protocol.o(.text.ano_data_get_u16bit), (64 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_get_u16bit), (8 bytes).
    Removing protocol.o(.text.ano_data_get_u32bit), (104 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_get_u32bit), (8 bytes).
    Removing protocol.o(.text.ano_data_get_s8bit), (44 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_get_s8bit), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_get_s16bit), (8 bytes).
    Removing protocol.o(.text.ano_data_get_s32bit), (104 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_get_s32bit), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_isensor), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_euler_arc), (8 bytes).
    Removing protocol.o(.text.ano_data_make_target_euler_arc), (136 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_target_euler_arc), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_ctrl_euler_arc), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_rgb), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_pwm), (8 bytes).
    Removing protocol.o(.text.ano_data_make_atti), (138 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_atti), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_flymode), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_bat), (8 bytes).
    Removing protocol.o(.text.ano_data_make_valid), (110 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_make_valid), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.ano_data_decode), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.CanFly_Upload), (8 bytes).
    Removing protocol.o(.ARM.exidx.text.CanFly_Decode), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.IO_Config), (8 bytes).
    Removing config.o(.text), (0 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.text.fputc), (54 bytes).
    Removing usart.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_Config), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART2_Config), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing usart.o(.text.USART1_SendStr), (90 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_SendStr), (8 bytes).
    Removing usart.o(.text.USART2_SendStr), (90 bytes).
    Removing usart.o(.ARM.exidx.text.USART2_SendStr), (8 bytes).
    Removing usart.o(.text.USART1_SendHex), (74 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_SendHex), (8 bytes).
    Removing usart.o(.text.USART2_SendHex), (74 bytes).
    Removing usart.o(.ARM.exidx.text.USART2_SendHex), (8 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Config), (8 bytes).
    Removing adc.o(.text.ADC_get), (78 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_get), (8 bytes).
    Removing adc.o(.text.ADC_get_ave), (94 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_get_ave), (8 bytes).
    Removing adc.o(.ARM.exidx.text.CanFly_Bat), (8 bytes).
    Removing mpu6050.o(.text), (0 bytes).
    Removing mpu6050.o(.ARM.exidx.text.MPU_Config), (8 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_read_byte), (8 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_write_byte), (8 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu6050_offset), (8 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_get_sensor_data), (8 bytes).
    Removing mpu6050.o(.text.mpu_get_temp), (108 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_get_temp), (8 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_read), (8 bytes).
    Removing mpu6050.o(.text.mpu_get_gyr), (94 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_get_gyr), (8 bytes).
    Removing mpu6050.o(.text.mpu_get_acc), (94 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_get_acc), (8 bytes).
    Removing mpu6050.o(.text.mpu_write), (38 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_write), (8 bytes).
    Removing mpu6050.o(.text.FindPos), (194 bytes).
    Removing mpu6050.o(.ARM.exidx.text.FindPos), (8 bytes).
    Removing mpu6050.o(.text.QuiteSort), (66 bytes).
    Removing mpu6050.o(.ARM.exidx.text.QuiteSort), (8 bytes).
    Removing mpu6050.o(.text.SortAver_FilterXYZ), (446 bytes).
    Removing mpu6050.o(.ARM.exidx.text.SortAver_FilterXYZ), (8 bytes).
    Removing mpu6050.o(.ARM.exidx.text.CanFly_Calcu_Position), (8 bytes).
    Removing mpu6050.o(.ARM.exidx.text.mpu_get_euler_angle), (8 bytes).
    Removing mpu6050.o(.ARM.exidx.text.invSqrt), (8 bytes).
    Removing mpu6050.o(.bss.SortAver_FilterXYZ.bufx), (80 bytes).
    Removing mpu6050.o(.bss.SortAver_FilterXYZ.bufy), (80 bytes).
    Removing mpu6050.o(.bss.SortAver_FilterXYZ.bufz), (80 bytes).
    Removing mpu6050.o(.bss.SortAver_FilterXYZ.cnt), (1 bytes).
    Removing mpu6050.o(.data.SortAver_FilterXYZ.flag), (1 bytes).
    Removing mpu6050.o(.bss.Acc_filt), (12 bytes).
    Removing mpu6050.o(.bss.Gyr_filt), (12 bytes).
    Removing pwm.o(.text), (0 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_Config), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.Motor_Pwm_Set), (8 bytes).
    Removing pwm.o(.text.Motor_Max_Set), (24 bytes).
    Removing pwm.o(.ARM.exidx.text.Motor_Max_Set), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Config), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing led.o(.text), (0 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Config), (8 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Reset), (8 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Write_24Bits), (8 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Show), (8 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Red), (8 bytes).
    Removing led.o(.text.WS2812B_Green), (76 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Green), (8 bytes).
    Removing led.o(.text.WS2812B_Blue), (74 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Blue), (8 bytes).
    Removing led.o(.text.WS2812B_White), (76 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_White), (8 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Dark), (8 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Yellow), (8 bytes).
    Removing led.o(.text.WS2812B_Rand), (120 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Rand), (8 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Color), (8 bytes).
    Removing led.o(.ARM.exidx.text.WS2812B_Blink), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_Config), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_Blink), (8 bytes).
    Removing led.o(.rodata.cst16), (16 bytes).
    Removing led.o(.bss.WS2812B_Blink.flag), (1 bytes).
    Removing tick.o(.text), (0 bytes).
    Removing tick.o(.ARM.exidx.text.IS_200HZ), (8 bytes).
    Removing tick.o(.text.IS_100HZ), (78 bytes).
    Removing tick.o(.ARM.exidx.text.IS_100HZ), (8 bytes).
    Removing tick.o(.ARM.exidx.text.IS_10HZ), (8 bytes).
    Removing tick.o(.ARM.exidx.text.IS_2HZ), (8 bytes).
    Removing tick.o(.text.IS_1HZ), (80 bytes).
    Removing tick.o(.ARM.exidx.text.IS_1HZ), (8 bytes).
    Removing tick.o(.bss.IS_100HZ.last_ms), (4 bytes).
    Removing tick.o(.bss.IS_1HZ.last_ms), (4 bytes).
    Removing pid.o(.text), (0 bytes).
    Removing pid.o(.ARM.exidx.text.PID_Postion_Cal), (8 bytes).
    Removing pid.o(.ARM.exidx.text.PID_Parm_Config), (8 bytes).
    Removing control.o(.text), (0 bytes).
    Removing control.o(.ARM.exidx.text.PWM_Limit), (8 bytes).
    Removing control.o(.ARM.exidx.text.CanFly_Control), (8 bytes).
    Removing control.o(.ARM.exidx.text.CanFly_PID_Call), (8 bytes).
    Removing telecom.o(.text), (0 bytes).
    Removing telecom.o(.text.RC_Send_Info), (78 bytes).
    Removing telecom.o(.ARM.exidx.text.RC_Send_Info), (8 bytes).
    Removing startup_stm32f10x_md.o(HEAP), (512 bytes).

1107 unused section(s) (total 35627 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmple.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmpge.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmpgt.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmpeq.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpge.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  ffltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/microlib/fpscalb.c              0x00000000   Number         0  dscalb.o ABSOLUTE
    ../fplib/microlib/fpsqrt.c               0x00000000   Number         0  dsqrt.o ABSOLUTE
    ../mathlib/asin.c                        0x00000000   Number         0  asin.o ABSOLUTE
    ../mathlib/atan.c                        0x00000000   Number         0  atan.o ABSOLUTE
    ../mathlib/atan2.c                       0x00000000   Number         0  atan2.o ABSOLUTE
    ../mathlib/dunder.c                      0x00000000   Number         0  dunder.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    ../mathlib/poly.c                        0x00000000   Number         0  poly.o ABSOLUTE
    ../mathlib/qnan.c                        0x00000000   Number         0  qnan.o ABSOLUTE
    ../mathlib/sqrt.c                        0x00000000   Number         0  sqrt.o ABSOLUTE
    Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/startup/arm/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    adc.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    cdcmple.s                                0x00000000   Number         0  cdcmple.o ABSOLUTE
    config.c                                 0x00000000   Number         0  config.o ABSOLUTE
    control.c                                0x00000000   Number         0  control.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    delay.c                                  0x00000000   Number         0  delay.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    iic.c                                    0x00000000   Number         0  iic.o ABSOLUTE
    includes.c                               0x00000000   Number         0  includes.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    misc.c                                   0x00000000   Number         0  misc.o ABSOLUTE
    mpu6050.c                                0x00000000   Number         0  mpu6050.o ABSOLUTE
    pid.c                                    0x00000000   Number         0  pid.o ABSOLUTE
    protocol.c                               0x00000000   Number         0  protocol.o ABSOLUTE
    pwm.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    stm32f10x_adc.c                          0x00000000   Number         0  stm32f10x_adc.o ABSOLUTE
    stm32f10x_bkp.c                          0x00000000   Number         0  stm32f10x_bkp.o ABSOLUTE
    stm32f10x_can.c                          0x00000000   Number         0  stm32f10x_can.o ABSOLUTE
    stm32f10x_cec.c                          0x00000000   Number         0  stm32f10x_cec.o ABSOLUTE
    stm32f10x_crc.c                          0x00000000   Number         0  stm32f10x_crc.o ABSOLUTE
    stm32f10x_dac.c                          0x00000000   Number         0  stm32f10x_dac.o ABSOLUTE
    stm32f10x_dbgmcu.c                       0x00000000   Number         0  stm32f10x_dbgmcu.o ABSOLUTE
    stm32f10x_dma.c                          0x00000000   Number         0  stm32f10x_dma.o ABSOLUTE
    stm32f10x_exti.c                         0x00000000   Number         0  stm32f10x_exti.o ABSOLUTE
    stm32f10x_flash.c                        0x00000000   Number         0  stm32f10x_flash.o ABSOLUTE
    stm32f10x_fsmc.c                         0x00000000   Number         0  stm32f10x_fsmc.o ABSOLUTE
    stm32f10x_gpio.c                         0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    stm32f10x_i2c.c                          0x00000000   Number         0  stm32f10x_i2c.o ABSOLUTE
    stm32f10x_it.c                           0x00000000   Number         0  stm32f10x_it.o ABSOLUTE
    stm32f10x_iwdg.c                         0x00000000   Number         0  stm32f10x_iwdg.o ABSOLUTE
    stm32f10x_pwr.c                          0x00000000   Number         0  stm32f10x_pwr.o ABSOLUTE
    stm32f10x_rcc.c                          0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    stm32f10x_rtc.c                          0x00000000   Number         0  stm32f10x_rtc.o ABSOLUTE
    stm32f10x_sdio.c                         0x00000000   Number         0  stm32f10x_sdio.o ABSOLUTE
    stm32f10x_spi.c                          0x00000000   Number         0  stm32f10x_spi.o ABSOLUTE
    stm32f10x_tim.c                          0x00000000   Number         0  stm32f10x_tim.o ABSOLUTE
    stm32f10x_usart.c                        0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    stm32f10x_wwdg.c                         0x00000000   Number         0  stm32f10x_wwdg.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    telecom.c                                0x00000000   Number         0  telecom.o ABSOLUTE
    tick.c                                   0x00000000   Number         0  tick.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000ec   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000ec   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000f0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000f4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000f4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000f4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000fc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000fc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000fc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000fc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x08000100   Section       36  startup_stm32f10x_md.o(.text)
    .text                                    0x08000124   Section        0  memseta.o(.text)
    .text                                    0x08000148   Section        0  fadd.o(.text)
    .text                                    0x080001f8   Section        0  fmul.o(.text)
    .text                                    0x0800025c   Section        0  fdiv.o(.text)
    .text                                    0x080002d8   Section        0  dadd.o(.text)
    .text                                    0x08000426   Section        0  dmul.o(.text)
    .text                                    0x0800050a   Section        0  fcmple.o(.text)
    .text                                    0x08000526   Section        0  fcmpge.o(.text)
    .text                                    0x08000542   Section        0  fcmpgt.o(.text)
    .text                                    0x0800055e   Section        0  fcmpeq.o(.text)
    .text                                    0x0800057a   Section        0  dcmpge.o(.text)
    .text                                    0x080005b0   Section        0  fflti.o(.text)
    .text                                    0x080005c2   Section        0  ffltui.o(.text)
    .text                                    0x080005cc   Section        0  ffixi.o(.text)
    .text                                    0x080005fe   Section        0  f2d.o(.text)
    .text                                    0x08000624   Section        0  d2f.o(.text)
    .text                                    0x0800065c   Section        0  llshl.o(.text)
    .text                                    0x0800067a   Section        0  llsshr.o(.text)
    .text                                    0x0800069e   Section        0  iusefp.o(.text)
    .text                                    0x0800069e   Section        0  fepilogue.o(.text)
    .text                                    0x0800070c   Section        0  depilogue.o(.text)
    .text                                    0x080007c6   Section        0  ddiv.o(.text)
    .text                                    0x080008a4   Section        0  dscalb.o(.text)
    .text                                    0x080008d4   Section       48  cdcmple.o(.text)
    .text                                    0x08000904   Section       36  init.o(.text)
    .text                                    0x08000928   Section        0  llushr.o(.text)
    .text                                    0x08000948   Section        0  dsqrt.o(.text)
    [Anonymous Symbol]                       0x080009ec   Section        0  stm32f10x_adc.o(.text.ADC_Cmd)
    [Anonymous Symbol]                       0x08000a18   Section        0  adc.o(.text.ADC_Config)
    [Anonymous Symbol]                       0x08000b24   Section        0  stm32f10x_adc.o(.text.ADC_DMACmd)
    [Anonymous Symbol]                       0x08000b50   Section        0  stm32f10x_adc.o(.text.ADC_DeInit)
    [Anonymous Symbol]                       0x08000bd0   Section        0  stm32f10x_adc.o(.text.ADC_GetCalibrationStatus)
    [Anonymous Symbol]                       0x08000c00   Section        0  stm32f10x_adc.o(.text.ADC_GetResetCalibrationStatus)
    [Anonymous Symbol]                       0x08000c30   Section        0  stm32f10x_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x08000ccc   Section        0  stm32f10x_adc.o(.text.ADC_RegularChannelConfig)
    [Anonymous Symbol]                       0x08000e48   Section        0  stm32f10x_adc.o(.text.ADC_ResetCalibration)
    [Anonymous Symbol]                       0x08000e5c   Section        0  stm32f10x_adc.o(.text.ADC_SoftwareStartConvCmd)
    [Anonymous Symbol]                       0x08000e88   Section        0  stm32f10x_adc.o(.text.ADC_StartCalibration)
    [Anonymous Symbol]                       0x08000e9c   Section        0  stm32f10x_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x08000ea0   Section        0  adc.o(.text.CanFly_Bat)
    [Anonymous Symbol]                       0x0800105c   Section        0  mpu6050.o(.text.CanFly_Calcu_Position)
    [Anonymous Symbol]                       0x080012e4   Section        0  control.o(.text.CanFly_Control)
    [Anonymous Symbol]                       0x080013b0   Section        0  protocol.o(.text.CanFly_Decode)
    [Anonymous Symbol]                       0x08001460   Section        0  control.o(.text.CanFly_PID_Call)
    [Anonymous Symbol]                       0x0800164c   Section        0  protocol.o(.text.CanFly_Upload)
    [Anonymous Symbol]                       0x0800178c   Section        0  delay.o(.text.DELAY_Config)
    [Anonymous Symbol]                       0x080017cc   Section        0  stm32f10x_dma.o(.text.DMA_Cmd)
    [Anonymous Symbol]                       0x080017fc   Section        0  stm32f10x_dma.o(.text.DMA_DeInit)
    [Anonymous Symbol]                       0x080019b4   Section        0  stm32f10x_dma.o(.text.DMA_GetCurrDataCounter)
    [Anonymous Symbol]                       0x080019c4   Section        0  stm32f10x_dma.o(.text.DMA_Init)
    [Anonymous Symbol]                       0x08001a30   Section        0  stm32f10x_dma.o(.text.DMA_SetCurrDataCounter)
    [Anonymous Symbol]                       0x08001a44   Section        0  stm32f10x_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08001a48   Section        0  stm32f10x_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x08001bd0   Section        0  stm32f10x_gpio.o(.text.GPIO_ResetBits)
    [Anonymous Symbol]                       0x08001be4   Section        0  stm32f10x_gpio.o(.text.GPIO_SetBits)
    [Anonymous Symbol]                       0x08001bf8   Section        0  stm32f10x_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08001bfc   Section        0  iic.o(.text.IIC_ACK)
    [Anonymous Symbol]                       0x08001c50   Section        0  iic.o(.text.IIC_Config)
    [Anonymous Symbol]                       0x08001cdc   Section        0  iic.o(.text.IIC_DELAY)
    [Anonymous Symbol]                       0x08001cf4   Section        0  iic.o(.text.IIC_HALF_DELAY)
    [Anonymous Symbol]                       0x08001d0c   Section        0  iic.o(.text.IIC_NACK)
    [Anonymous Symbol]                       0x08001d64   Section        0  iic.o(.text.IIC_READ)
    [Anonymous Symbol]                       0x08001e28   Section        0  iic.o(.text.IIC_READ_BYTE)
    [Anonymous Symbol]                       0x08001ebc   Section        0  iic.o(.text.IIC_RECEIVE_BYTE)
    [Anonymous Symbol]                       0x08001f6c   Section        0  iic.o(.text.IIC_SEND_BYTE)
    [Anonymous Symbol]                       0x08002020   Section        0  iic.o(.text.IIC_START)
    [Anonymous Symbol]                       0x08002084   Section        0  iic.o(.text.IIC_STOP)
    [Anonymous Symbol]                       0x080020e8   Section        0  iic.o(.text.IIC_WAIT_ACK)
    [Anonymous Symbol]                       0x08002188   Section        0  iic.o(.text.IIC_WRITE_BYTE)
    [Anonymous Symbol]                       0x08002208   Section        0  gpio.o(.text.IO_Config)
    [Anonymous Symbol]                       0x08002214   Section        0  tick.o(.text.IS_10HZ)
    [Anonymous Symbol]                       0x08002264   Section        0  tick.o(.text.IS_200HZ)
    [Anonymous Symbol]                       0x080022b4   Section        0  tick.o(.text.IS_2HZ)
    [Anonymous Symbol]                       0x08002304   Section        0  led.o(.text.LED_Blink)
    [Anonymous Symbol]                       0x08002348   Section        0  led.o(.text.LED_Config)
    [Anonymous Symbol]                       0x0800237c   Section        0  mpu6050.o(.text.MPU_Config)
    [Anonymous Symbol]                       0x08002414   Section        0  stm32f10x_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x08002418   Section        0  pwm.o(.text.Motor_Pwm_Set)
    [Anonymous Symbol]                       0x08002548   Section        0  stm32f10x_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x0800254c   Section        0  misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x080025f8   Section        0  misc.o(.text.NVIC_PriorityGroupConfig)
    [Anonymous Symbol]                       0x08002614   Section        0  pid.o(.text.PID_Parm_Config)
    [Anonymous Symbol]                       0x0800278c   Section        0  pid.o(.text.PID_Postion_Cal)
    [Anonymous Symbol]                       0x080028c4   Section        0  pwm.o(.text.PWM_Config)
    [Anonymous Symbol]                       0x080029f0   Section        0  control.o(.text.PWM_Limit)
    [Anonymous Symbol]                       0x08002a30   Section        0  stm32f10x_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08002a34   Section        0  stm32f10x_rcc.o(.text.RCC_ADCCLKConfig)
    [Anonymous Symbol]                       0x08002a60   Section        0  stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x08002a98   Section        0  stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x08002ad0   Section        0  stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd)
    [Anonymous Symbol]                       0x08002b08   Section        0  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x08002b40   Section        0  stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd)
    [Anonymous Symbol]                       0x08002b78   Section        0  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    [Anonymous Symbol]                       0x08002cec   Section        0  stm32f10x_it.o(.text.SVC_Handler)
    SetSysClock                              0x08002cf1   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08002cf0   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x08002cf9   Thumb Code   290  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x08002cf8   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x08002e1c   Section        0  misc.o(.text.SysTick_CLKSourceConfig)
    [Anonymous Symbol]                       0x08002e50   Section        0  stm32f10x_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08002e54   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08002ebc   Section        0  timer.o(.text.TIM2_IRQHandler)
    [Anonymous Symbol]                       0x08002f04   Section        0  timer.o(.text.TIMER_Config)
    [Anonymous Symbol]                       0x08002f80   Section        0  stm32f10x_tim.o(.text.TIM_ARRPreloadConfig)
    [Anonymous Symbol]                       0x08002fac   Section        0  stm32f10x_tim.o(.text.TIM_ClearITPendingBit)
    [Anonymous Symbol]                       0x08002fc4   Section        0  stm32f10x_tim.o(.text.TIM_Cmd)
    [Anonymous Symbol]                       0x08002ff0   Section        0  stm32f10x_tim.o(.text.TIM_DMACmd)
    [Anonymous Symbol]                       0x08003024   Section        0  stm32f10x_tim.o(.text.TIM_DeInit)
    [Anonymous Symbol]                       0x080032c0   Section        0  stm32f10x_tim.o(.text.TIM_GetITStatus)
    [Anonymous Symbol]                       0x0800331c   Section        0  stm32f10x_tim.o(.text.TIM_ITConfig)
    [Anonymous Symbol]                       0x08003350   Section        0  stm32f10x_tim.o(.text.TIM_OC1Init)
    [Anonymous Symbol]                       0x080034b4   Section        0  stm32f10x_tim.o(.text.TIM_OC1PreloadConfig)
    [Anonymous Symbol]                       0x080034f0   Section        0  stm32f10x_tim.o(.text.TIM_OC2Init)
    [Anonymous Symbol]                       0x08003630   Section        0  stm32f10x_tim.o(.text.TIM_OC2PreloadConfig)
    [Anonymous Symbol]                       0x08003670   Section        0  stm32f10x_tim.o(.text.TIM_OC3Init)
    [Anonymous Symbol]                       0x080037b0   Section        0  stm32f10x_tim.o(.text.TIM_OC3PreloadConfig)
    [Anonymous Symbol]                       0x080037ec   Section        0  stm32f10x_tim.o(.text.TIM_OC4Init)
    [Anonymous Symbol]                       0x080038dc   Section        0  stm32f10x_tim.o(.text.TIM_OC4PreloadConfig)
    [Anonymous Symbol]                       0x0800391c   Section        0  stm32f10x_tim.o(.text.TIM_SetCompare4)
    [Anonymous Symbol]                       0x08003934   Section        0  stm32f10x_tim.o(.text.TIM_SetCounter)
    [Anonymous Symbol]                       0x08003948   Section        0  stm32f10x_tim.o(.text.TIM_TimeBaseInit)
    [Anonymous Symbol]                       0x08003a8c   Section        0  usart.o(.text.USART1_Config)
    [Anonymous Symbol]                       0x08003b50   Section        0  usart.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08003b78   Section        0  usart.o(.text.USART2_Config)
    [Anonymous Symbol]                       0x08003cf0   Section        0  usart.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x08003d28   Section        0  stm32f10x_usart.o(.text.USART_Cmd)
    [Anonymous Symbol]                       0x08003d54   Section        0  stm32f10x_usart.o(.text.USART_DMACmd)
    [Anonymous Symbol]                       0x08003d88   Section        0  stm32f10x_usart.o(.text.USART_DeInit)
    [Anonymous Symbol]                       0x08003e58   Section        0  stm32f10x_usart.o(.text.USART_GetITStatus)
    [Anonymous Symbol]                       0x08003f08   Section        0  stm32f10x_usart.o(.text.USART_ITConfig)
    [Anonymous Symbol]                       0x08003f9c   Section        0  stm32f10x_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x080040f8   Section        0  stm32f10x_usart.o(.text.USART_ReceiveData)
    [Anonymous Symbol]                       0x08004108   Section        0  stm32f10x_it.o(.text.UsageFault_Handler)
    [Anonymous Symbol]                       0x0800410c   Section        0  led.o(.text.WS2812B_Blink)
    [Anonymous Symbol]                       0x080042c8   Section        0  led.o(.text.WS2812B_Color)
    [Anonymous Symbol]                       0x0800431c   Section        0  led.o(.text.WS2812B_Config)
    [Anonymous Symbol]                       0x08004424   Section        0  led.o(.text.WS2812B_Dark)
    [Anonymous Symbol]                       0x08004470   Section        0  led.o(.text.WS2812B_Red)
    [Anonymous Symbol]                       0x080044bc   Section        0  led.o(.text.WS2812B_Reset)
    [Anonymous Symbol]                       0x080044c8   Section        0  led.o(.text.WS2812B_Show)
    [Anonymous Symbol]                       0x0800456c   Section        0  led.o(.text.WS2812B_Write_24Bits)
    [Anonymous Symbol]                       0x08004658   Section        0  led.o(.text.WS2812B_Yellow)
    [Anonymous Symbol]                       0x080046a8   Section        0  protocol.o(.text.ano_data_check)
    [Anonymous Symbol]                       0x08004744   Section        0  protocol.o(.text.ano_data_check_fill)
    [Anonymous Symbol]                       0x080047c0   Section        0  protocol.o(.text.ano_data_decode)
    [Anonymous Symbol]                       0x08004960   Section        0  protocol.o(.text.ano_data_fill_s16bit)
    [Anonymous Symbol]                       0x08004994   Section        0  protocol.o(.text.ano_data_fill_u16bit)
    [Anonymous Symbol]                       0x080049c8   Section        0  protocol.o(.text.ano_data_fill_u8bit)
    [Anonymous Symbol]                       0x080049ec   Section        0  protocol.o(.text.ano_data_get_s16bit)
    [Anonymous Symbol]                       0x08004a2c   Section        0  protocol.o(.text.ano_data_get_u8bit)
    [Anonymous Symbol]                       0x08004a58   Section        0  protocol.o(.text.ano_data_make_bat)
    [Anonymous Symbol]                       0x08004ad0   Section        0  protocol.o(.text.ano_data_make_ctrl_euler_arc)
    [Anonymous Symbol]                       0x08004b6c   Section        0  protocol.o(.text.ano_data_make_euler_arc)
    [Anonymous Symbol]                       0x08004c40   Section        0  protocol.o(.text.ano_data_make_flymode)
    [Anonymous Symbol]                       0x08004cf0   Section        0  protocol.o(.text.ano_data_make_head)
    [Anonymous Symbol]                       0x08004d10   Section        0  protocol.o(.text.ano_data_make_isensor)
    [Anonymous Symbol]                       0x08004df8   Section        0  protocol.o(.text.ano_data_make_pwm)
    [Anonymous Symbol]                       0x08004e94   Section        0  protocol.o(.text.ano_data_make_rgb)
    [Anonymous Symbol]                       0x08004f34   Section        0  delay.o(.text.delay_ms)
    [Anonymous Symbol]                       0x08004fc4   Section        0  delay.o(.text.delay_us)
    invSqrt                                  0x08005051   Thumb Code    88  mpu6050.o(.text.invSqrt)
    [Anonymous Symbol]                       0x08005050   Section        0  mpu6050.o(.text.invSqrt)
    [Anonymous Symbol]                       0x080050a8   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x0800512c   Section        0  mpu6050.o(.text.mpu6050_offset)
    [Anonymous Symbol]                       0x08005240   Section        0  mpu6050.o(.text.mpu_get_euler_angle)
    [Anonymous Symbol]                       0x080058ec   Section        0  mpu6050.o(.text.mpu_get_sensor_data)
    [Anonymous Symbol]                       0x080059b8   Section        0  mpu6050.o(.text.mpu_read)
    [Anonymous Symbol]                       0x080059e0   Section        0  mpu6050.o(.text.mpu_read_byte)
    [Anonymous Symbol]                       0x080059f8   Section        0  mpu6050.o(.text.mpu_write_byte)
    i.__ARM_fpclassify                       0x08005a16   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__kernel_poly                          0x08005a3e   Section        0  poly.o(i.__kernel_poly)
    i.__mathlib_dbl_infnan                   0x08005ae8   Section        0  dunder.o(i.__mathlib_dbl_infnan)
    i.__mathlib_dbl_infnan2                  0x08005aee   Section        0  dunder.o(i.__mathlib_dbl_infnan2)
    i.__mathlib_dbl_invalid                  0x08005af2   Section        0  dunder.o(i.__mathlib_dbl_invalid)
    i.__mathlib_dbl_underflow                0x08005b00   Section        0  dunder.o(i.__mathlib_dbl_underflow)
    i.__scatterload_copy                     0x08005b10   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08005b1e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08005b20   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.__set_errno                            0x08005b30   Section        0  errno.o(i.__set_errno)
    i.asin                                   0x08005b3c   Section        0  asin.o(i.asin)
    i.atan                                   0x08005dac   Section        0  atan.o(i.atan)
    i.atan2                                  0x08005fcc   Section        0  atan2.o(i.atan2)
    i.sqrt                                   0x08006168   Section        0  sqrt.o(i.sqrt)
    pS                                       0x080061b8   Data          48  asin.o(.constdata)
    .constdata                               0x080061b8   Section       80  asin.o(.constdata)
    qS                                       0x080061e8   Data          32  asin.o(.constdata)
    atanhi                                   0x08006208   Data          32  atan.o(.constdata)
    .constdata                               0x08006208   Section      152  atan.o(.constdata)
    atanlo                                   0x08006228   Data          32  atan.o(.constdata)
    aTodd                                    0x08006248   Data          40  atan.o(.constdata)
    aTeven                                   0x08006270   Data          48  atan.o(.constdata)
    .constdata                               0x080062a0   Section        8  qnan.o(.constdata)
    .L__const.WS2812B_Blink.stay_color       0x080062a8   Data          64  led.o(.rodata..L__const.WS2812B_Blink.stay_color)
    ADCPrescTable                            0x080062e8   Data           4  stm32f10x_rcc.o(.rodata.ADCPrescTable)
    [Anonymous Symbol]                       0x080062e8   Section        0  stm32f10x_rcc.o(.rodata.ADCPrescTable)
    APBAHBPrescTable                         0x080062ec   Data          16  stm32f10x_rcc.o(.rodata.APBAHBPrescTable)
    [Anonymous Symbol]                       0x080062ec   Section        0  stm32f10x_rcc.o(.rodata.APBAHBPrescTable)
    _errno                                   0x20000000   Data           4  errno.o(.data)
    .data                                    0x20000000   Section        4  errno.o(.data)
    IIC_DELAY_US                             0x20000004   Data           1  iic.o(.data.IIC_DELAY_US)
    [Anonymous Symbol]                       0x20000004   Section        0  iic.o(.data.IIC_DELAY_US)
    CanFly_Bat.cnt0                          0x20000030   Data           1  adc.o(.bss.CanFly_Bat.cnt0)
    [Anonymous Symbol]                       0x20000030   Section        0  adc.o(.bss.CanFly_Bat.cnt0)
    CanFly_Bat.cnt1                          0x20000031   Data           1  adc.o(.bss.CanFly_Bat.cnt1)
    [Anonymous Symbol]                       0x20000031   Section        0  adc.o(.bss.CanFly_Bat.cnt1)
    CanFly_Bat.index                         0x20000032   Data           1  adc.o(.bss.CanFly_Bat.index)
    [Anonymous Symbol]                       0x20000032   Section        0  adc.o(.bss.CanFly_Bat.index)
    CanFly_Calcu_Position.acc_old            0x20000034   Data          12  mpu6050.o(.bss.CanFly_Calcu_Position.acc_old)
    [Anonymous Symbol]                       0x20000034   Section        0  mpu6050.o(.bss.CanFly_Calcu_Position.acc_old)
    IIC_Config.isInit                        0x20000060   Data           1  iic.o(.bss.IIC_Config.isInit)
    [Anonymous Symbol]                       0x20000060   Section        0  iic.o(.bss.IIC_Config.isInit)
    IS_10HZ.last_ms                          0x20000064   Data           4  tick.o(.bss.IS_10HZ.last_ms)
    [Anonymous Symbol]                       0x20000064   Section        0  tick.o(.bss.IS_10HZ.last_ms)
    IS_200HZ.last_ms                         0x20000068   Data           4  tick.o(.bss.IS_200HZ.last_ms)
    [Anonymous Symbol]                       0x20000068   Section        0  tick.o(.bss.IS_200HZ.last_ms)
    IS_2HZ.last_ms                           0x2000006c   Data           4  tick.o(.bss.IS_2HZ.last_ms)
    [Anonymous Symbol]                       0x2000006c   Section        0  tick.o(.bss.IS_2HZ.last_ms)
    LED_Blink.flag                           0x20000070   Data           1  led.o(.bss.LED_Blink.flag)
    [Anonymous Symbol]                       0x20000070   Section        0  led.o(.bss.LED_Blink.flag)
    WS2812B_Blink.change                     0x20000310   Data           1  led.o(.bss.WS2812B_Blink.change)
    [Anonymous Symbol]                       0x20000310   Section        0  led.o(.bss.WS2812B_Blink.change)
    fac_ms                                   0x20000b68   Data           2  delay.o(.bss.fac_ms)
    [Anonymous Symbol]                       0x20000b68   Section        0  delay.o(.bss.fac_ms)
    fac_us                                   0x20000b6a   Data           1  delay.o(.bss.fac_us)
    [Anonymous Symbol]                       0x20000b6a   Section        0  delay.o(.bss.fac_us)
    STACK                                    0x20000b78   Section    16384  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000ed   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000f1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000f5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000f5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000f5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000f5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000fd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000fd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x08000101   Thumb Code     8  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x0800011b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __aeabi_memset                           0x08000125   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x08000125   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x08000125   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x08000133   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x08000133   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x08000133   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x08000137   Thumb Code    18  memseta.o(.text)
    __aeabi_fadd                             0x08000149   Thumb Code   164  fadd.o(.text)
    __aeabi_fsub                             0x080001ed   Thumb Code     6  fadd.o(.text)
    __aeabi_frsub                            0x080001f3   Thumb Code     6  fadd.o(.text)
    __aeabi_fmul                             0x080001f9   Thumb Code   100  fmul.o(.text)
    __aeabi_fdiv                             0x0800025d   Thumb Code   124  fdiv.o(.text)
    __aeabi_dadd                             0x080002d9   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x0800041b   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x08000421   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x08000427   Thumb Code   228  dmul.o(.text)
    __aeabi_fcmple                           0x0800050b   Thumb Code    28  fcmple.o(.text)
    __aeabi_fcmpge                           0x08000527   Thumb Code    28  fcmpge.o(.text)
    __aeabi_fcmpgt                           0x08000543   Thumb Code    28  fcmpgt.o(.text)
    __aeabi_fcmpeq                           0x0800055f   Thumb Code    28  fcmpeq.o(.text)
    __aeabi_dcmpge                           0x0800057b   Thumb Code    54  dcmpge.o(.text)
    __aeabi_i2f                              0x080005b1   Thumb Code    18  fflti.o(.text)
    __aeabi_ui2f                             0x080005c3   Thumb Code    10  ffltui.o(.text)
    __aeabi_f2iz                             0x080005cd   Thumb Code    50  ffixi.o(.text)
    __aeabi_f2d                              0x080005ff   Thumb Code    38  f2d.o(.text)
    __aeabi_d2f                              0x08000625   Thumb Code    56  d2f.o(.text)
    __aeabi_llsl                             0x0800065d   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x0800065d   Thumb Code     0  llshl.o(.text)
    __aeabi_lasr                             0x0800067b   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x0800067b   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x0800069f   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x0800069f   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x080006b1   Thumb Code    92  fepilogue.o(.text)
    _double_round                            0x0800070d   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x0800072b   Thumb Code   156  depilogue.o(.text)
    __aeabi_ddiv                             0x080007c7   Thumb Code   222  ddiv.o(.text)
    __ARM_scalbn                             0x080008a5   Thumb Code    46  dscalb.o(.text)
    scalbn                                   0x080008a5   Thumb Code     0  dscalb.o(.text)
    __aeabi_cdcmpeq                          0x080008d5   Thumb Code     0  cdcmple.o(.text)
    __aeabi_cdcmple                          0x080008d5   Thumb Code    48  cdcmple.o(.text)
    __scatterload                            0x08000905   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000905   Thumb Code     0  init.o(.text)
    __aeabi_llsr                             0x08000929   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x08000929   Thumb Code     0  llushr.o(.text)
    _dsqrt                                   0x08000949   Thumb Code   162  dsqrt.o(.text)
    ADC_Cmd                                  0x080009ed   Thumb Code    44  stm32f10x_adc.o(.text.ADC_Cmd)
    ADC_Config                               0x08000a19   Thumb Code   268  adc.o(.text.ADC_Config)
    ADC_DMACmd                               0x08000b25   Thumb Code    44  stm32f10x_adc.o(.text.ADC_DMACmd)
    ADC_DeInit                               0x08000b51   Thumb Code   128  stm32f10x_adc.o(.text.ADC_DeInit)
    ADC_GetCalibrationStatus                 0x08000bd1   Thumb Code    46  stm32f10x_adc.o(.text.ADC_GetCalibrationStatus)
    ADC_GetResetCalibrationStatus            0x08000c01   Thumb Code    46  stm32f10x_adc.o(.text.ADC_GetResetCalibrationStatus)
    ADC_Init                                 0x08000c31   Thumb Code   154  stm32f10x_adc.o(.text.ADC_Init)
    ADC_RegularChannelConfig                 0x08000ccd   Thumb Code   380  stm32f10x_adc.o(.text.ADC_RegularChannelConfig)
    ADC_ResetCalibration                     0x08000e49   Thumb Code    18  stm32f10x_adc.o(.text.ADC_ResetCalibration)
    ADC_SoftwareStartConvCmd                 0x08000e5d   Thumb Code    44  stm32f10x_adc.o(.text.ADC_SoftwareStartConvCmd)
    ADC_StartCalibration                     0x08000e89   Thumb Code    18  stm32f10x_adc.o(.text.ADC_StartCalibration)
    BusFault_Handler                         0x08000e9d   Thumb Code     4  stm32f10x_it.o(.text.BusFault_Handler)
    CanFly_Bat                               0x08000ea1   Thumb Code   444  adc.o(.text.CanFly_Bat)
    CanFly_Calcu_Position                    0x0800105d   Thumb Code   648  mpu6050.o(.text.CanFly_Calcu_Position)
    CanFly_Control                           0x080012e5   Thumb Code   204  control.o(.text.CanFly_Control)
    CanFly_Decode                            0x080013b1   Thumb Code   174  protocol.o(.text.CanFly_Decode)
    CanFly_PID_Call                          0x08001461   Thumb Code   490  control.o(.text.CanFly_PID_Call)
    CanFly_Upload                            0x0800164d   Thumb Code   318  protocol.o(.text.CanFly_Upload)
    DELAY_Config                             0x0800178d   Thumb Code    64  delay.o(.text.DELAY_Config)
    DMA_Cmd                                  0x080017cd   Thumb Code    46  stm32f10x_dma.o(.text.DMA_Cmd)
    DMA_DeInit                               0x080017fd   Thumb Code   440  stm32f10x_dma.o(.text.DMA_DeInit)
    DMA_GetCurrDataCounter                   0x080019b5   Thumb Code    14  stm32f10x_dma.o(.text.DMA_GetCurrDataCounter)
    DMA_Init                                 0x080019c5   Thumb Code   108  stm32f10x_dma.o(.text.DMA_Init)
    DMA_SetCurrDataCounter                   0x08001a31   Thumb Code    20  stm32f10x_dma.o(.text.DMA_SetCurrDataCounter)
    DebugMon_Handler                         0x08001a45   Thumb Code     2  stm32f10x_it.o(.text.DebugMon_Handler)
    GPIO_Init                                0x08001a49   Thumb Code   390  stm32f10x_gpio.o(.text.GPIO_Init)
    GPIO_ResetBits                           0x08001bd1   Thumb Code    20  stm32f10x_gpio.o(.text.GPIO_ResetBits)
    GPIO_SetBits                             0x08001be5   Thumb Code    20  stm32f10x_gpio.o(.text.GPIO_SetBits)
    HardFault_Handler                        0x08001bf9   Thumb Code     4  stm32f10x_it.o(.text.HardFault_Handler)
    IIC_ACK                                  0x08001bfd   Thumb Code    84  iic.o(.text.IIC_ACK)
    IIC_Config                               0x08001c51   Thumb Code   140  iic.o(.text.IIC_Config)
    IIC_DELAY                                0x08001cdd   Thumb Code    24  iic.o(.text.IIC_DELAY)
    IIC_HALF_DELAY                           0x08001cf5   Thumb Code    24  iic.o(.text.IIC_HALF_DELAY)
    IIC_NACK                                 0x08001d0d   Thumb Code    86  iic.o(.text.IIC_NACK)
    IIC_READ                                 0x08001d65   Thumb Code   196  iic.o(.text.IIC_READ)
    IIC_READ_BYTE                            0x08001e29   Thumb Code   146  iic.o(.text.IIC_READ_BYTE)
    IIC_RECEIVE_BYTE                         0x08001ebd   Thumb Code   176  iic.o(.text.IIC_RECEIVE_BYTE)
    IIC_SEND_BYTE                            0x08001f6d   Thumb Code   178  iic.o(.text.IIC_SEND_BYTE)
    IIC_START                                0x08002021   Thumb Code    98  iic.o(.text.IIC_START)
    IIC_STOP                                 0x08002085   Thumb Code    98  iic.o(.text.IIC_STOP)
    IIC_WAIT_ACK                             0x080020e9   Thumb Code   160  iic.o(.text.IIC_WAIT_ACK)
    IIC_WRITE_BYTE                           0x08002189   Thumb Code   128  iic.o(.text.IIC_WRITE_BYTE)
    IO_Config                                0x08002209   Thumb Code    12  gpio.o(.text.IO_Config)
    IS_10HZ                                  0x08002215   Thumb Code    78  tick.o(.text.IS_10HZ)
    IS_200HZ                                 0x08002265   Thumb Code    78  tick.o(.text.IS_200HZ)
    IS_2HZ                                   0x080022b5   Thumb Code    80  tick.o(.text.IS_2HZ)
    LED_Blink                                0x08002305   Thumb Code    68  led.o(.text.LED_Blink)
    LED_Config                               0x08002349   Thumb Code    52  led.o(.text.LED_Config)
    MPU_Config                               0x0800237d   Thumb Code   150  mpu6050.o(.text.MPU_Config)
    MemManage_Handler                        0x08002415   Thumb Code     4  stm32f10x_it.o(.text.MemManage_Handler)
    Motor_Pwm_Set                            0x08002419   Thumb Code   302  pwm.o(.text.Motor_Pwm_Set)
    NMI_Handler                              0x08002549   Thumb Code     2  stm32f10x_it.o(.text.NMI_Handler)
    NVIC_Init                                0x0800254d   Thumb Code   170  misc.o(.text.NVIC_Init)
    NVIC_PriorityGroupConfig                 0x080025f9   Thumb Code    28  misc.o(.text.NVIC_PriorityGroupConfig)
    PID_Parm_Config                          0x08002615   Thumb Code   376  pid.o(.text.PID_Parm_Config)
    PID_Postion_Cal                          0x0800278d   Thumb Code   310  pid.o(.text.PID_Postion_Cal)
    PWM_Config                               0x080028c5   Thumb Code   298  pwm.o(.text.PWM_Config)
    PWM_Limit                                0x080029f1   Thumb Code    64  control.o(.text.PWM_Limit)
    PendSV_Handler                           0x08002a31   Thumb Code     2  stm32f10x_it.o(.text.PendSV_Handler)
    RCC_ADCCLKConfig                         0x08002a35   Thumb Code    44  stm32f10x_rcc.o(.text.RCC_ADCCLKConfig)
    RCC_AHBPeriphClockCmd                    0x08002a61   Thumb Code    56  stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_APB1PeriphClockCmd                   0x08002a99   Thumb Code    56  stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_APB1PeriphResetCmd                   0x08002ad1   Thumb Code    56  stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd)
    RCC_APB2PeriphClockCmd                   0x08002b09   Thumb Code    56  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x08002b41   Thumb Code    56  stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd)
    RCC_GetClocksFreq                        0x08002b79   Thumb Code   370  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    SVC_Handler                              0x08002ced   Thumb Code     2  stm32f10x_it.o(.text.SVC_Handler)
    SysTick_CLKSourceConfig                  0x08002e1d   Thumb Code    52  misc.o(.text.SysTick_CLKSourceConfig)
    SysTick_Handler                          0x08002e51   Thumb Code     2  stm32f10x_it.o(.text.SysTick_Handler)
    SystemInit                               0x08002e55   Thumb Code   102  system_stm32f10x.o(.text.SystemInit)
    TIM2_IRQHandler                          0x08002ebd   Thumb Code    70  timer.o(.text.TIM2_IRQHandler)
    TIMER_Config                             0x08002f05   Thumb Code   122  timer.o(.text.TIMER_Config)
    TIM_ARRPreloadConfig                     0x08002f81   Thumb Code    44  stm32f10x_tim.o(.text.TIM_ARRPreloadConfig)
    TIM_ClearITPendingBit                    0x08002fad   Thumb Code    22  stm32f10x_tim.o(.text.TIM_ClearITPendingBit)
    TIM_Cmd                                  0x08002fc5   Thumb Code    44  stm32f10x_tim.o(.text.TIM_Cmd)
    TIM_DMACmd                               0x08002ff1   Thumb Code    52  stm32f10x_tim.o(.text.TIM_DMACmd)
    TIM_DeInit                               0x08003025   Thumb Code   666  stm32f10x_tim.o(.text.TIM_DeInit)
    TIM_GetITStatus                          0x080032c1   Thumb Code    90  stm32f10x_tim.o(.text.TIM_GetITStatus)
    TIM_ITConfig                             0x0800331d   Thumb Code    52  stm32f10x_tim.o(.text.TIM_ITConfig)
    TIM_OC1Init                              0x08003351   Thumb Code   354  stm32f10x_tim.o(.text.TIM_OC1Init)
    TIM_OC1PreloadConfig                     0x080034b5   Thumb Code    60  stm32f10x_tim.o(.text.TIM_OC1PreloadConfig)
    TIM_OC2Init                              0x080034f1   Thumb Code   320  stm32f10x_tim.o(.text.TIM_OC2Init)
    TIM_OC2PreloadConfig                     0x08003631   Thumb Code    62  stm32f10x_tim.o(.text.TIM_OC2PreloadConfig)
    TIM_OC3Init                              0x08003671   Thumb Code   318  stm32f10x_tim.o(.text.TIM_OC3Init)
    TIM_OC3PreloadConfig                     0x080037b1   Thumb Code    60  stm32f10x_tim.o(.text.TIM_OC3PreloadConfig)
    TIM_OC4Init                              0x080037ed   Thumb Code   238  stm32f10x_tim.o(.text.TIM_OC4Init)
    TIM_OC4PreloadConfig                     0x080038dd   Thumb Code    62  stm32f10x_tim.o(.text.TIM_OC4PreloadConfig)
    TIM_SetCompare4                          0x0800391d   Thumb Code    22  stm32f10x_tim.o(.text.TIM_SetCompare4)
    TIM_SetCounter                           0x08003935   Thumb Code    20  stm32f10x_tim.o(.text.TIM_SetCounter)
    TIM_TimeBaseInit                         0x08003949   Thumb Code   322  stm32f10x_tim.o(.text.TIM_TimeBaseInit)
    USART1_Config                            0x08003a8d   Thumb Code   196  usart.o(.text.USART1_Config)
    USART1_IRQHandler                        0x08003b51   Thumb Code    40  usart.o(.text.USART1_IRQHandler)
    USART2_Config                            0x08003b79   Thumb Code   376  usart.o(.text.USART2_Config)
    USART2_IRQHandler                        0x08003cf1   Thumb Code    56  usart.o(.text.USART2_IRQHandler)
    USART_Cmd                                0x08003d29   Thumb Code    44  stm32f10x_usart.o(.text.USART_Cmd)
    USART_DMACmd                             0x08003d55   Thumb Code    52  stm32f10x_usart.o(.text.USART_DMACmd)
    USART_DeInit                             0x08003d89   Thumb Code   208  stm32f10x_usart.o(.text.USART_DeInit)
    USART_GetITStatus                        0x08003e59   Thumb Code   176  stm32f10x_usart.o(.text.USART_GetITStatus)
    USART_ITConfig                           0x08003f09   Thumb Code   146  stm32f10x_usart.o(.text.USART_ITConfig)
    USART_Init                               0x08003f9d   Thumb Code   348  stm32f10x_usart.o(.text.USART_Init)
    USART_ReceiveData                        0x080040f9   Thumb Code    16  stm32f10x_usart.o(.text.USART_ReceiveData)
    UsageFault_Handler                       0x08004109   Thumb Code     4  stm32f10x_it.o(.text.UsageFault_Handler)
    WS2812B_Blink                            0x0800410d   Thumb Code   442  led.o(.text.WS2812B_Blink)
    WS2812B_Color                            0x080042c9   Thumb Code    84  led.o(.text.WS2812B_Color)
    WS2812B_Config                           0x0800431d   Thumb Code   264  led.o(.text.WS2812B_Config)
    WS2812B_Dark                             0x08004425   Thumb Code    74  led.o(.text.WS2812B_Dark)
    WS2812B_Red                              0x08004471   Thumb Code    76  led.o(.text.WS2812B_Red)
    WS2812B_Reset                            0x080044bd   Thumb Code    10  led.o(.text.WS2812B_Reset)
    WS2812B_Show                             0x080044c9   Thumb Code   162  led.o(.text.WS2812B_Show)
    WS2812B_Write_24Bits                     0x0800456d   Thumb Code   234  led.o(.text.WS2812B_Write_24Bits)
    WS2812B_Yellow                           0x08004659   Thumb Code    80  led.o(.text.WS2812B_Yellow)
    ano_data_check                           0x080046a9   Thumb Code   154  protocol.o(.text.ano_data_check)
    ano_data_check_fill                      0x08004745   Thumb Code   122  protocol.o(.text.ano_data_check_fill)
    ano_data_decode                          0x080047c1   Thumb Code   416  protocol.o(.text.ano_data_decode)
    ano_data_fill_s16bit                     0x08004961   Thumb Code    50  protocol.o(.text.ano_data_fill_s16bit)
    ano_data_fill_u16bit                     0x08004995   Thumb Code    50  protocol.o(.text.ano_data_fill_u16bit)
    ano_data_fill_u8bit                      0x080049c9   Thumb Code    36  protocol.o(.text.ano_data_fill_u8bit)
    ano_data_get_s16bit                      0x080049ed   Thumb Code    64  protocol.o(.text.ano_data_get_s16bit)
    ano_data_get_u8bit                       0x08004a2d   Thumb Code    44  protocol.o(.text.ano_data_get_u8bit)
    ano_data_make_bat                        0x08004a59   Thumb Code   118  protocol.o(.text.ano_data_make_bat)
    ano_data_make_ctrl_euler_arc             0x08004ad1   Thumb Code   156  protocol.o(.text.ano_data_make_ctrl_euler_arc)
    ano_data_make_euler_arc                  0x08004b6d   Thumb Code   212  protocol.o(.text.ano_data_make_euler_arc)
    ano_data_make_flymode                    0x08004c41   Thumb Code   176  protocol.o(.text.ano_data_make_flymode)
    ano_data_make_head                       0x08004cf1   Thumb Code    32  protocol.o(.text.ano_data_make_head)
    ano_data_make_isensor                    0x08004d11   Thumb Code   230  protocol.o(.text.ano_data_make_isensor)
    ano_data_make_pwm                        0x08004df9   Thumb Code   156  protocol.o(.text.ano_data_make_pwm)
    ano_data_make_rgb                        0x08004e95   Thumb Code   158  protocol.o(.text.ano_data_make_rgb)
    delay_ms                                 0x08004f35   Thumb Code   144  delay.o(.text.delay_ms)
    delay_us                                 0x08004fc5   Thumb Code   140  delay.o(.text.delay_us)
    main                                     0x080050a9   Thumb Code   132  main.o(.text.main)
    mpu6050_offset                           0x0800512d   Thumb Code   276  mpu6050.o(.text.mpu6050_offset)
    mpu_get_euler_angle                      0x08005241   Thumb Code  1708  mpu6050.o(.text.mpu_get_euler_angle)
    mpu_get_sensor_data                      0x080058ed   Thumb Code   202  mpu6050.o(.text.mpu_get_sensor_data)
    mpu_read                                 0x080059b9   Thumb Code    38  mpu6050.o(.text.mpu_read)
    mpu_read_byte                            0x080059e1   Thumb Code    22  mpu6050.o(.text.mpu_read_byte)
    mpu_write_byte                           0x080059f9   Thumb Code    30  mpu6050.o(.text.mpu_write_byte)
    __ARM_fpclassify                         0x08005a17   Thumb Code    40  fpclassify.o(i.__ARM_fpclassify)
    __kernel_poly                            0x08005a3f   Thumb Code   170  poly.o(i.__kernel_poly)
    __mathlib_dbl_infnan                     0x08005ae9   Thumb Code     6  dunder.o(i.__mathlib_dbl_infnan)
    __mathlib_dbl_infnan2                    0x08005aef   Thumb Code     4  dunder.o(i.__mathlib_dbl_infnan2)
    __mathlib_dbl_invalid                    0x08005af3   Thumb Code    12  dunder.o(i.__mathlib_dbl_invalid)
    __mathlib_dbl_underflow                  0x08005b01   Thumb Code    10  dunder.o(i.__mathlib_dbl_underflow)
    __scatterload_copy                       0x08005b11   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08005b1f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08005b21   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    __set_errno                              0x08005b31   Thumb Code     6  errno.o(i.__set_errno)
    asin                                     0x08005b3d   Thumb Code   572  asin.o(i.asin)
    atan                                     0x08005dad   Thumb Code   474  atan.o(i.atan)
    atan2                                    0x08005fcd   Thumb Code   374  atan2.o(i.atan2)
    sqrt                                     0x08006169   Thumb Code    76  sqrt.o(i.sqrt)
    __mathlib_zero                           0x080062a0   Data           8  qnan.o(.constdata)
    Region$$Table$$Base                      0x080062fc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800631c   Number         0  anon$$obj.o(Region$$Table)
    PWM_MAX                                  0x20000006   Data           2  pwm.o(.data.PWM_MAX)
    SystemCoreClock                          0x20000008   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    q0                                       0x2000000c   Data           4  mpu6050.o(.data.q0)
    ACC_OFFSET_RAW                           0x20000010   Data           6  mpu6050.o(.bss.ACC_OFFSET_RAW)
    ADC_Value                                0x20000016   Data           2  adc.o(.bss.ADC_Value)
    Acc_M                                    0x20000018   Data          12  mpu6050.o(.bss.Acc_M)
    Angle                                    0x20000024   Data          12  mpu6050.o(.bss.Angle)
    GYRO_OFFSET_RAW                          0x20000040   Data           6  mpu6050.o(.bss.GYRO_OFFSET_RAW)
    Gyr_D                                    0x20000048   Data          12  mpu6050.o(.bss.Gyr_D)
    Gyr_R                                    0x20000054   Data          12  mpu6050.o(.bss.Gyr_R)
    LED_Buffer                               0x20000072   Data         194  led.o(.bss.LED_Buffer)
    MPU6050_ACC_RAW                          0x20000134   Data           6  mpu6050.o(.bss.MPU6050_ACC_RAW)
    MPU6050_Buffer                           0x2000013a   Data          14  mpu6050.o(.bss.MPU6050_Buffer)
    MPU6050_GYRO_RAW                         0x20000148   Data           6  mpu6050.o(.bss.MPU6050_GYRO_RAW)
    PID_ALT                                  0x20000150   Data          56  pid.o(.bss.PID_ALT)
    PID_ALT_Rate                             0x20000188   Data          56  pid.o(.bss.PID_ALT_Rate)
    PID_PIT_Angle                            0x200001c0   Data          56  pid.o(.bss.PID_PIT_Angle)
    PID_PIT_Rate                             0x200001f8   Data          56  pid.o(.bss.PID_PIT_Rate)
    PID_ROL_Angle                            0x20000230   Data          56  pid.o(.bss.PID_ROL_Angle)
    PID_ROL_Rate                             0x20000268   Data          56  pid.o(.bss.PID_ROL_Rate)
    PID_YAW_Angle                            0x200002a0   Data          56  pid.o(.bss.PID_YAW_Angle)
    PID_YAW_Rate                             0x200002d8   Data          56  pid.o(.bss.PID_YAW_Rate)
    adc_temp                                 0x20000312   Data          12  adc.o(.bss.adc_temp)
    canfly                                   0x20000320   Data        2108  main.o(.bss.canfly)
    exInt                                    0x20000b5c   Data           4  mpu6050.o(.bss.exInt)
    eyInt                                    0x20000b60   Data           4  mpu6050.o(.bss.eyInt)
    ezInt                                    0x20000b64   Data           4  mpu6050.o(.bss.ezInt)
    q1                                       0x20000b6c   Data           4  mpu6050.o(.bss.q1)
    q2                                       0x20000b70   Data           4  mpu6050.o(.bss.q2)
    q3                                       0x20000b74   Data           4  mpu6050.o(.bss.q3)
    __initial_sp                             0x20004b78   Data           0  startup_stm32f10x_md.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00006330, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000631c, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO         1531    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000000   Code   RO         1547  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x080000ec   0x080000ec   0x00000004   Code   RO         1613    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x080000f0   0x080000f0   0x00000004   Code   RO         1616    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x080000f4   0x080000f4   0x00000000   Code   RO         1618    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x080000f4   0x080000f4   0x00000000   Code   RO         1620    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x080000f4   0x080000f4   0x00000008   Code   RO         1621    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x080000fc   0x080000fc   0x00000000   Code   RO         1623    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x080000fc   0x080000fc   0x00000000   Code   RO         1625    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x080000fc   0x080000fc   0x00000004   Code   RO         1614    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x08000100   0x08000100   0x00000024   Code   RO         1532    .text               startup_stm32f10x_md.o
    0x08000124   0x08000124   0x00000024   Code   RO         1553    .text               mc_w.l(memseta.o)
    0x08000148   0x08000148   0x000000b0   Code   RO         1555    .text               mf_w.l(fadd.o)
    0x080001f8   0x080001f8   0x00000064   Code   RO         1557    .text               mf_w.l(fmul.o)
    0x0800025c   0x0800025c   0x0000007c   Code   RO         1559    .text               mf_w.l(fdiv.o)
    0x080002d8   0x080002d8   0x0000014e   Code   RO         1561    .text               mf_w.l(dadd.o)
    0x08000426   0x08000426   0x000000e4   Code   RO         1563    .text               mf_w.l(dmul.o)
    0x0800050a   0x0800050a   0x0000001c   Code   RO         1565    .text               mf_w.l(fcmple.o)
    0x08000526   0x08000526   0x0000001c   Code   RO         1567    .text               mf_w.l(fcmpge.o)
    0x08000542   0x08000542   0x0000001c   Code   RO         1569    .text               mf_w.l(fcmpgt.o)
    0x0800055e   0x0800055e   0x0000001c   Code   RO         1571    .text               mf_w.l(fcmpeq.o)
    0x0800057a   0x0800057a   0x00000036   Code   RO         1573    .text               mf_w.l(dcmpge.o)
    0x080005b0   0x080005b0   0x00000012   Code   RO         1575    .text               mf_w.l(fflti.o)
    0x080005c2   0x080005c2   0x0000000a   Code   RO         1577    .text               mf_w.l(ffltui.o)
    0x080005cc   0x080005cc   0x00000032   Code   RO         1579    .text               mf_w.l(ffixi.o)
    0x080005fe   0x080005fe   0x00000026   Code   RO         1581    .text               mf_w.l(f2d.o)
    0x08000624   0x08000624   0x00000038   Code   RO         1583    .text               mf_w.l(d2f.o)
    0x0800065c   0x0800065c   0x0000001e   Code   RO         1627    .text               mc_w.l(llshl.o)
    0x0800067a   0x0800067a   0x00000024   Code   RO         1629    .text               mc_w.l(llsshr.o)
    0x0800069e   0x0800069e   0x00000000   Code   RO         1638    .text               mc_w.l(iusefp.o)
    0x0800069e   0x0800069e   0x0000006e   Code   RO         1639    .text               mf_w.l(fepilogue.o)
    0x0800070c   0x0800070c   0x000000ba   Code   RO         1641    .text               mf_w.l(depilogue.o)
    0x080007c6   0x080007c6   0x000000de   Code   RO         1643    .text               mf_w.l(ddiv.o)
    0x080008a4   0x080008a4   0x0000002e   Code   RO         1645    .text               mf_w.l(dscalb.o)
    0x080008d2   0x080008d2   0x00000002   PAD
    0x080008d4   0x080008d4   0x00000030   Code   RO         1647    .text               mf_w.l(cdcmple.o)
    0x08000904   0x08000904   0x00000024   Code   RO         1649    .text               mc_w.l(init.o)
    0x08000928   0x08000928   0x00000020   Code   RO         1651    .text               mc_w.l(llushr.o)
    0x08000948   0x08000948   0x000000a2   Code   RO         1653    .text               mf_w.l(dsqrt.o)
    0x080009ea   0x080009ea   0x00000002   PAD
    0x080009ec   0x080009ec   0x0000002c   Code   RO           25    .text.ADC_Cmd       stm32f10x_adc.o
    0x08000a18   0x08000a18   0x0000010c   Code   RO         1317    .text.ADC_Config    adc.o
    0x08000b24   0x08000b24   0x0000002c   Code   RO           27    .text.ADC_DMACmd    stm32f10x_adc.o
    0x08000b50   0x08000b50   0x00000080   Code   RO           19    .text.ADC_DeInit    stm32f10x_adc.o
    0x08000bd0   0x08000bd0   0x0000002e   Code   RO           37    .text.ADC_GetCalibrationStatus  stm32f10x_adc.o
    0x08000bfe   0x08000bfe   0x00000002   PAD
    0x08000c00   0x08000c00   0x0000002e   Code   RO           33    .text.ADC_GetResetCalibrationStatus  stm32f10x_adc.o
    0x08000c2e   0x08000c2e   0x00000002   PAD
    0x08000c30   0x08000c30   0x0000009a   Code   RO           21    .text.ADC_Init      stm32f10x_adc.o
    0x08000cca   0x08000cca   0x00000002   PAD
    0x08000ccc   0x08000ccc   0x0000017c   Code   RO           47    .text.ADC_RegularChannelConfig  stm32f10x_adc.o
    0x08000e48   0x08000e48   0x00000012   Code   RO           31    .text.ADC_ResetCalibration  stm32f10x_adc.o
    0x08000e5a   0x08000e5a   0x00000002   PAD
    0x08000e5c   0x08000e5c   0x0000002c   Code   RO           39    .text.ADC_SoftwareStartConvCmd  stm32f10x_adc.o
    0x08000e88   0x08000e88   0x00000012   Code   RO           35    .text.ADC_StartCalibration  stm32f10x_adc.o
    0x08000e9a   0x08000e9a   0x00000002   PAD
    0x08000e9c   0x08000e9c   0x00000004   Code   RO         1129    .text.BusFault_Handler  stm32f10x_it.o
    0x08000ea0   0x08000ea0   0x000001bc   Code   RO         1323    .text.CanFly_Bat    adc.o
    0x0800105c   0x0800105c   0x00000288   Code   RO         1363    .text.CanFly_Calcu_Position  mpu6050.o
    0x080012e4   0x080012e4   0x000000cc   Code   RO         1511    .text.CanFly_Control  control.o
    0x080013b0   0x080013b0   0x000000ae   Code   RO         1274    .text.CanFly_Decode  protocol.o
    0x0800145e   0x0800145e   0x00000002   PAD
    0x08001460   0x08001460   0x000001ea   Code   RO         1513    .text.CanFly_PID_Call  control.o
    0x0800164a   0x0800164a   0x00000002   PAD
    0x0800164c   0x0800164c   0x0000013e   Code   RO         1272    .text.CanFly_Upload  protocol.o
    0x0800178a   0x0800178a   0x00000002   PAD
    0x0800178c   0x0800178c   0x00000040   Code   RO         1165    .text.DELAY_Config  delay.o
    0x080017cc   0x080017cc   0x0000002e   Code   RO          290    .text.DMA_Cmd       stm32f10x_dma.o
    0x080017fa   0x080017fa   0x00000002   PAD
    0x080017fc   0x080017fc   0x000001b8   Code   RO          284    .text.DMA_DeInit    stm32f10x_dma.o
    0x080019b4   0x080019b4   0x0000000e   Code   RO          296    .text.DMA_GetCurrDataCounter  stm32f10x_dma.o
    0x080019c2   0x080019c2   0x00000002   PAD
    0x080019c4   0x080019c4   0x0000006c   Code   RO          286    .text.DMA_Init      stm32f10x_dma.o
    0x08001a30   0x08001a30   0x00000014   Code   RO          294    .text.DMA_SetCurrDataCounter  stm32f10x_dma.o
    0x08001a44   0x08001a44   0x00000002   Code   RO         1135    .text.DebugMon_Handler  stm32f10x_it.o
    0x08001a46   0x08001a46   0x00000002   PAD
    0x08001a48   0x08001a48   0x00000186   Code   RO          448    .text.GPIO_Init     stm32f10x_gpio.o
    0x08001bce   0x08001bce   0x00000002   PAD
    0x08001bd0   0x08001bd0   0x00000014   Code   RO          462    .text.GPIO_ResetBits  stm32f10x_gpio.o
    0x08001be4   0x08001be4   0x00000014   Code   RO          460    .text.GPIO_SetBits  stm32f10x_gpio.o
    0x08001bf8   0x08001bf8   0x00000004   Code   RO         1125    .text.HardFault_Handler  stm32f10x_it.o
    0x08001bfc   0x08001bfc   0x00000054   Code   RO         1192    .text.IIC_ACK       iic.o
    0x08001c50   0x08001c50   0x0000008c   Code   RO         1180    .text.IIC_Config    iic.o
    0x08001cdc   0x08001cdc   0x00000018   Code   RO         1182    .text.IIC_DELAY     iic.o
    0x08001cf4   0x08001cf4   0x00000018   Code   RO         1184    .text.IIC_HALF_DELAY  iic.o
    0x08001d0c   0x08001d0c   0x00000056   Code   RO         1194    .text.IIC_NACK      iic.o
    0x08001d62   0x08001d62   0x00000002   PAD
    0x08001d64   0x08001d64   0x000000c4   Code   RO         1206    .text.IIC_READ      iic.o
    0x08001e28   0x08001e28   0x00000092   Code   RO         1202    .text.IIC_READ_BYTE  iic.o
    0x08001eba   0x08001eba   0x00000002   PAD
    0x08001ebc   0x08001ebc   0x000000b0   Code   RO         1200    .text.IIC_RECEIVE_BYTE  iic.o
    0x08001f6c   0x08001f6c   0x000000b2   Code   RO         1198    .text.IIC_SEND_BYTE  iic.o
    0x0800201e   0x0800201e   0x00000002   PAD
    0x08002020   0x08002020   0x00000062   Code   RO         1188    .text.IIC_START     iic.o
    0x08002082   0x08002082   0x00000002   PAD
    0x08002084   0x08002084   0x00000062   Code   RO         1190    .text.IIC_STOP      iic.o
    0x080020e6   0x080020e6   0x00000002   PAD
    0x080020e8   0x080020e8   0x000000a0   Code   RO         1196    .text.IIC_WAIT_ACK  iic.o
    0x08002188   0x08002188   0x00000080   Code   RO         1204    .text.IIC_WRITE_BYTE  iic.o
    0x08002208   0x08002208   0x0000000c   Code   RO         1283    .text.IO_Config     gpio.o
    0x08002214   0x08002214   0x0000004e   Code   RO         1472    .text.IS_10HZ       tick.o
    0x08002262   0x08002262   0x00000002   PAD
    0x08002264   0x08002264   0x0000004e   Code   RO         1468    .text.IS_200HZ      tick.o
    0x080022b2   0x080022b2   0x00000002   PAD
    0x080022b4   0x080022b4   0x00000050   Code   RO         1474    .text.IS_2HZ        tick.o
    0x08002304   0x08002304   0x00000044   Code   RO         1453    .text.LED_Blink     led.o
    0x08002348   0x08002348   0x00000034   Code   RO         1451    .text.LED_Config    led.o
    0x0800237c   0x0800237c   0x00000096   Code   RO         1337    .text.MPU_Config    mpu6050.o
    0x08002412   0x08002412   0x00000002   PAD
    0x08002414   0x08002414   0x00000004   Code   RO         1127    .text.MemManage_Handler  stm32f10x_it.o
    0x08002418   0x08002418   0x0000012e   Code   RO         1402    .text.Motor_Pwm_Set  pwm.o
    0x08002546   0x08002546   0x00000002   PAD
    0x08002548   0x08002548   0x00000002   Code   RO         1123    .text.NMI_Handler   stm32f10x_it.o
    0x0800254a   0x0800254a   0x00000002   PAD
    0x0800254c   0x0800254c   0x000000aa   Code   RO            4    .text.NVIC_Init     misc.o
    0x080025f6   0x080025f6   0x00000002   PAD
    0x080025f8   0x080025f8   0x0000001c   Code   RO            2    .text.NVIC_PriorityGroupConfig  misc.o
    0x08002614   0x08002614   0x00000178   Code   RO         1492    .text.PID_Parm_Config  pid.o
    0x0800278c   0x0800278c   0x00000136   Code   RO         1490    .text.PID_Postion_Cal  pid.o
    0x080028c2   0x080028c2   0x00000002   PAD
    0x080028c4   0x080028c4   0x0000012a   Code   RO         1400    .text.PWM_Config    pwm.o
    0x080029ee   0x080029ee   0x00000002   PAD
    0x080029f0   0x080029f0   0x00000040   Code   RO         1509    .text.PWM_Limit     control.o
    0x08002a30   0x08002a30   0x00000002   Code   RO         1137    .text.PendSV_Handler  stm32f10x_it.o
    0x08002a32   0x08002a32   0x00000002   PAD
    0x08002a34   0x08002a34   0x0000002c   Code   RO          638    .text.RCC_ADCCLKConfig  stm32f10x_rcc.o
    0x08002a60   0x08002a60   0x00000038   Code   RO          650    .text.RCC_AHBPeriphClockCmd  stm32f10x_rcc.o
    0x08002a98   0x08002a98   0x00000038   Code   RO          654    .text.RCC_APB1PeriphClockCmd  stm32f10x_rcc.o
    0x08002ad0   0x08002ad0   0x00000038   Code   RO          658    .text.RCC_APB1PeriphResetCmd  stm32f10x_rcc.o
    0x08002b08   0x08002b08   0x00000038   Code   RO          652    .text.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x08002b40   0x08002b40   0x00000038   Code   RO          656    .text.RCC_APB2PeriphResetCmd  stm32f10x_rcc.o
    0x08002b78   0x08002b78   0x00000172   Code   RO          648    .text.RCC_GetClocksFreq  stm32f10x_rcc.o
    0x08002cea   0x08002cea   0x00000002   PAD
    0x08002cec   0x08002cec   0x00000002   Code   RO         1133    .text.SVC_Handler   stm32f10x_it.o
    0x08002cee   0x08002cee   0x00000002   PAD
    0x08002cf0   0x08002cf0   0x00000008   Code   RO         1150    .text.SetSysClock   system_stm32f10x.o
    0x08002cf8   0x08002cf8   0x00000122   Code   RO         1154    .text.SetSysClockTo72  system_stm32f10x.o
    0x08002e1a   0x08002e1a   0x00000002   PAD
    0x08002e1c   0x08002e1c   0x00000034   Code   RO           10    .text.SysTick_CLKSourceConfig  misc.o
    0x08002e50   0x08002e50   0x00000002   Code   RO         1139    .text.SysTick_Handler  stm32f10x_it.o
    0x08002e52   0x08002e52   0x00000002   PAD
    0x08002e54   0x08002e54   0x00000066   Code   RO         1148    .text.SystemInit    system_stm32f10x.o
    0x08002eba   0x08002eba   0x00000002   PAD
    0x08002ebc   0x08002ebc   0x00000046   Code   RO         1416    .text.TIM2_IRQHandler  timer.o
    0x08002f02   0x08002f02   0x00000002   PAD
    0x08002f04   0x08002f04   0x0000007a   Code   RO         1414    .text.TIMER_Config  timer.o
    0x08002f7e   0x08002f7e   0x00000002   PAD
    0x08002f80   0x08002f80   0x0000002c   Code   RO          918    .text.TIM_ARRPreloadConfig  stm32f10x_tim.o
    0x08002fac   0x08002fac   0x00000016   Code   RO         1016    .text.TIM_ClearITPendingBit  stm32f10x_tim.o
    0x08002fc2   0x08002fc2   0x00000002   PAD
    0x08002fc4   0x08002fc4   0x0000002c   Code   RO          878    .text.TIM_Cmd       stm32f10x_tim.o
    0x08002ff0   0x08002ff0   0x00000034   Code   RO          888    .text.TIM_DMACmd    stm32f10x_tim.o
    0x08003024   0x08003024   0x0000029a   Code   RO          836    .text.TIM_DeInit    stm32f10x_tim.o
    0x080032be   0x080032be   0x00000002   PAD
    0x080032c0   0x080032c0   0x0000005a   Code   RO         1014    .text.TIM_GetITStatus  stm32f10x_tim.o
    0x0800331a   0x0800331a   0x00000002   PAD
    0x0800331c   0x0800331c   0x00000034   Code   RO          882    .text.TIM_ITConfig  stm32f10x_tim.o
    0x08003350   0x08003350   0x00000162   Code   RO          840    .text.TIM_OC1Init   stm32f10x_tim.o
    0x080034b2   0x080034b2   0x00000002   PAD
    0x080034b4   0x080034b4   0x0000003c   Code   RO          926    .text.TIM_OC1PreloadConfig  stm32f10x_tim.o
    0x080034f0   0x080034f0   0x00000140   Code   RO          842    .text.TIM_OC2Init   stm32f10x_tim.o
    0x08003630   0x08003630   0x0000003e   Code   RO          928    .text.TIM_OC2PreloadConfig  stm32f10x_tim.o
    0x0800366e   0x0800366e   0x00000002   PAD
    0x08003670   0x08003670   0x0000013e   Code   RO          844    .text.TIM_OC3Init   stm32f10x_tim.o
    0x080037ae   0x080037ae   0x00000002   PAD
    0x080037b0   0x080037b0   0x0000003c   Code   RO          930    .text.TIM_OC3PreloadConfig  stm32f10x_tim.o
    0x080037ec   0x080037ec   0x000000ee   Code   RO          846    .text.TIM_OC4Init   stm32f10x_tim.o
    0x080038da   0x080038da   0x00000002   PAD
    0x080038dc   0x080038dc   0x0000003e   Code   RO          932    .text.TIM_OC4PreloadConfig  stm32f10x_tim.o
    0x0800391a   0x0800391a   0x00000002   PAD
    0x0800391c   0x0800391c   0x00000016   Code   RO          994    .text.TIM_SetCompare4  stm32f10x_tim.o
    0x08003932   0x08003932   0x00000002   PAD
    0x08003934   0x08003934   0x00000014   Code   RO          984    .text.TIM_SetCounter  stm32f10x_tim.o
    0x08003948   0x08003948   0x00000142   Code   RO          838    .text.TIM_TimeBaseInit  stm32f10x_tim.o
    0x08003a8a   0x08003a8a   0x00000002   PAD
    0x08003a8c   0x08003a8c   0x000000c4   Code   RO         1294    .text.USART1_Config  usart.o
    0x08003b50   0x08003b50   0x00000028   Code   RO         1298    .text.USART1_IRQHandler  usart.o
    0x08003b78   0x08003b78   0x00000178   Code   RO         1296    .text.USART2_Config  usart.o
    0x08003cf0   0x08003cf0   0x00000038   Code   RO         1300    .text.USART2_IRQHandler  usart.o
    0x08003d28   0x08003d28   0x0000002c   Code   RO         1035    .text.USART_Cmd     stm32f10x_usart.o
    0x08003d54   0x08003d54   0x00000034   Code   RO         1039    .text.USART_DMACmd  stm32f10x_usart.o
    0x08003d88   0x08003d88   0x000000d0   Code   RO         1025    .text.USART_DeInit  stm32f10x_usart.o
    0x08003e58   0x08003e58   0x000000b0   Code   RO         1079    .text.USART_GetITStatus  stm32f10x_usart.o
    0x08003f08   0x08003f08   0x00000092   Code   RO         1037    .text.USART_ITConfig  stm32f10x_usart.o
    0x08003f9a   0x08003f9a   0x00000002   PAD
    0x08003f9c   0x08003f9c   0x0000015c   Code   RO         1027    .text.USART_Init    stm32f10x_usart.o
    0x080040f8   0x080040f8   0x00000010   Code   RO         1053    .text.USART_ReceiveData  stm32f10x_usart.o
    0x08004108   0x08004108   0x00000004   Code   RO         1131    .text.UsageFault_Handler  stm32f10x_it.o
    0x0800410c   0x0800410c   0x000001ba   Code   RO         1449    .text.WS2812B_Blink  led.o
    0x080042c6   0x080042c6   0x00000002   PAD
    0x080042c8   0x080042c8   0x00000054   Code   RO         1447    .text.WS2812B_Color  led.o
    0x0800431c   0x0800431c   0x00000108   Code   RO         1425    .text.WS2812B_Config  led.o
    0x08004424   0x08004424   0x0000004a   Code   RO         1441    .text.WS2812B_Dark  led.o
    0x0800446e   0x0800446e   0x00000002   PAD
    0x08004470   0x08004470   0x0000004c   Code   RO         1433    .text.WS2812B_Red   led.o
    0x080044bc   0x080044bc   0x0000000a   Code   RO         1427    .text.WS2812B_Reset  led.o
    0x080044c6   0x080044c6   0x00000002   PAD
    0x080044c8   0x080044c8   0x000000a2   Code   RO         1431    .text.WS2812B_Show  led.o
    0x0800456a   0x0800456a   0x00000002   PAD
    0x0800456c   0x0800456c   0x000000ea   Code   RO         1429    .text.WS2812B_Write_24Bits  led.o
    0x08004656   0x08004656   0x00000002   PAD
    0x08004658   0x08004658   0x00000050   Code   RO         1443    .text.WS2812B_Yellow  led.o
    0x080046a8   0x080046a8   0x0000009a   Code   RO         1222    .text.ano_data_check  protocol.o
    0x08004742   0x08004742   0x00000002   PAD
    0x08004744   0x08004744   0x0000007a   Code   RO         1224    .text.ano_data_check_fill  protocol.o
    0x080047be   0x080047be   0x00000002   PAD
    0x080047c0   0x080047c0   0x000001a0   Code   RO         1270    .text.ano_data_decode  protocol.o
    0x08004960   0x08004960   0x00000032   Code   RO         1234    .text.ano_data_fill_s16bit  protocol.o
    0x08004992   0x08004992   0x00000002   PAD
    0x08004994   0x08004994   0x00000032   Code   RO         1228    .text.ano_data_fill_u16bit  protocol.o
    0x080049c6   0x080049c6   0x00000002   PAD
    0x080049c8   0x080049c8   0x00000024   Code   RO         1226    .text.ano_data_fill_u8bit  protocol.o
    0x080049ec   0x080049ec   0x00000040   Code   RO         1246    .text.ano_data_get_s16bit  protocol.o
    0x08004a2c   0x08004a2c   0x0000002c   Code   RO         1238    .text.ano_data_get_u8bit  protocol.o
    0x08004a58   0x08004a58   0x00000076   Code   RO         1266    .text.ano_data_make_bat  protocol.o
    0x08004ace   0x08004ace   0x00000002   PAD
    0x08004ad0   0x08004ad0   0x0000009c   Code   RO         1256    .text.ano_data_make_ctrl_euler_arc  protocol.o
    0x08004b6c   0x08004b6c   0x000000d4   Code   RO         1252    .text.ano_data_make_euler_arc  protocol.o
    0x08004c40   0x08004c40   0x000000b0   Code   RO         1264    .text.ano_data_make_flymode  protocol.o
    0x08004cf0   0x08004cf0   0x00000020   Code   RO         1220    .text.ano_data_make_head  protocol.o
    0x08004d10   0x08004d10   0x000000e6   Code   RO         1250    .text.ano_data_make_isensor  protocol.o
    0x08004df6   0x08004df6   0x00000002   PAD
    0x08004df8   0x08004df8   0x0000009c   Code   RO         1260    .text.ano_data_make_pwm  protocol.o
    0x08004e94   0x08004e94   0x0000009e   Code   RO         1258    .text.ano_data_make_rgb  protocol.o
    0x08004f32   0x08004f32   0x00000002   PAD
    0x08004f34   0x08004f34   0x00000090   Code   RO         1169    .text.delay_ms      delay.o
    0x08004fc4   0x08004fc4   0x0000008c   Code   RO         1167    .text.delay_us      delay.o
    0x08005050   0x08005050   0x00000058   Code   RO         1367    .text.invSqrt       mpu6050.o
    0x080050a8   0x080050a8   0x00000084   Code   RO         1113    .text.main          main.o
    0x0800512c   0x0800512c   0x00000114   Code   RO         1343    .text.mpu6050_offset  mpu6050.o
    0x08005240   0x08005240   0x000006ac   Code   RO         1365    .text.mpu_get_euler_angle  mpu6050.o
    0x080058ec   0x080058ec   0x000000ca   Code   RO         1345    .text.mpu_get_sensor_data  mpu6050.o
    0x080059b6   0x080059b6   0x00000002   PAD
    0x080059b8   0x080059b8   0x00000026   Code   RO         1349    .text.mpu_read      mpu6050.o
    0x080059de   0x080059de   0x00000002   PAD
    0x080059e0   0x080059e0   0x00000016   Code   RO         1339    .text.mpu_read_byte  mpu6050.o
    0x080059f6   0x080059f6   0x00000002   PAD
    0x080059f8   0x080059f8   0x0000001e   Code   RO         1341    .text.mpu_write_byte  mpu6050.o
    0x08005a16   0x08005a16   0x00000028   Code   RO         1604    i.__ARM_fpclassify  m_ws.l(fpclassify.o)
    0x08005a3e   0x08005a3e   0x000000aa   Code   RO         1606    i.__kernel_poly     m_ws.l(poly.o)
    0x08005ae8   0x08005ae8   0x00000006   Code   RO         1591    i.__mathlib_dbl_infnan  m_ws.l(dunder.o)
    0x08005aee   0x08005aee   0x00000004   Code   RO         1592    i.__mathlib_dbl_infnan2  m_ws.l(dunder.o)
    0x08005af2   0x08005af2   0x0000000c   Code   RO         1593    i.__mathlib_dbl_invalid  m_ws.l(dunder.o)
    0x08005afe   0x08005afe   0x00000002   PAD
    0x08005b00   0x08005b00   0x00000010   Code   RO         1596    i.__mathlib_dbl_underflow  m_ws.l(dunder.o)
    0x08005b10   0x08005b10   0x0000000e   Code   RO         1657    i.__scatterload_copy  mc_w.l(handlers.o)
    0x08005b1e   0x08005b1e   0x00000002   Code   RO         1658    i.__scatterload_null  mc_w.l(handlers.o)
    0x08005b20   0x08005b20   0x0000000e   Code   RO         1659    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x08005b2e   0x08005b2e   0x00000002   PAD
    0x08005b30   0x08005b30   0x0000000c   Code   RO         1633    i.__set_errno       mc_w.l(errno.o)
    0x08005b3c   0x08005b3c   0x00000270   Code   RO         1539    i.asin              m_ws.l(asin.o)
    0x08005dac   0x08005dac   0x00000220   Code   RO         1586    i.atan              m_ws.l(atan.o)
    0x08005fcc   0x08005fcc   0x0000019c   Code   RO         1544    i.atan2             m_ws.l(atan2.o)
    0x08006168   0x08006168   0x0000004c   Code   RO         1610    i.sqrt              m_ws.l(sqrt.o)
    0x080061b4   0x080061b4   0x00000004   PAD
    0x080061b8   0x080061b8   0x00000050   Data   RO         1540    .constdata          m_ws.l(asin.o)
    0x08006208   0x08006208   0x00000098   Data   RO         1587    .constdata          m_ws.l(atan.o)
    0x080062a0   0x080062a0   0x00000008   Data   RO         1608    .constdata          m_ws.l(qnan.o)
    0x080062a8   0x080062a8   0x00000040   Data   RO         1456    .rodata..L__const.WS2812B_Blink.stay_color  led.o
    0x080062e8   0x080062e8   0x00000004   Data   RO          673    .rodata.ADCPrescTable  stm32f10x_rcc.o
    0x080062ec   0x080062ec   0x00000010   Data   RO          672    .rodata.APBAHBPrescTable  stm32f10x_rcc.o
    0x080062fc   0x080062fc   0x00000020   Data   RO         1656    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08006320, Size: 0x00004b78, Max: 0x00005000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08006320   0x00000004   Data   RW         1634    .data               mc_w.l(errno.o)
    0x20000004   0x08006324   0x00000001   Data   RW         1211    .data.IIC_DELAY_US  iic.o
    0x20000005   0x08006325   0x00000001   PAD
    0x20000006   0x08006326   0x00000002   Data   RW         1406    .data.PWM_MAX       pwm.o
    0x20000008   0x08006328   0x00000004   Data   RW         1156    .data.SystemCoreClock  system_stm32f10x.o
    0x2000000c   0x0800632c   0x00000004   Data   RW         1383    .data.q0            mpu6050.o
    0x20000010        -       0x00000006   Zero   RW         1371    .bss.ACC_OFFSET_RAW  mpu6050.o
    0x20000016        -       0x00000002   Zero   RW         1325    .bss.ADC_Value      adc.o
    0x20000018        -       0x0000000c   Zero   RW         1380    .bss.Acc_M          mpu6050.o
    0x20000024        -       0x0000000c   Zero   RW         1390    .bss.Angle          mpu6050.o
    0x20000030        -       0x00000001   Zero   RW         1326    .bss.CanFly_Bat.cnt0  adc.o
    0x20000031        -       0x00000001   Zero   RW         1327    .bss.CanFly_Bat.cnt1  adc.o
    0x20000032        -       0x00000001   Zero   RW         1328    .bss.CanFly_Bat.index  adc.o
    0x20000033   0x08006330   0x00000001   PAD
    0x20000034        -       0x0000000c   Zero   RW         1379    .bss.CanFly_Calcu_Position.acc_old  mpu6050.o
    0x20000040        -       0x00000006   Zero   RW         1372    .bss.GYRO_OFFSET_RAW  mpu6050.o
    0x20000046   0x08006330   0x00000002   PAD
    0x20000048        -       0x0000000c   Zero   RW         1382    .bss.Gyr_D          mpu6050.o
    0x20000054        -       0x0000000c   Zero   RW         1381    .bss.Gyr_R          mpu6050.o
    0x20000060        -       0x00000001   Zero   RW         1210    .bss.IIC_Config.isInit  iic.o
    0x20000061   0x08006330   0x00000003   PAD
    0x20000064        -       0x00000004   Zero   RW         1480    .bss.IS_10HZ.last_ms  tick.o
    0x20000068        -       0x00000004   Zero   RW         1478    .bss.IS_200HZ.last_ms  tick.o
    0x2000006c        -       0x00000004   Zero   RW         1481    .bss.IS_2HZ.last_ms  tick.o
    0x20000070        -       0x00000001   Zero   RW         1460    .bss.LED_Blink.flag  led.o
    0x20000071   0x08006330   0x00000001   PAD
    0x20000072        -       0x000000c2   Zero   RW         1455    .bss.LED_Buffer     led.o
    0x20000134        -       0x00000006   Zero   RW         1369    .bss.MPU6050_ACC_RAW  mpu6050.o
    0x2000013a        -       0x0000000e   Zero   RW         1373    .bss.MPU6050_Buffer  mpu6050.o
    0x20000148        -       0x00000006   Zero   RW         1370    .bss.MPU6050_GYRO_RAW  mpu6050.o
    0x2000014e   0x08006330   0x00000002   PAD
    0x20000150        -       0x00000038   Zero   RW         1500    .bss.PID_ALT        pid.o
    0x20000188        -       0x00000038   Zero   RW         1501    .bss.PID_ALT_Rate   pid.o
    0x200001c0        -       0x00000038   Zero   RW         1495    .bss.PID_PIT_Angle  pid.o
    0x200001f8        -       0x00000038   Zero   RW         1498    .bss.PID_PIT_Rate   pid.o
    0x20000230        -       0x00000038   Zero   RW         1494    .bss.PID_ROL_Angle  pid.o
    0x20000268        -       0x00000038   Zero   RW         1497    .bss.PID_ROL_Rate   pid.o
    0x200002a0        -       0x00000038   Zero   RW         1496    .bss.PID_YAW_Angle  pid.o
    0x200002d8        -       0x00000038   Zero   RW         1499    .bss.PID_YAW_Rate   pid.o
    0x20000310        -       0x00000001   Zero   RW         1459    .bss.WS2812B_Blink.change  led.o
    0x20000311   0x08006330   0x00000001   PAD
    0x20000312        -       0x0000000c   Zero   RW         1329    .bss.adc_temp       adc.o
    0x2000031e   0x08006330   0x00000002   PAD
    0x20000320        -       0x0000083c   Zero   RW         1115    .bss.canfly         main.o
    0x20000b5c        -       0x00000004   Zero   RW         1387    .bss.exInt          mpu6050.o
    0x20000b60        -       0x00000004   Zero   RW         1388    .bss.eyInt          mpu6050.o
    0x20000b64        -       0x00000004   Zero   RW         1389    .bss.ezInt          mpu6050.o
    0x20000b68        -       0x00000002   Zero   RW         1172    .bss.fac_ms         delay.o
    0x20000b6a        -       0x00000001   Zero   RW         1171    .bss.fac_us         delay.o
    0x20000b6b   0x08006330   0x00000001   PAD
    0x20000b6c        -       0x00000004   Zero   RW         1384    .bss.q1             mpu6050.o
    0x20000b70        -       0x00000004   Zero   RW         1385    .bss.q2             mpu6050.o
    0x20000b74        -       0x00000004   Zero   RW         1386    .bss.q3             mpu6050.o
    0x20000b78        -       0x00004000   Zero   RW         1529    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       712          0          0          0         17       3085   adc.o
       758          0          0          0          0       1205   control.o
       348          0          0          0          3       1423   delay.o
        12          0          0          0          0        625   gpio.o
      1538          0          0          1          1       4204   iic.o
      1546          0         64          0        196       6738   led.o
       132          0          0          0       2108       1422   main.o
       250          0          0          0          0       2997   misc.o
      3162          0          0          4        122       7060   mpu6050.o
       686          0          0          0        448       1710   pid.o
      2666          0          0          0          0       8306   protocol.o
       600          0          0          2          0       3494   pwm.o
        36          8        236          0      16384        928   startup_stm32f10x_md.o
       922          0          0          0          0       8588   stm32f10x_adc.o
       628          0          0          0          0       3705   stm32f10x_dma.o
       430          0          0          0          0       5529   stm32f10x_gpio.o
        26          0          0          0          0       1008   stm32f10x_it.o
       694          0         20          0          0       6848   stm32f10x_rcc.o
      2808          0          0          0          0      20161   stm32f10x_tim.o
       990          0          0          0          0       7321   stm32f10x_usart.o
       400          0          0          4          0       2732   system_stm32f10x.o
       236          0          0          0         12       1124   tick.o
       192          0          0          0          0       3481   timer.o
       668          0          0          0          0       5670   usart.o

    ----------------------------------------------------------------------
     20558          8        352         12      19304     109364   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       118          0          0          1         13          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       624         52         80          0          0        168   asin.o
       544         70        152          0          0        124   atan.o
       412         38          0          0          0        144   atan2.o
        38          6          0          0          0        272   dunder.o
        40          0          0          0          0         68   fpclassify.o
       170          0          0          0          0         96   poly.o
         0          0          8          0          0          0   qnan.o
        76          0          0          0          0         84   sqrt.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        12          6          0          4          0         68   errno.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0        108   memseta.o
        48          0          0          0          0         68   cdcmple.o
        56          0          0          0          0         88   d2f.o
       334          0          0          0          0        148   dadd.o
        54          0          0          0          0         80   dcmpge.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
       228          0          0          0          0         96   dmul.o
        46          0          0          0          0         80   dscalb.o
       162          0          0          0          0        100   dsqrt.o
        38          0          0          0          0         68   f2d.o
       176          0          0          0          0        140   fadd.o
        28          0          0          0          0         68   fcmpeq.o
        28          0          0          0          0         68   fcmpge.o
        28          0          0          0          0         68   fcmpgt.o
        28          0          0          0          0         68   fcmple.o
       124          0          0          0          0         88   fdiv.o
       110          0          0          0          0        168   fepilogue.o
        50          0          0          0          0         68   ffixi.o
        18          0          0          0          0         68   fflti.o
        10          0          0          0          0         68   ffltui.o
       100          0          0          0          0         76   fmul.o

    ----------------------------------------------------------------------
      4222        188        240          4          0       3356   Library Totals
        12          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1904        166        240          0          0        956   m_ws.l
       232         22          0          4          0        448   mc_w.l
      2074          0          0          0          0       1952   mf_w.l

    ----------------------------------------------------------------------
      4222        188        240          4          0       3356   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     24780        196        592         16      19304     110664   Grand Totals
     24780        196        592         16      19304     110664   ELF Image Totals
     24780        196        592         16          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                25372 (  24.78kB)
    Total RW  Size (RW Data + ZI Data)             19320 (  18.87kB)
    Total ROM Size (Code + RO Data + RW Data)      25388 (  24.79kB)

==============================================================================

